

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jun 20 09:04:34 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 2.00
    27                           ; Generated 27/05/2018 GMT
    28                           ; 
    29                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F26K22 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _ANSELCbits	set	3898
    61  0000                     _ANSELBbits	set	3897
    62  0000                     _LATCbits	set	3979
    63  0000                     _RCREG1	set	4014
    64  0000                     _TXREG1	set	4013
    65  0000                     _SPBRGH1	set	4016
    66  0000                     _SPBRG1	set	4015
    67  0000                     _BAUDCON1bits	set	4024
    68  0000                     _PIE1bits	set	3997
    69  0000                     _RCSTA1bits	set	4011
    70  0000                     _TXSTA1bits	set	4012
    71  0000                     _RCSTA1	set	4011
    72  0000                     _TXSTA1	set	4012
    73  0000                     _TRISCbits	set	3988
    74  0000                     _PIR3bits	set	4004
    75  0000                     _SSP2BUF	set	3951
    76  0000                     _SSP2CON1	set	3948
    77  0000                     _SSP2STATbits	set	3949
    78  0000                     _TRISBbits	set	3987
    79  0000                     _LATBbits	set	3978
    80  0000                     _PEIE	set	32662
    81  0000                     _RCIE	set	31981
    82  0000                     _RCIF	set	31989
    83                           
    84                           	psect	mediumconst
    85  00FCF4                     __pmediumconst:
    86                           	opt stack 0
    87  00FCF4  00                 	db	0
    88  00FCF5                     
    89                           ; BSR set to: 15
    90  00FCF5  6D                 	db	109	;'m'
    91  00FCF6  6F                 	db	111	;'o'
    92  00FCF7  64                 	db	100	;'d'
    93  00FCF8  65                 	db	101	;'e'
    94  00FCF9  20                 	db	32
    95  00FCFA  3D                 	db	61	;'='
    96  00FCFB  20                 	db	32
    97  00FCFC  4C                 	db	76	;'L'
    98  00FCFD  6F                 	db	111	;'o'
    99  00FCFE  52                 	db	82	;'R'
   100  00FCFF  61                 	db	97	;'a'
   101  00FD00  20                 	db	32
   102  00FD01  77                 	db	119	;'w'
   103  00FD02  69                 	db	105	;'i'
   104  00FD03  74                 	db	116	;'t'
   105  00FD04  68                 	db	104	;'h'
   106  00FD05  20                 	db	32
   107  00FD06  46                 	db	70	;'F'
   108  00FD07  53                 	db	83	;'S'
   109  00FD08  4B                 	db	75	;'K'
   110  00FD09  20                 	db	32
   111  00FD0A  72                 	db	114	;'r'
   112  00FD0B  65                 	db	101	;'e'
   113  00FD0C  67                 	db	103	;'g'
   114  00FD0D  69                 	db	105	;'i'
   115  00FD0E  73                 	db	115	;'s'
   116  00FD0F  74                 	db	116	;'t'
   117  00FD10  65                 	db	101	;'e'
   118  00FD11  72                 	db	114	;'r'
   119  00FD12  73                 	db	115	;'s'
   120  00FD13  20                 	db	32
   121  00FD14  61                 	db	97	;'a'
   122  00FD15  63                 	db	99	;'c'
   123  00FD16  63                 	db	99	;'c'
   124  00FD17  65                 	db	101	;'e'
   125  00FD18  73                 	db	115	;'s'
   126  00FD19  73                 	db	115	;'s'
   127  00FD1A  00                 	db	0
   128  00FD1B                     
   129                           ; BSR set to: 15
   130  00FD1B  63                 	db	99	;'c'
   131  00FD1C  6F                 	db	111	;'o'
   132  00FD1D  6E                 	db	110	;'n'
   133  00FD1E  66                 	db	102	;'f'
   134  00FD1F  69                 	db	105	;'i'
   135  00FD20  67                 	db	103	;'g'
   136  00FD21  75                 	db	117	;'u'
   137  00FD22  72                 	db	114	;'r'
   138  00FD23  61                 	db	97	;'a'
   139  00FD24  74                 	db	116	;'t'
   140  00FD25  69                 	db	105	;'i'
   141  00FD26  6F                 	db	111	;'o'
   142  00FD27  6E                 	db	110	;'n'
   143  00FD28  20                 	db	32
   144  00FD29  72                 	db	114	;'r'
   145  00FD2A  65                 	db	101	;'e'
   146  00FD2B  67                 	db	103	;'g'
   147  00FD2C  69                 	db	105	;'i'
   148  00FD2D  73                 	db	115	;'s'
   149  00FD2E  74                 	db	116	;'t'
   150  00FD2F  65                 	db	101	;'e'
   151  00FD30  72                 	db	114	;'r'
   152  00FD31  73                 	db	115	;'s'
   153  00FD32  20                 	db	32
   154  00FD33  63                 	db	99	;'c'
   155  00FD34  6F                 	db	111	;'o'
   156  00FD35  6E                 	db	110	;'n'
   157  00FD36  74                 	db	116	;'t'
   158  00FD37  65                 	db	101	;'e'
   159  00FD38  6E                 	db	110	;'n'
   160  00FD39  74                 	db	116	;'t'
   161  00FD3A  3A                 	db	58	;':'
   162  00FD3B  00                 	db	0
   163  00FD3C                     
   164                           ; BSR set to: 15
   165  00FD3C  52                 	db	82	;'R'
   166  00FD3D  45                 	db	69	;'E'
   167  00FD3E  47                 	db	71	;'G'
   168  00FD3F  5F                 	db	95	;'_'
   169  00FD40  44                 	db	68	;'D'
   170  00FD41  45                 	db	69	;'E'
   171  00FD42  54                 	db	84	;'T'
   172  00FD43  45                 	db	69	;'E'
   173  00FD44  43                 	db	67	;'C'
   174  00FD45  54                 	db	84	;'T'
   175  00FD46  49                 	db	73	;'I'
   176  00FD47  4F                 	db	79	;'O'
   177  00FD48  4E                 	db	78	;'N'
   178  00FD49  5F                 	db	95	;'_'
   179  00FD4A  54                 	db	84	;'T'
   180  00FD4B  48                 	db	72	;'H'
   181  00FD4C  52                 	db	82	;'R'
   182  00FD4D  45                 	db	69	;'E'
   183  00FD4E  53                 	db	83	;'S'
   184  00FD4F  48                 	db	72	;'H'
   185  00FD50  4F                 	db	79	;'O'
   186  00FD51  4C                 	db	76	;'L'
   187  00FD52  44                 	db	68	;'D'
   188  00FD53  20                 	db	32
   189  00FD54  3D                 	db	61	;'='
   190  00FD55  20                 	db	32
   191  00FD56  30                 	db	48	;'0'
   192  00FD57  78                 	db	120	;'x'
   193  00FD58  00                 	db	0
   194  00FD59                     
   195                           ; BSR set to: 15
   196  00FD59  52                 	db	82	;'R'
   197  00FD5A  45                 	db	69	;'E'
   198  00FD5B  47                 	db	71	;'G'
   199  00FD5C  5F                 	db	95	;'_'
   200  00FD5D  4D                 	db	77	;'M'
   201  00FD5E  41                 	db	65	;'A'
   202  00FD5F  58                 	db	88	;'X'
   203  00FD60  5F                 	db	95	;'_'
   204  00FD61  50                 	db	80	;'P'
   205  00FD62  41                 	db	65	;'A'
   206  00FD63  59                 	db	89	;'Y'
   207  00FD64  4C                 	db	76	;'L'
   208  00FD65  4F                 	db	79	;'O'
   209  00FD66  41                 	db	65	;'A'
   210  00FD67  44                 	db	68	;'D'
   211  00FD68  5F                 	db	95	;'_'
   212  00FD69  4C                 	db	76	;'L'
   213  00FD6A  45                 	db	69	;'E'
   214  00FD6B  4E                 	db	78	;'N'
   215  00FD6C  47                 	db	71	;'G'
   216  00FD6D  54                 	db	84	;'T'
   217  00FD6E  48                 	db	72	;'H'
   218  00FD6F  20                 	db	32
   219  00FD70  3D                 	db	61	;'='
   220  00FD71  20                 	db	32
   221  00FD72  30                 	db	48	;'0'
   222  00FD73  78                 	db	120	;'x'
   223  00FD74  00                 	db	0
   224  00FD75                     
   225                           ; BSR set to: 15
   226  00FD75  43                 	db	67	;'C'
   227  00FD76  68                 	db	104	;'h'
   228  00FD77  61                 	db	97	;'a'
   229  00FD78  6E                 	db	110	;'n'
   230  00FD79  6E                 	db	110	;'n'
   231  00FD7A  65                 	db	101	;'e'
   232  00FD7B  6C                 	db	108	;'l'
   233  00FD7C  20                 	db	32
   234  00FD7D  41                 	db	65	;'A'
   235  00FD7E  63                 	db	99	;'c'
   236  00FD7F  74                 	db	116	;'t'
   237  00FD80  69                 	db	105	;'i'
   238  00FD81  76                 	db	118	;'v'
   239  00FD82  69                 	db	105	;'i'
   240  00FD83  74                 	db	116	;'t'
   241  00FD84  79                 	db	121	;'y'
   242  00FD85  20                 	db	32
   243  00FD86  44                 	db	68	;'D'
   244  00FD87  65                 	db	101	;'e'
   245  00FD88  74                 	db	116	;'t'
   246  00FD89  65                 	db	101	;'e'
   247  00FD8A  63                 	db	99	;'c'
   248  00FD8B  74                 	db	116	;'t'
   249  00FD8C  69                 	db	105	;'i'
   250  00FD8D  6F                 	db	111	;'o'
   251  00FD8E  6E                 	db	110	;'n'
   252  00FD8F  00                 	db	0
   253  00FD90                     
   254                           ; BSR set to: 15
   255  00FD90  52                 	db	82	;'R'
   256  00FD91  45                 	db	69	;'E'
   257  00FD92  47                 	db	71	;'G'
   258  00FD93  5F                 	db	95	;'_'
   259  00FD94  50                 	db	80	;'P'
   260  00FD95  52                 	db	82	;'R'
   261  00FD96  45                 	db	69	;'E'
   262  00FD97  41                 	db	65	;'A'
   263  00FD98  4D                 	db	77	;'M'
   264  00FD99  42                 	db	66	;'B'
   265  00FD9A  4C                 	db	76	;'L'
   266  00FD9B  45                 	db	69	;'E'
   267  00FD9C  5F                 	db	95	;'_'
   268  00FD9D  4C                 	db	76	;'L'
   269  00FD9E  53                 	db	83	;'S'
   270  00FD9F  42                 	db	66	;'B'
   271  00FDA0  5F                 	db	95	;'_'
   272  00FDA1  4C                 	db	76	;'L'
   273  00FDA2  4F                 	db	79	;'O'
   274  00FDA3  52                 	db	82	;'R'
   275  00FDA4  41                 	db	65	;'A'
   276  00FDA5  20                 	db	32
   277  00FDA6  3D                 	db	61	;'='
   278  00FDA7  20                 	db	32
   279  00FDA8  30                 	db	48	;'0'
   280  00FDA9  78                 	db	120	;'x'
   281  00FDAA  00                 	db	0
   282  00FDAB                     
   283                           ; BSR set to: 15
   284  00FDAB  52                 	db	82	;'R'
   285  00FDAC  45                 	db	69	;'E'
   286  00FDAD  47                 	db	71	;'G'
   287  00FDAE  5F                 	db	95	;'_'
   288  00FDAF  50                 	db	80	;'P'
   289  00FDB0  52                 	db	82	;'R'
   290  00FDB1  45                 	db	69	;'E'
   291  00FDB2  41                 	db	65	;'A'
   292  00FDB3  4D                 	db	77	;'M'
   293  00FDB4  42                 	db	66	;'B'
   294  00FDB5  4C                 	db	76	;'L'
   295  00FDB6  45                 	db	69	;'E'
   296  00FDB7  5F                 	db	95	;'_'
   297  00FDB8  4D                 	db	77	;'M'
   298  00FDB9  53                 	db	83	;'S'
   299  00FDBA  42                 	db	66	;'B'
   300  00FDBB  5F                 	db	95	;'_'
   301  00FDBC  4C                 	db	76	;'L'
   302  00FDBD  4F                 	db	79	;'O'
   303  00FDBE  52                 	db	82	;'R'
   304  00FDBF  41                 	db	65	;'A'
   305  00FDC0  20                 	db	32
   306  00FDC1  3D                 	db	61	;'='
   307  00FDC2  20                 	db	32
   308  00FDC3  30                 	db	48	;'0'
   309  00FDC4  78                 	db	120	;'x'
   310  00FDC5  00                 	db	0
   311  00FDC6                     
   312                           ; BSR set to: 15
   313  00FDC6  52                 	db	82	;'R'
   314  00FDC7  45                 	db	69	;'E'
   315  00FDC8  47                 	db	71	;'G'
   316  00FDC9  5F                 	db	95	;'_'
   317  00FDCA  46                 	db	70	;'F'
   318  00FDCB  49                 	db	73	;'I'
   319  00FDCC  46                 	db	70	;'F'
   320  00FDCD  4F                 	db	79	;'O'
   321  00FDCE  5F                 	db	95	;'_'
   322  00FDCF  52                 	db	82	;'R'
   323  00FDD0  58                 	db	88	;'X'
   324  00FDD1  5F                 	db	95	;'_'
   325  00FDD2  42                 	db	66	;'B'
   326  00FDD3  41                 	db	65	;'A'
   327  00FDD4  53                 	db	83	;'S'
   328  00FDD5  45                 	db	69	;'E'
   329  00FDD6  5F                 	db	95	;'_'
   330  00FDD7  41                 	db	65	;'A'
   331  00FDD8  44                 	db	68	;'D'
   332  00FDD9  44                 	db	68	;'D'
   333  00FDDA  52                 	db	82	;'R'
   334  00FDDB  20                 	db	32
   335  00FDDC  3D                 	db	61	;'='
   336  00FDDD  20                 	db	32
   337  00FDDE  30                 	db	48	;'0'
   338  00FDDF  78                 	db	120	;'x'
   339  00FDE0  00                 	db	0
   340  00FDE1                     
   341                           ; BSR set to: 15
   342  00FDE1  52                 	db	82	;'R'
   343  00FDE2  45                 	db	69	;'E'
   344  00FDE3  47                 	db	71	;'G'
   345  00FDE4  5F                 	db	95	;'_'
   346  00FDE5  46                 	db	70	;'F'
   347  00FDE6  49                 	db	73	;'I'
   348  00FDE7  46                 	db	70	;'F'
   349  00FDE8  4F                 	db	79	;'O'
   350  00FDE9  5F                 	db	95	;'_'
   351  00FDEA  54                 	db	84	;'T'
   352  00FDEB  58                 	db	88	;'X'
   353  00FDEC  5F                 	db	95	;'_'
   354  00FDED  42                 	db	66	;'B'
   355  00FDEE  41                 	db	65	;'A'
   356  00FDEF  53                 	db	83	;'S'
   357  00FDF0  45                 	db	69	;'E'
   358  00FDF1  5F                 	db	95	;'_'
   359  00FDF2  41                 	db	65	;'A'
   360  00FDF3  44                 	db	68	;'D'
   361  00FDF4  44                 	db	68	;'D'
   362  00FDF5  52                 	db	82	;'R'
   363  00FDF6  20                 	db	32
   364  00FDF7  3D                 	db	61	;'='
   365  00FDF8  20                 	db	32
   366  00FDF9  30                 	db	48	;'0'
   367  00FDFA  78                 	db	120	;'x'
   368  00FDFB  00                 	db	0
   369  00FDFC                     
   370                           ; BSR set to: 15
   371  00FDFC  52                 	db	82	;'R'
   372  00FDFD  45                 	db	69	;'E'
   373  00FDFE  47                 	db	71	;'G'
   374  00FDFF  5F                 	db	95	;'_'
   375  00FE00  53                 	db	83	;'S'
   376  00FE01  59                 	db	89	;'Y'
   377  00FE02  4D                 	db	77	;'M'
   378  00FE03  42                 	db	66	;'B'
   379  00FE04  5F                 	db	95	;'_'
   380  00FE05  54                 	db	84	;'T'
   381  00FE06  49                 	db	73	;'I'
   382  00FE07  4D                 	db	77	;'M'
   383  00FE08  45                 	db	69	;'E'
   384  00FE09  4F                 	db	79	;'O'
   385  00FE0A  55                 	db	85	;'U'
   386  00FE0B  54                 	db	84	;'T'
   387  00FE0C  5F                 	db	95	;'_'
   388  00FE0D  4C                 	db	76	;'L'
   389  00FE0E  53                 	db	83	;'S'
   390  00FE0F  42                 	db	66	;'B'
   391  00FE10  20                 	db	32
   392  00FE11  3D                 	db	61	;'='
   393  00FE12  20                 	db	32
   394  00FE13  30                 	db	48	;'0'
   395  00FE14  78                 	db	120	;'x'
   396  00FE15  00                 	db	0
   397  00FE16                     
   398                           ; BSR set to: 15
   399  00FE16  52                 	db	82	;'R'
   400  00FE17  45                 	db	69	;'E'
   401  00FE18  47                 	db	71	;'G'
   402  00FE19  5F                 	db	95	;'_'
   403  00FE1A  44                 	db	68	;'D'
   404  00FE1B  45                 	db	69	;'E'
   405  00FE1C  54                 	db	84	;'T'
   406  00FE1D  45                 	db	69	;'E'
   407  00FE1E  43                 	db	67	;'C'
   408  00FE1F  54                 	db	84	;'T'
   409  00FE20  5F                 	db	95	;'_'
   410  00FE21  4F                 	db	79	;'O'
   411  00FE22  50                 	db	80	;'P'
   412  00FE23  54                 	db	84	;'T'
   413  00FE24  49                 	db	73	;'I'
   414  00FE25  4D                 	db	77	;'M'
   415  00FE26  49                 	db	73	;'I'
   416  00FE27  5A                 	db	90	;'Z'
   417  00FE28  45                 	db	69	;'E'
   418  00FE29  20                 	db	32
   419  00FE2A  3D                 	db	61	;'='
   420  00FE2B  20                 	db	32
   421  00FE2C  30                 	db	48	;'0'
   422  00FE2D  78                 	db	120	;'x'
   423  00FE2E  00                 	db	0
   424  00FE2F                     
   425                           ; BSR set to: 15
   426  00FE2F  63                 	db	99	;'c'
   427  00FE30  6F                 	db	111	;'o'
   428  00FE31  6E                 	db	110	;'n'
   429  00FE32  74                 	db	116	;'t'
   430  00FE33  69                 	db	105	;'i'
   431  00FE34  6E                 	db	110	;'n'
   432  00FE35  75                 	db	117	;'u'
   433  00FE36  6F                 	db	111	;'o'
   434  00FE37  75                 	db	117	;'u'
   435  00FE38  73                 	db	115	;'s'
   436  00FE39  20                 	db	32
   437  00FE3A  72                 	db	114	;'r'
   438  00FE3B  65                 	db	101	;'e'
   439  00FE3C  63                 	db	99	;'c'
   440  00FE3D  65                 	db	101	;'e'
   441  00FE3E  69                 	db	105	;'i'
   442  00FE3F  76                 	db	118	;'v'
   443  00FE40  65                 	db	101	;'e'
   444  00FE41  20                 	db	32
   445  00FE42  6D                 	db	109	;'m'
   446  00FE43  6F                 	db	111	;'o'
   447  00FE44  64                 	db	100	;'d'
   448  00FE45  65                 	db	101	;'e'
   449  00FE46  00                 	db	0
   450  00FE47                     
   451                           ; BSR set to: 15
   452  00FE47  52                 	db	82	;'R'
   453  00FE48  45                 	db	69	;'E'
   454  00FE49  47                 	db	71	;'G'
   455  00FE4A  5F                 	db	95	;'_'
   456  00FE4B  49                 	db	73	;'I'
   457  00FE4C  52                 	db	82	;'R'
   458  00FE4D  51                 	db	81	;'Q'
   459  00FE4E  5F                 	db	95	;'_'
   460  00FE4F  46                 	db	70	;'F'
   461  00FE50  4C                 	db	76	;'L'
   462  00FE51  41                 	db	65	;'A'
   463  00FE52  47                 	db	71	;'G'
   464  00FE53  53                 	db	83	;'S'
   465  00FE54  5F                 	db	95	;'_'
   466  00FE55  4D                 	db	77	;'M'
   467  00FE56  41                 	db	65	;'A'
   468  00FE57  53                 	db	83	;'S'
   469  00FE58  4B                 	db	75	;'K'
   470  00FE59  20                 	db	32
   471  00FE5A  3D                 	db	61	;'='
   472  00FE5B  20                 	db	32
   473  00FE5C  30                 	db	48	;'0'
   474  00FE5D  78                 	db	120	;'x'
   475  00FE5E  00                 	db	0
   476  00FE5F                     
   477                           ; BSR set to: 15
   478  00FE5F  66                 	db	102	;'f'
   479  00FE60  72                 	db	114	;'r'
   480  00FE61  65                 	db	101	;'e'
   481  00FE62  71                 	db	113	;'q'
   482  00FE63  75                 	db	117	;'u'
   483  00FE64  65                 	db	101	;'e'
   484  00FE65  6E                 	db	110	;'n'
   485  00FE66  63                 	db	99	;'c'
   486  00FE67  79                 	db	121	;'y'
   487  00FE68  20                 	db	32
   488  00FE69  73                 	db	115	;'s'
   489  00FE6A  79                 	db	121	;'y'
   490  00FE6B  6E                 	db	110	;'n'
   491  00FE6C  74                 	db	116	;'t'
   492  00FE6D  68                 	db	104	;'h'
   493  00FE6E  65                 	db	101	;'e'
   494  00FE6F  73                 	db	115	;'s'
   495  00FE70  69                 	db	105	;'i'
   496  00FE71  73                 	db	115	;'s'
   497  00FE72  20                 	db	32
   498  00FE73  52                 	db	82	;'R'
   499  00FE74  58                 	db	88	;'X'
   500  00FE75  00                 	db	0
   501  00FE76                     
   502                           ; BSR set to: 15
   503  00FE76  66                 	db	102	;'f'
   504  00FE77  72                 	db	114	;'r'
   505  00FE78  65                 	db	101	;'e'
   506  00FE79  71                 	db	113	;'q'
   507  00FE7A  75                 	db	117	;'u'
   508  00FE7B  65                 	db	101	;'e'
   509  00FE7C  6E                 	db	110	;'n'
   510  00FE7D  63                 	db	99	;'c'
   511  00FE7E  79                 	db	121	;'y'
   512  00FE7F  20                 	db	32
   513  00FE80  73                 	db	115	;'s'
   514  00FE81  79                 	db	121	;'y'
   515  00FE82  6E                 	db	110	;'n'
   516  00FE83  74                 	db	116	;'t'
   517  00FE84  68                 	db	104	;'h'
   518  00FE85  65                 	db	101	;'e'
   519  00FE86  73                 	db	115	;'s'
   520  00FE87  69                 	db	105	;'i'
   521  00FE88  73                 	db	115	;'s'
   522  00FE89  20                 	db	32
   523  00FE8A  54                 	db	84	;'T'
   524  00FE8B  58                 	db	88	;'X'
   525  00FE8C  00                 	db	0
   526  00FE8D                     
   527                           ; BSR set to: 15
   528  00FE8D  52                 	db	82	;'R'
   529  00FE8E  45                 	db	69	;'E'
   530  00FE8F  47                 	db	71	;'G'
   531  00FE90  5F                 	db	95	;'_'
   532  00FE91  4D                 	db	77	;'M'
   533  00FE92  4F                 	db	79	;'O'
   534  00FE93  44                 	db	68	;'D'
   535  00FE94  45                 	db	69	;'E'
   536  00FE95  4D                 	db	77	;'M'
   537  00FE96  5F                 	db	95	;'_'
   538  00FE97  43                 	db	67	;'C'
   539  00FE98  4F                 	db	79	;'O'
   540  00FE99  4E                 	db	78	;'N'
   541  00FE9A  46                 	db	70	;'F'
   542  00FE9B  49                 	db	73	;'I'
   543  00FE9C  47                 	db	71	;'G'
   544  00FE9D  31                 	db	49	;'1'
   545  00FE9E  20                 	db	32
   546  00FE9F  3D                 	db	61	;'='
   547  00FEA0  20                 	db	32
   548  00FEA1  30                 	db	48	;'0'
   549  00FEA2  78                 	db	120	;'x'
   550  00FEA3  00                 	db	0
   551  00FEA4                     
   552                           ; BSR set to: 15
   553  00FEA4  52                 	db	82	;'R'
   554  00FEA5  45                 	db	69	;'E'
   555  00FEA6  47                 	db	71	;'G'
   556  00FEA7  5F                 	db	95	;'_'
   557  00FEA8  4D                 	db	77	;'M'
   558  00FEA9  4F                 	db	79	;'O'
   559  00FEAA  44                 	db	68	;'D'
   560  00FEAB  45                 	db	69	;'E'
   561  00FEAC  4D                 	db	77	;'M'
   562  00FEAD  5F                 	db	95	;'_'
   563  00FEAE  43                 	db	67	;'C'
   564  00FEAF  4F                 	db	79	;'O'
   565  00FEB0  4E                 	db	78	;'N'
   566  00FEB1  46                 	db	70	;'F'
   567  00FEB2  49                 	db	73	;'I'
   568  00FEB3  47                 	db	71	;'G'
   569  00FEB4  32                 	db	50	;'2'
   570  00FEB5  20                 	db	32
   571  00FEB6  3D                 	db	61	;'='
   572  00FEB7  20                 	db	32
   573  00FEB8  30                 	db	48	;'0'
   574  00FEB9  78                 	db	120	;'x'
   575  00FEBA  00                 	db	0
   576  00FEBB                     
   577                           ; BSR set to: 15
   578  00FEBB  52                 	db	82	;'R'
   579  00FEBC  45                 	db	69	;'E'
   580  00FEBD  47                 	db	71	;'G'
   581  00FEBE  5F                 	db	95	;'_'
   582  00FEBF  46                 	db	70	;'F'
   583  00FEC0  49                 	db	73	;'I'
   584  00FEC1  46                 	db	70	;'F'
   585  00FEC2  4F                 	db	79	;'O'
   586  00FEC3  5F                 	db	95	;'_'
   587  00FEC4  41                 	db	65	;'A'
   588  00FEC5  44                 	db	68	;'D'
   589  00FEC6  44                 	db	68	;'D'
   590  00FEC7  52                 	db	82	;'R'
   591  00FEC8  5F                 	db	95	;'_'
   592  00FEC9  50                 	db	80	;'P'
   593  00FECA  54                 	db	84	;'T'
   594  00FECB  52                 	db	82	;'R'
   595  00FECC  20                 	db	32
   596  00FECD  3D                 	db	61	;'='
   597  00FECE  20                 	db	32
   598  00FECF  30                 	db	48	;'0'
   599  00FED0  78                 	db	120	;'x'
   600  00FED1  00                 	db	0
   601  00FED2                     
   602                           ; BSR set to: 15
   603  00FED2  73                 	db	115	;'s'
   604  00FED3  69                 	db	105	;'i'
   605  00FED4  6E                 	db	110	;'n'
   606  00FED5  67                 	db	103	;'g'
   607  00FED6  6C                 	db	108	;'l'
   608  00FED7  65                 	db	101	;'e'
   609  00FED8  20                 	db	32
   610  00FED9  72                 	db	114	;'r'
   611  00FEDA  65                 	db	101	;'e'
   612  00FEDB  63                 	db	99	;'c'
   613  00FEDC  65                 	db	101	;'e'
   614  00FEDD  69                 	db	105	;'i'
   615  00FEDE  76                 	db	118	;'v'
   616  00FEDF  65                 	db	101	;'e'
   617  00FEE0  20                 	db	32
   618  00FEE1  6D                 	db	109	;'m'
   619  00FEE2  6F                 	db	111	;'o'
   620  00FEE3  64                 	db	100	;'d'
   621  00FEE4  65                 	db	101	;'e'
   622  00FEE5  00                 	db	0
   623  00FEE6                     
   624                           ; BSR set to: 15
   625  00FEE6  52                 	db	82	;'R'
   626  00FEE7  45                 	db	69	;'E'
   627  00FEE8  47                 	db	71	;'G'
   628  00FEE9  5F                 	db	95	;'_'
   629  00FEEA  48                 	db	72	;'H'
   630  00FEEB  4F                 	db	79	;'O'
   631  00FEEC  50                 	db	80	;'P'
   632  00FEED  5F                 	db	95	;'_'
   633  00FEEE  50                 	db	80	;'P'
   634  00FEEF  45                 	db	69	;'E'
   635  00FEF0  52                 	db	82	;'R'
   636  00FEF1  49                 	db	73	;'I'
   637  00FEF2  4F                 	db	79	;'O'
   638  00FEF3  44                 	db	68	;'D'
   639  00FEF4  20                 	db	32
   640  00FEF5  3D                 	db	61	;'='
   641  00FEF6  20                 	db	32
   642  00FEF7  30                 	db	48	;'0'
   643  00FEF8  78                 	db	120	;'x'
   644  00FEF9  00                 	db	0
   645  00FEFA                     
   646                           ; BSR set to: 15
   647  00FEFA  52                 	db	82	;'R'
   648  00FEFB  45                 	db	69	;'E'
   649  00FEFC  47                 	db	71	;'G'
   650  00FEFD  5F                 	db	95	;'_'
   651  00FEFE  53                 	db	83	;'S'
   652  00FEFF  59                 	db	89	;'Y'
   653  00FF00  4E                 	db	78	;'N'
   654  00FF01  43                 	db	67	;'C'
   655  00FF02  5F                 	db	95	;'_'
   656  00FF03  57                 	db	87	;'W'
   657  00FF04  4F                 	db	79	;'O'
   658  00FF05  52                 	db	82	;'R'
   659  00FF06  44                 	db	68	;'D'
   660  00FF07  20                 	db	32
   661  00FF08  3D                 	db	61	;'='
   662  00FF09  20                 	db	32
   663  00FF0A  30                 	db	48	;'0'
   664  00FF0B  78                 	db	120	;'x'
   665  00FF0C  00                 	db	0
   666  00FF0D                     
   667                           ; BSR set to: 15
   668  00FF0D  52                 	db	82	;'R'
   669  00FF0E  45                 	db	69	;'E'
   670  00FF0F  47                 	db	71	;'G'
   671  00FF10  5F                 	db	95	;'_'
   672  00FF11  50                 	db	80	;'P'
   673  00FF12  41                 	db	65	;'A'
   674  00FF13  5F                 	db	95	;'_'
   675  00FF14  43                 	db	67	;'C'
   676  00FF15  4F                 	db	79	;'O'
   677  00FF16  4E                 	db	78	;'N'
   678  00FF17  46                 	db	70	;'F'
   679  00FF18  49                 	db	73	;'I'
   680  00FF19  47                 	db	71	;'G'
   681  00FF1A  20                 	db	32
   682  00FF1B  3D                 	db	61	;'='
   683  00FF1C  20                 	db	32
   684  00FF1D  30                 	db	48	;'0'
   685  00FF1E  78                 	db	120	;'x'
   686  00FF1F  00                 	db	0
   687  00FF20                     
   688                           ; BSR set to: 15
   689  00FF20  52                 	db	82	;'R'
   690  00FF21  45                 	db	69	;'E'
   691  00FF22  47                 	db	71	;'G'
   692  00FF23  5F                 	db	95	;'_'
   693  00FF24  49                 	db	73	;'I'
   694  00FF25  4E                 	db	78	;'N'
   695  00FF26  56                 	db	86	;'V'
   696  00FF27  45                 	db	69	;'E'
   697  00FF28  52                 	db	82	;'R'
   698  00FF29  54                 	db	84	;'T'
   699  00FF2A  5F                 	db	95	;'_'
   700  00FF2B  49                 	db	73	;'I'
   701  00FF2C  51                 	db	81	;'Q'
   702  00FF2D  20                 	db	32
   703  00FF2E  3D                 	db	61	;'='
   704  00FF2F  20                 	db	32
   705  00FF30  30                 	db	48	;'0'
   706  00FF31  78                 	db	120	;'x'
   707  00FF32  00                 	db	0
   708  00FF33                     
   709                           ; BSR set to: 15
   710  00FF33  52                 	db	82	;'R'
   711  00FF34  45                 	db	69	;'E'
   712  00FF35  47                 	db	71	;'G'
   713  00FF36  5F                 	db	95	;'_'
   714  00FF37  49                 	db	73	;'I'
   715  00FF38  52                 	db	82	;'R'
   716  00FF39  51                 	db	81	;'Q'
   717  00FF3A  5F                 	db	95	;'_'
   718  00FF3B  46                 	db	70	;'F'
   719  00FF3C  4C                 	db	76	;'L'
   720  00FF3D  41                 	db	65	;'A'
   721  00FF3E  47                 	db	71	;'G'
   722  00FF3F  53                 	db	83	;'S'
   723  00FF40  20                 	db	32
   724  00FF41  3D                 	db	61	;'='
   725  00FF42  20                 	db	32
   726  00FF43  30                 	db	48	;'0'
   727  00FF44  78                 	db	120	;'x'
   728  00FF45  00                 	db	0
   729  00FF46                     
   730                           ; BSR set to: 15
   731  00FF46  30                 	db	48	;'0'
   732  00FF47  31                 	db	49	;'1'
   733  00FF48  32                 	db	50	;'2'
   734  00FF49  33                 	db	51	;'3'
   735  00FF4A  34                 	db	52	;'4'
   736  00FF4B  35                 	db	53	;'5'
   737  00FF4C  36                 	db	54	;'6'
   738  00FF4D  37                 	db	55	;'7'
   739  00FF4E  38                 	db	56	;'8'
   740  00FF4F  39                 	db	57	;'9'
   741  00FF50  41                 	db	65	;'A'
   742  00FF51  42                 	db	66	;'B'
   743  00FF52  43                 	db	67	;'C'
   744  00FF53  44                 	db	68	;'D'
   745  00FF54  45                 	db	69	;'E'
   746  00FF55  46                 	db	70	;'F'
   747  00FF56  00                 	db	0
   748  00FF57                     
   749                           ; BSR set to: 15
   750  00FF57  52                 	db	82	;'R'
   751  00FF58  45                 	db	69	;'E'
   752  00FF59  47                 	db	71	;'G'
   753  00FF5A  5F                 	db	95	;'_'
   754  00FF5B  46                 	db	70	;'F'
   755  00FF5C  52                 	db	82	;'R'
   756  00FF5D  46                 	db	70	;'F'
   757  00FF5E  5F                 	db	95	;'_'
   758  00FF5F  4C                 	db	76	;'L'
   759  00FF60  53                 	db	83	;'S'
   760  00FF61  42                 	db	66	;'B'
   761  00FF62  20                 	db	32
   762  00FF63  3D                 	db	61	;'='
   763  00FF64  20                 	db	32
   764  00FF65  30                 	db	48	;'0'
   765  00FF66  78                 	db	120	;'x'
   766  00FF67  00                 	db	0
   767  00FF68                     
   768                           ; BSR set to: 15
   769  00FF68  52                 	db	82	;'R'
   770  00FF69  45                 	db	69	;'E'
   771  00FF6A  47                 	db	71	;'G'
   772  00FF6B  5F                 	db	95	;'_'
   773  00FF6C  46                 	db	70	;'F'
   774  00FF6D  52                 	db	82	;'R'
   775  00FF6E  46                 	db	70	;'F'
   776  00FF6F  5F                 	db	95	;'_'
   777  00FF70  4D                 	db	77	;'M'
   778  00FF71  53                 	db	83	;'S'
   779  00FF72  42                 	db	66	;'B'
   780  00FF73  20                 	db	32
   781  00FF74  3D                 	db	61	;'='
   782  00FF75  20                 	db	32
   783  00FF76  30                 	db	48	;'0'
   784  00FF77  78                 	db	120	;'x'
   785  00FF78  00                 	db	0
   786  00FF79                     
   787                           ; BSR set to: 15
   788  00FF79  52                 	db	82	;'R'
   789  00FF7A  45                 	db	69	;'E'
   790  00FF7B  47                 	db	71	;'G'
   791  00FF7C  5F                 	db	95	;'_'
   792  00FF7D  46                 	db	70	;'F'
   793  00FF7E  52                 	db	82	;'R'
   794  00FF7F  46                 	db	70	;'F'
   795  00FF80  5F                 	db	95	;'_'
   796  00FF81  4D                 	db	77	;'M'
   797  00FF82  49                 	db	73	;'I'
   798  00FF83  44                 	db	68	;'D'
   799  00FF84  20                 	db	32
   800  00FF85  3D                 	db	61	;'='
   801  00FF86  20                 	db	32
   802  00FF87  30                 	db	48	;'0'
   803  00FF88  78                 	db	120	;'x'
   804  00FF89  00                 	db	0
   805  00FF8A                     
   806                           ; BSR set to: 15
   807  00FF8A  52                 	db	82	;'R'
   808  00FF8B  45                 	db	69	;'E'
   809  00FF8C  47                 	db	71	;'G'
   810  00FF8D  5F                 	db	95	;'_'
   811  00FF8E  4F                 	db	79	;'O'
   812  00FF8F  50                 	db	80	;'P'
   813  00FF90  5F                 	db	95	;'_'
   814  00FF91  4D                 	db	77	;'M'
   815  00FF92  4F                 	db	79	;'O'
   816  00FF93  44                 	db	68	;'D'
   817  00FF94  45                 	db	69	;'E'
   818  00FF95  20                 	db	32
   819  00FF96  3D                 	db	61	;'='
   820  00FF97  20                 	db	32
   821  00FF98  30                 	db	48	;'0'
   822  00FF99  78                 	db	120	;'x'
   823  00FF9A  00                 	db	0
   824  00FF9B                     
   825                           ; BSR set to: 15
   826  00FF9B  52                 	db	82	;'R'
   827  00FF9C  45                 	db	69	;'E'
   828  00FF9D  47                 	db	71	;'G'
   829  00FF9E  5F                 	db	95	;'_'
   830  00FF9F  50                 	db	80	;'P'
   831  00FFA0  41                 	db	65	;'A'
   832  00FFA1  5F                 	db	95	;'_'
   833  00FFA2  52                 	db	82	;'R'
   834  00FFA3  41                 	db	65	;'A'
   835  00FFA4  4D                 	db	77	;'M'
   836  00FFA5  50                 	db	80	;'P'
   837  00FFA6  20                 	db	32
   838  00FFA7  3D                 	db	61	;'='
   839  00FFA8  20                 	db	32
   840  00FFA9  30                 	db	48	;'0'
   841  00FFAA  78                 	db	120	;'x'
   842  00FFAB  00                 	db	0
   843  00FFAC                     
   844                           ; BSR set to: 15
   845  00FFAC  73                 	db	115	;'s'
   846  00FFAD  74                 	db	116	;'t'
   847  00FFAE  61                 	db	97	;'a'
   848  00FFAF  6E                 	db	110	;'n'
   849  00FFB0  64                 	db	100	;'d'
   850  00FFB1  62                 	db	98	;'b'
   851  00FFB2  79                 	db	121	;'y'
   852  00FFB3  20                 	db	32
   853  00FFB4  6D                 	db	109	;'m'
   854  00FFB5  6F                 	db	111	;'o'
   855  00FFB6  64                 	db	100	;'d'
   856  00FFB7  65                 	db	101	;'e'
   857  00FFB8  00                 	db	0
   858  00FFB9                     
   859                           ; BSR set to: 15
   860  00FFB9  52                 	db	82	;'R'
   861  00FFBA  45                 	db	69	;'E'
   862  00FFBB  47                 	db	71	;'G'
   863  00FFBC  5F                 	db	95	;'_'
   864  00FFBD  4C                 	db	76	;'L'
   865  00FFBE  4E                 	db	78	;'N'
   866  00FFBF  41                 	db	65	;'A'
   867  00FFC0  20                 	db	32
   868  00FFC1  3D                 	db	61	;'='
   869  00FFC2  20                 	db	32
   870  00FFC3  30                 	db	48	;'0'
   871  00FFC4  78                 	db	120	;'x'
   872  00FFC5  00                 	db	0
   873  00FFC6                     
   874                           ; BSR set to: 15
   875  00FFC6  52                 	db	82	;'R'
   876  00FFC7  45                 	db	69	;'E'
   877  00FFC8  47                 	db	71	;'G'
   878  00FFC9  5F                 	db	95	;'_'
   879  00FFCA  4F                 	db	79	;'O'
   880  00FFCB  43                 	db	67	;'C'
   881  00FFCC  50                 	db	80	;'P'
   882  00FFCD  20                 	db	32
   883  00FFCE  3D                 	db	61	;'='
   884  00FFCF  20                 	db	32
   885  00FFD0  30                 	db	48	;'0'
   886  00FFD1  78                 	db	120	;'x'
   887  00FFD2  00                 	db	0
   888  00FFD3                     
   889                           ; BSR set to: 15
   890  00FFD3  6D                 	db	109	;'m'
   891  00FFD4  6F                 	db	111	;'o'
   892  00FFD5  64                 	db	100	;'d'
   893  00FFD6  65                 	db	101	;'e'
   894  00FFD7  20                 	db	32
   895  00FFD8  3D                 	db	61	;'='
   896  00FFD9  20                 	db	32
   897  00FFDA  4C                 	db	76	;'L'
   898  00FFDB  6F                 	db	111	;'o'
   899  00FFDC  52                 	db	82	;'R'
   900  00FFDD  61                 	db	97	;'a'
   901  00FFDE  00                 	db	0
   902  00FFDF                     
   903                           ; BSR set to: 15
   904  00FFDF  6D                 	db	109	;'m'
   905  00FFE0  6F                 	db	111	;'o'
   906  00FFE1  64                 	db	100	;'d'
   907  00FFE2  65                 	db	101	;'e'
   908  00FFE3  20                 	db	32
   909  00FFE4  3D                 	db	61	;'='
   910  00FFE5  20                 	db	32
   911  00FFE6  46                 	db	70	;'F'
   912  00FFE7  53                 	db	83	;'S'
   913  00FFE8  4B                 	db	75	;'K'
   914  00FFE9  00                 	db	0
   915  00FFEA                     
   916                           ; BSR set to: 15
   917  00FFEA  73                 	db	115	;'s'
   918  00FFEB  6C                 	db	108	;'l'
   919  00FFEC  65                 	db	101	;'e'
   920  00FFED  65                 	db	101	;'e'
   921  00FFEE  70                 	db	112	;'p'
   922  00FFEF  20                 	db	32
   923  00FFF0  6D                 	db	109	;'m'
   924  00FFF1  6F                 	db	111	;'o'
   925  00FFF2  64                 	db	100	;'d'
   926  00FFF3  65                 	db	101	;'e'
   927  00FFF4  00                 	db	0
   928  00FFF5                     
   929                           ; BSR set to: 15
   930  00FFF5  54                 	db	84	;'T'
   931  00FFF6  58                 	db	88	;'X'
   932  00FFF7  20                 	db	32
   933  00FFF8  6D                 	db	109	;'m'
   934  00FFF9  6F                 	db	111	;'o'
   935  00FFFA  64                 	db	100	;'d'
   936  00FFFB  65                 	db	101	;'e'
   937  00FFFC  00                 	db	0
   938  00FFFD                     
   939                           ; BSR set to: 15
   940  00FFFD  20                 	db	32
   941  00FFFE  00                 	db	0
   942                           
   943                           ; #config settings
   944  00FFFF  00                 	db	0	; dummy byte at the end
   945  0000                     
   946                           	psect	cinit
   947  00F9BE                     __pcinit:
   948                           	opt stack 0
   949  00F9BE                     start_initialization:
   950                           	opt stack 0
   951  00F9BE                     __initialization:
   952                           	opt stack 0
   953  00F9BE                     end_of_initialization:
   954                           	opt stack 0
   955  00F9BE                     __end_of__initialization:
   956                           	opt stack 0
   957  00F9BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   958  00F9C0  6EF8               	movwf	tblptru,c
   959  00F9C2  0100               	movlb	0
   960  00F9C4  EF6C  F07D         	goto	_main	;jump to C main() function
   961                           tblptru	equ	0xFF8
   962                           
   963                           	psect	cstackBANK1
   964  000100                     __pcstackBANK1:
   965                           	opt stack 0
   966  000100                     main@buff:
   967                           	opt stack 0
   968                           
   969                           ; 256 bytes @ 0x0
   970  000100                     	ds	256
   971                           tblptru	equ	0xFF8
   972                           
   973                           	psect	cstackCOMRAM
   974  000001                     __pcstackCOMRAM:
   975                           	opt stack 0
   976  000001                     ??_ResetRFModule:
   977  000001                     ??_AntennaRX:
   978  000001                     SPITransfer@dummy_byte:
   979                           	opt stack 0
   980  000001                     SPIReceive@dummy_byte:
   981                           	opt stack 0
   982  000001                     UARTWriteByte@data:
   983                           	opt stack 0
   984  000001                     UARTInit@baudRate:
   985                           	opt stack 0
   986                           
   987                           ; 2 bytes @ 0x0
   988  000001                     	ds	1
   989  000002                     SPITransfer@data_out:
   990                           	opt stack 0
   991  000002                     SPIReceive@data_out:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x1
   995  000002                     	ds	1
   996  000003                     SPIReceive@data_in:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x2
  1000  000003                     	ds	1
  1001  000004                     ReadSXRegister@RegValue:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x3
  1005  000004                     	ds	1
  1006  000005                     ReadSXRegister@address:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x4
  1010  000005                     	ds	1
  1011  000006                     WriteSXRegister@data:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x5
  1015  000006                     	ds	1
  1016  000007                     WriteSXRegister@address:
  1017                           	opt stack 0
  1018                           
  1019                           ; 1 bytes @ 0x6
  1020  000007                     	ds	1
  1021  000008                     ??_initLoRaRx:
  1022  000008                     readLoRaData@buff:
  1023                           	opt stack 0
  1024                           
  1025                           ; 2 bytes @ 0x7
  1026  000008                     	ds	2
  1027  00000A                     readLoRaData@RXNumberOfBytes:
  1028                           	opt stack 0
  1029                           
  1030                           ; 1 bytes @ 0x9
  1031  00000A                     	ds	1
  1032  00000B                     readLoRaData@i:
  1033                           	opt stack 0
  1034                           
  1035                           ; 1 bytes @ 0xA
  1036  00000B                     	ds	1
  1037  00000C                     readLoRaData@reg_val:
  1038                           	opt stack 0
  1039                           
  1040                           ; 1 bytes @ 0xB
  1041  00000C                     	ds	1
  1042  00000D                     
  1043                           ; 2 bytes @ 0xC
  1044  00000D                     	ds	2
  1045  00000F                     
  1046                           ; 3 bytes @ 0xE
  1047  00000F                     	ds	3
  1048  000012                     main@i:
  1049                           	opt stack 0
  1050                           
  1051                           ; 2 bytes @ 0x11
  1052  000012                     	ds	2
  1053                           tblptru	equ	0xFF8
  1054                           
  1055 ;;
  1056 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1057 ;;
  1058 ;; *************** function _main *****************
  1059 ;; Defined at:
  1060 ;;		line 85 in file "RXcontinuous_LoRa.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  argc            2   12[COMRAM] int 
  1063 ;;  argv            3   14[COMRAM] PTR PTR unsigned char 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  i               2   17[COMRAM] int 
  1066 ;;  buff          256    0[BANK1 ] unsigned char [256]
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  2   12[COMRAM] int 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1076 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Locals:         2       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Totals:         7       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;Total ram usage:      263 bytes
  1081 ;; Hardware stack levels required when called:    4
  1082 ;; This function calls:
  1083 ;;		_UARTInit
  1084 ;;		_UARTWriteByte
  1085 ;;		_initLoRaRx
  1086 ;;		_readLoRaData
  1087 ;; This function is called by:
  1088 ;;		Startup code after reset
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text0
  1093  00FAD8                     __ptext0:
  1094                           	opt stack 0
  1095  00FAD8                     _main:
  1096                           	opt stack 27
  1097                           
  1098                           ;incstack = 0
  1099  00FAD8  0E4B               	movlw	75
  1100  00FADA  6E02               	movwf	UARTInit@baudRate+1,c
  1101  00FADC  0E00               	movlw	0
  1102  00FADE  6E01               	movwf	UARTInit@baudRate,c
  1103  00FAE0  EC51  F07D         	call	_UARTInit	;wreg free
  1104  00FAE4  EC92  F07D         	call	_initLoRaRx	;wreg free
  1105  00FAE8                     l1352:
  1106  00FAE8  0E00               	movlw	low main@buff
  1107  00FAEA  6E08               	movwf	readLoRaData@buff,c
  1108  00FAEC  0E01               	movlw	high main@buff
  1109  00FAEE  6E09               	movwf	readLoRaData@buff+1,c
  1110  00FAF0  ECC8  F07D         	call	_readLoRaData	;wreg free
  1111  00FAF4  0E00               	movlw	0
  1112  00FAF6  6E13               	movwf	main@i+1,c
  1113  00FAF8  0E00               	movlw	0
  1114  00FAFA  6E12               	movwf	main@i,c
  1115  00FAFC                     l1356:
  1116  00FAFC  BE13               	btfsc	main@i+1,7,c
  1117  00FAFE  D006               	goto	l14
  1118  00FB00  5013               	movf	main@i+1,w,c
  1119  00FB02  E1F2               	bnz	l1352
  1120  00FB04  0E0D               	movlw	13
  1121  00FB06  5C12               	subwf	main@i,w,c
  1122  00FB08  B0D8               	btfsc	status,0,c
  1123  00FB0A  D7EE               	goto	l13
  1124  00FB0C                     l14:
  1125  00FB0C  0E00               	movlw	low main@buff
  1126  00FB0E  2412               	addwf	main@i,w,c
  1127  00FB10  6ED9               	movwf	fsr2l,c
  1128  00FB12  0E01               	movlw	high main@buff
  1129  00FB14  2013               	addwfc	main@i+1,w,c
  1130  00FB16  6EDA               	movwf	fsr2h,c
  1131  00FB18  50DF               	movf	indf2,w,c
  1132  00FB1A  ECE4  F07C         	call	_UARTWriteByte
  1133  00FB1E  4A12               	infsnz	main@i,f,c
  1134  00FB20  2A13               	incf	main@i+1,f,c
  1135  00FB22  D7EC               	goto	l1356
  1136  00FB24                     __end_of_main:
  1137                           	opt stack 0
  1138                           tblptru	equ	0xFF8
  1139                           indf2	equ	0xFDF
  1140                           fsr2h	equ	0xFDA
  1141                           fsr2l	equ	0xFD9
  1142                           status	equ	0xFD8
  1143                           
  1144 ;; *************** function _readLoRaData *****************
  1145 ;; Defined at:
  1146 ;;		line 77 in file "commLora.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  buff            2    7[COMRAM] PTR unsigned char 
  1149 ;;		 -> main@buff(256), 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  reg_val         1   11[COMRAM] unsigned char 
  1152 ;;  i               1   10[COMRAM] unsigned char 
  1153 ;;  RXNumberOfBy    1    9[COMRAM] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;Total ram usage:        5 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    2
  1170 ;; This function calls:
  1171 ;;		_ReadSXRegister
  1172 ;;		_WriteSXRegister
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text1
  1179  00FB90                     __ptext1:
  1180                           	opt stack 0
  1181  00FB90                     _readLoRaData:
  1182                           	opt stack 28
  1183                           
  1184                           ;commLora.c: 78:     uint8_t reg_val;;commLora.c: 79:     uint8_t RXNumberOfBytes;;commL
      +                          ora.c: 80:     uint8_t i;;commLora.c: 83:     reg_val = ReadSXRegister(0x12);
  1185                           
  1186                           ;incstack = 0
  1187  00FB90  0E12               	movlw	18
  1188  00FB92  EC1F  F07D         	call	_ReadSXRegister
  1189  00FB96  D003               	goto	L1
  1190  00FB98                     
  1191                           ;commLora.c: 85:         reg_val = ReadSXRegister(0x12);
  1192  00FB98  0E12               	movlw	18
  1193  00FB9A  EC1F  F07D         	call	_ReadSXRegister
  1194  00FB9E                     L1:
  1195  00FB9E  6E0C               	movwf	readLoRaData@reg_val,c
  1196                           
  1197                           ;commLora.c: 84:     while ((reg_val & 0x10) == 0x00) {
  1198                           
  1199                           ;commLora.c: 86:     }
  1200  00FBA0  A80C               	btfss	readLoRaData@reg_val,4,c
  1201  00FBA2  D7FA               	goto	l206
  1202                           
  1203                           ;commLora.c: 89:     reg_val = ReadSXRegister(0x12);
  1204  00FBA4  0E12               	movlw	18
  1205  00FBA6  EC1F  F07D         	call	_ReadSXRegister
  1206  00FBAA  D003               	goto	L2
  1207  00FBAC                     
  1208                           ;commLora.c: 91:         reg_val = ReadSXRegister(0x12);
  1209  00FBAC  0E12               	movlw	18
  1210  00FBAE  EC1F  F07D         	call	_ReadSXRegister
  1211  00FBB2                     L2:
  1212  00FBB2  6E0C               	movwf	readLoRaData@reg_val,c
  1213                           
  1214                           ;commLora.c: 90:     while ((reg_val & 0x40) == 0x00) {
  1215                           
  1216                           ;commLora.c: 92:     }
  1217  00FBB4  AC0C               	btfss	readLoRaData@reg_val,6,c
  1218  00FBB6  D7FA               	goto	l209
  1219                           
  1220                           ;commLora.c: 101:     RXNumberOfBytes = ReadSXRegister(0x13);
  1221  00FBB8  0E13               	movlw	19
  1222  00FBBA  EC1F  F07D         	call	_ReadSXRegister
  1223  00FBBE  6E0A               	movwf	readLoRaData@RXNumberOfBytes,c
  1224                           
  1225                           ;commLora.c: 102:     WriteSXRegister(0x0D, ReadSXRegister(0x10));
  1226  00FBC0  0E10               	movlw	16
  1227  00FBC2  EC1F  F07D         	call	_ReadSXRegister
  1228  00FBC6  6E06               	movwf	WriteSXRegister@data,c
  1229  00FBC8  0E0D               	movlw	13
  1230  00FBCA  EC12  F07D         	call	_WriteSXRegister
  1231                           
  1232                           ;commLora.c: 103:     for (i = 0; i < RXNumberOfBytes; i++) {
  1233  00FBCE  0E00               	movlw	0
  1234  00FBD0  6E0B               	movwf	readLoRaData@i,c
  1235  00FBD2  D00D               	goto	l211
  1236  00FBD4                     
  1237                           ;commLora.c: 104:         buff[i] = ReadSXRegister(0x00);
  1238  00FBD4  500B               	movf	readLoRaData@i,w,c
  1239  00FBD6  0D01               	mullw	1
  1240  00FBD8  50F3               	movf	prodl,w,c
  1241  00FBDA  2408               	addwf	readLoRaData@buff,w,c
  1242  00FBDC  6ED9               	movwf	fsr2l,c
  1243  00FBDE  50F4               	movf	prodh,w,c
  1244  00FBE0  2009               	addwfc	readLoRaData@buff+1,w,c
  1245  00FBE2  6EDA               	movwf	fsr2h,c
  1246  00FBE4  0E00               	movlw	0
  1247  00FBE6  EC1F  F07D         	call	_ReadSXRegister
  1248  00FBEA  6EDF               	movwf	indf2,c
  1249                           
  1250                           ;commLora.c: 105:     }
  1251  00FBEC  2A0B               	incf	readLoRaData@i,f,c
  1252  00FBEE                     l211:
  1253  00FBEE  500A               	movf	readLoRaData@RXNumberOfBytes,w,c
  1254  00FBF0  5C0B               	subwf	readLoRaData@i,w,c
  1255  00FBF2  A0D8               	btfss	status,0,c
  1256  00FBF4  D7EF               	goto	l212
  1257                           
  1258                           ;commLora.c: 108:     WriteSXRegister(0x12, 0xFF);
  1259  00FBF6  0EFF               	movlw	255
  1260  00FBF8  6E06               	movwf	WriteSXRegister@data,c
  1261  00FBFA  0E12               	movlw	18
  1262  00FBFC  EC12  F07D         	call	_WriteSXRegister
  1263  00FC00  0012               	return		;funcret
  1264  00FC02                     __end_of_readLoRaData:
  1265                           	opt stack 0
  1266                           tblptru	equ	0xFF8
  1267                           prodh	equ	0xFF4
  1268                           prodl	equ	0xFF3
  1269                           indf2	equ	0xFDF
  1270                           fsr2h	equ	0xFDA
  1271                           fsr2l	equ	0xFD9
  1272                           status	equ	0xFD8
  1273                           
  1274 ;; *************** function _initLoRaRx *****************
  1275 ;; Defined at:
  1276 ;;		line 28 in file "commLora.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;Total ram usage:        1 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    3
  1297 ;; This function calls:
  1298 ;;		_AntennaRX
  1299 ;;		_InitModule
  1300 ;;		_InitRFLoRaPins
  1301 ;;		_ReadSXRegister
  1302 ;;		_ResetRFModule
  1303 ;;		_SPIInit
  1304 ;;		_WriteSXRegister
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text2
  1311  00FB24                     __ptext2:
  1312                           	opt stack 0
  1313  00FB24                     _initLoRaRx:
  1314                           	opt stack 27
  1315                           
  1316                           ;commLora.c: 29:     InitRFLoRaPins();
  1317                           
  1318                           ;incstack = 0
  1319  00FB24  ECEA  F07C         	call	_InitRFLoRaPins	;wreg free
  1320                           
  1321                           ;commLora.c: 30:     SPIInit();
  1322  00FB28  EC2E  F07D         	call	_SPIInit	;wreg free
  1323                           
  1324                           ;commLora.c: 31:     ResetRFModule();
  1325  00FB2C  EC3D  F07D         	call	_ResetRFModule	;wreg free
  1326                           
  1327                           ;commLora.c: 35:     WriteSXRegister(0x01, 0x00);
  1328  00FB30  0E00               	movlw	0
  1329  00FB32  6E06               	movwf	WriteSXRegister@data,c
  1330  00FB34  0E01               	movlw	1
  1331  00FB36  EC12  F07D         	call	_WriteSXRegister
  1332                           
  1333                           ;commLora.c: 36:     WriteSXRegister(0x01, 0x80);
  1334  00FB3A  0E80               	movlw	128
  1335  00FB3C  6E06               	movwf	WriteSXRegister@data,c
  1336  00FB3E  0E01               	movlw	1
  1337  00FB40  EC12  F07D         	call	_WriteSXRegister
  1338                           
  1339                           ;commLora.c: 37:     WriteSXRegister(0x01, 0x81);
  1340  00FB44  0E81               	movlw	129
  1341  00FB46  6E06               	movwf	WriteSXRegister@data,c
  1342  00FB48  0E01               	movlw	1
  1343  00FB4A  EC12  F07D         	call	_WriteSXRegister
  1344                           
  1345                           ;commLora.c: 38:     _delay((unsigned long)((100)*(1000000UL/4000.0)));
  1346  00FB4E  0E21               	movlw	33
  1347  00FB50  6E08               	movwf	??_initLoRaRx& (0+255),c
  1348  00FB52  0E76               	movlw	118
  1349  00FB54                     u227:
  1350  00FB54  2EE8               	decfsz	wreg,f,c
  1351  00FB56  D7FE               	bra	u227
  1352  00FB58  2E08               	decfsz	??_initLoRaRx& (0+255),f,c
  1353  00FB5A  D7FC               	bra	u227
  1354  00FB5C  D000               	nop2	
  1355                           
  1356                           ;commLora.c: 41:     InitModule();
  1357  00FB5E  EC01  F07E         	call	_InitModule	;wreg free
  1358                           
  1359                           ;commLora.c: 43:     AntennaRX();
  1360  00FB62  ECFB  F07C         	call	_AntennaRX	;wreg free
  1361                           
  1362                           ;commLora.c: 46:     WriteSXRegister(0x0D, ReadSXRegister(0x0F));
  1363  00FB66  0E0F               	movlw	15
  1364  00FB68  EC1F  F07D         	call	_ReadSXRegister
  1365  00FB6C  6E06               	movwf	WriteSXRegister@data,c
  1366  00FB6E  0E0D               	movlw	13
  1367  00FB70  EC12  F07D         	call	_WriteSXRegister
  1368                           
  1369                           ;commLora.c: 49:     WriteSXRegister(0x01, 0x85);
  1370  00FB74  0E85               	movlw	133
  1371  00FB76  6E06               	movwf	WriteSXRegister@data,c
  1372  00FB78  0E01               	movlw	1
  1373  00FB7A  EC12  F07D         	call	_WriteSXRegister
  1374                           
  1375                           ;commLora.c: 50:     _delay((unsigned long)((100)*(1000000UL/4000.0)));
  1376  00FB7E  0E21               	movlw	33
  1377  00FB80  6E08               	movwf	??_initLoRaRx& (0+255),c
  1378  00FB82  0E76               	movlw	118
  1379  00FB84                     u237:
  1380  00FB84  2EE8               	decfsz	wreg,f,c
  1381  00FB86  D7FE               	bra	u237
  1382  00FB88  2E08               	decfsz	??_initLoRaRx& (0+255),f,c
  1383  00FB8A  D7FC               	bra	u237
  1384  00FB8C  D000               	nop2	
  1385  00FB8E  0012               	return		;funcret
  1386  00FB90                     __end_of_initLoRaRx:
  1387                           	opt stack 0
  1388                           tblptru	equ	0xFF8
  1389                           prodh	equ	0xFF4
  1390                           prodl	equ	0xFF3
  1391                           wreg	equ	0xFE8
  1392                           indf2	equ	0xFDF
  1393                           fsr2h	equ	0xFDA
  1394                           fsr2l	equ	0xFD9
  1395                           status	equ	0xFD8
  1396                           
  1397 ;; *************** function _SPIInit *****************
  1398 ;; Defined at:
  1399 ;;		line 16 in file "spi.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg, status,2
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;Total ram usage:        0 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_initLoRaRx
  1423 ;;		_initLoRaTx
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text3
  1428  00FA5C                     __ptext3:
  1429                           	opt stack 0
  1430  00FA5C                     _SPIInit:
  1431                           	opt stack 29
  1432                           
  1433                           ;spi.c: 18:     TRISBbits.TRISB1 = 0;
  1434                           
  1435                           ;incstack = 0
  1436  00FA5C  9293               	bcf	3987,1,c	;volatile
  1437                           
  1438                           ;spi.c: 19:     ANSELBbits.ANSB1 = 0;
  1439  00FA5E  010F               	movlb	15	; () banked
  1440  00FA60  9339               	bcf	57,1,b	;volatile
  1441                           
  1442                           ;spi.c: 20:     TRISBbits.TRISB2 = 1;
  1443  00FA62  8493               	bsf	3987,2,c	;volatile
  1444                           
  1445                           ;spi.c: 21:     ANSELBbits.ANSB2 = 0;
  1446  00FA64  9539               	bcf	57,2,b	;volatile
  1447                           
  1448                           ;spi.c: 22:     TRISBbits.TRISB3 = 0;
  1449  00FA66  9693               	bcf	3987,3,c	;volatile
  1450                           
  1451                           ;spi.c: 23:     ANSELBbits.ANSB3 = 0;
  1452  00FA68  9739               	bcf	57,3,b	;volatile
  1453                           
  1454                           ;spi.c: 26:     TRISBbits.TRISB4 = 0;
  1455  00FA6A  9893               	bcf	3987,4,c	;volatile
  1456                           
  1457                           ;spi.c: 27:     ANSELBbits.ANSB4 = 0;
  1458  00FA6C  9939               	bcf	57,4,b	;volatile
  1459                           
  1460                           ;spi.c: 28:     LATBbits.LATB4 = 1;
  1461  00FA6E  888A               	bsf	3978,4,c	;volatile
  1462                           
  1463                           ;spi.c: 30:     SSP2STATbits.SMP = 0;
  1464  00FA70  9E6D               	bcf	3949,7,c	;volatile
  1465                           
  1466                           ;spi.c: 31:     SSP2STATbits.CKE = 1;
  1467  00FA72  8C6D               	bsf	3949,6,c	;volatile
  1468                           
  1469                           ; BSR set to: 15
  1470                           ;spi.c: 32:     SSP2CON1 = 0b00100000;
  1471  00FA74  0E20               	movlw	32
  1472  00FA76  6E6C               	movwf	3948,c	;volatile
  1473                           
  1474                           ; BSR set to: 15
  1475  00FA78  0012               	return		;funcret
  1476  00FA7A                     __end_of_SPIInit:
  1477                           	opt stack 0
  1478                           tblptru	equ	0xFF8
  1479                           prodh	equ	0xFF4
  1480                           prodl	equ	0xFF3
  1481                           wreg	equ	0xFE8
  1482                           indf2	equ	0xFDF
  1483                           fsr2h	equ	0xFDA
  1484                           fsr2l	equ	0xFD9
  1485                           status	equ	0xFD8
  1486                           
  1487 ;; *************** function _ResetRFModule *****************
  1488 ;; Defined at:
  1489 ;;		line 27 in file "RF_LoRa_868_SO.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;Total ram usage:        1 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_initLoRaRx
  1513 ;;		_initLoRaTx
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text4
  1518  00FA7A                     __ptext4:
  1519                           	opt stack 0
  1520  00FA7A                     _ResetRFModule:
  1521                           	opt stack 29
  1522                           
  1523                           ;RF_LoRa_868_SO.c: 28:     LATCbits.LATC0 = 1;
  1524                           
  1525                           ; BSR set to: 15
  1526                           ;incstack = 0
  1527  00FA7A  808B               	bsf	3979,0,c	;volatile
  1528                           
  1529                           ;RF_LoRa_868_SO.c: 29:     TRISCbits.TRISC0 = 0;
  1530  00FA7C  9094               	bcf	3988,0,c	;volatile
  1531                           
  1532                           ;RF_LoRa_868_SO.c: 30:     _delay((unsigned long)((50)*(1000000UL/4000.0)));
  1533  00FA7E  0E11               	movlw	17
  1534  00FA80  6E01               	movwf	??_ResetRFModule& (0+255),c
  1535  00FA82  0E3A               	movlw	58
  1536  00FA84                     u247:
  1537  00FA84  2EE8               	decfsz	wreg,f,c
  1538  00FA86  D7FE               	bra	u247
  1539  00FA88  2E01               	decfsz	??_ResetRFModule& (0+255),f,c
  1540  00FA8A  D7FC               	bra	u247
  1541  00FA8C  D000               	nop2	
  1542                           
  1543                           ;RF_LoRa_868_SO.c: 31:     TRISCbits.TRISC0 = 1;
  1544  00FA8E  8094               	bsf	3988,0,c	;volatile
  1545                           
  1546                           ;RF_LoRa_868_SO.c: 32:     _delay((unsigned long)((50)*(1000000UL/4000.0)));
  1547  00FA90  0E11               	movlw	17
  1548  00FA92  6E01               	movwf	??_ResetRFModule& (0+255),c
  1549  00FA94  0E3A               	movlw	58
  1550  00FA96                     u257:
  1551  00FA96  2EE8               	decfsz	wreg,f,c
  1552  00FA98  D7FE               	bra	u257
  1553  00FA9A  2E01               	decfsz	??_ResetRFModule& (0+255),f,c
  1554  00FA9C  D7FC               	bra	u257
  1555  00FA9E  D000               	nop2	
  1556  00FAA0  0012               	return		;funcret
  1557  00FAA2                     __end_of_ResetRFModule:
  1558                           	opt stack 0
  1559                           tblptru	equ	0xFF8
  1560                           prodh	equ	0xFF4
  1561                           prodl	equ	0xFF3
  1562                           wreg	equ	0xFE8
  1563                           indf2	equ	0xFDF
  1564                           fsr2h	equ	0xFDA
  1565                           fsr2l	equ	0xFD9
  1566                           status	equ	0xFD8
  1567                           
  1568 ;; *************** function _ReadSXRegister *****************
  1569 ;; Defined at:
  1570 ;;		line 29 in file "SX1272.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  address         1    wreg     unsigned char 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  address         1    4[COMRAM] unsigned char 
  1575 ;;  RegValue        1    3[COMRAM] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      unsigned char 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;Total ram usage:        2 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    1
  1592 ;; This function calls:
  1593 ;;		_SPIReceive
  1594 ;;		_SPITransfer
  1595 ;; This function is called by:
  1596 ;;		_initLoRaRx
  1597 ;;		_readLoRaData
  1598 ;;		_GetMode
  1599 ;;		_sendLoRaData
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text5
  1604  00FA3E                     __ptext5:
  1605                           	opt stack 0
  1606  00FA3E                     _ReadSXRegister:
  1607                           	opt stack 28
  1608                           
  1609                           ;incstack = 0
  1610                           ;ReadSXRegister@address stored from wreg
  1611  00FA3E  6E05               	movwf	ReadSXRegister@address,c
  1612                           
  1613                           ;SX1272.c: 30:     uint8_t RegValue;;SX1272.c: 31:     LATBbits.LATB4 = 0;
  1614  00FA40  988A               	bcf	3978,4,c	;volatile
  1615                           
  1616                           ;SX1272.c: 32:     address = address & 0x7F;
  1617  00FA42  5005               	movf	ReadSXRegister@address,w,c
  1618  00FA44  0B7F               	andlw	127
  1619  00FA46  6E05               	movwf	ReadSXRegister@address,c
  1620                           
  1621                           ;SX1272.c: 34:     SPITransfer(address);
  1622  00FA48  5005               	movf	ReadSXRegister@address,w,c
  1623  00FA4A  ECF2  F07C         	call	_SPITransfer
  1624                           
  1625                           ;SX1272.c: 35:     RegValue = SPIReceive(0x00);
  1626  00FA4E  0E00               	movlw	0
  1627  00FA50  EC06  F07D         	call	_SPIReceive
  1628  00FA54  6E04               	movwf	ReadSXRegister@RegValue,c
  1629                           
  1630                           ;SX1272.c: 36:     LATBbits.LATB4 = 1;
  1631  00FA56  888A               	bsf	3978,4,c	;volatile
  1632                           
  1633                           ;SX1272.c: 37:     return RegValue;
  1634  00FA58  5004               	movf	ReadSXRegister@RegValue,w,c
  1635  00FA5A  0012               	return	
  1636  00FA5C                     __end_of_ReadSXRegister:
  1637                           	opt stack 0
  1638                           tblptru	equ	0xFF8
  1639                           prodh	equ	0xFF4
  1640                           prodl	equ	0xFF3
  1641                           wreg	equ	0xFE8
  1642                           indf2	equ	0xFDF
  1643                           fsr2h	equ	0xFDA
  1644                           fsr2l	equ	0xFD9
  1645                           status	equ	0xFD8
  1646                           
  1647 ;; *************** function _SPIReceive *****************
  1648 ;; Defined at:
  1649 ;;		line 47 in file "spi.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  data_out        1    wreg     unsigned char 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  data_out        1    1[COMRAM] unsigned char 
  1654 ;;  data_in         1    2[COMRAM] unsigned char 
  1655 ;;  dummy_byte      1    0[COMRAM] unsigned char 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      unsigned char 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;Total ram usage:        3 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_ReadSXRegister
  1675 ;;		_PrintSXRegContent
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text6
  1680  00FA0C                     __ptext6:
  1681                           	opt stack 0
  1682  00FA0C                     _SPIReceive:
  1683                           	opt stack 28
  1684                           
  1685                           ;incstack = 0
  1686                           ;SPIReceive@data_out stored from wreg
  1687  00FA0C  6E02               	movwf	SPIReceive@data_out,c
  1688                           
  1689                           ;spi.c: 49:     uint8_t data_in, dummy_byte;;spi.c: 50:     dummy_byte = SSP2BUF;
  1690  00FA0E  CF6F F001          	movff	3951,SPIReceive@dummy_byte	;volatile
  1691                           
  1692                           ;spi.c: 51:     PIR3bits.SSP2IF = 0;
  1693  00FA12  9EA4               	bcf	4004,7,c	;volatile
  1694                           
  1695                           ;spi.c: 52:     SSP2BUF = data_out;
  1696  00FA14  C002  FF6F         	movff	SPIReceive@data_out,3951	;volatile
  1697  00FA18  AEA4               	btfss	4004,7,c	;volatile
  1698  00FA1A  D7FE               	goto	l89
  1699                           
  1700                           ;spi.c: 54:     data_in = SSP2BUF;
  1701  00FA1C  CF6F F003          	movff	3951,SPIReceive@data_in	;volatile
  1702                           
  1703                           ;spi.c: 55:     return(data_in);
  1704  00FA20  5003               	movf	SPIReceive@data_in,w,c
  1705  00FA22  0012               	return		;funcret
  1706  00FA24                     __end_of_SPIReceive:
  1707                           	opt stack 0
  1708                           tblptru	equ	0xFF8
  1709                           prodh	equ	0xFF4
  1710                           prodl	equ	0xFF3
  1711                           wreg	equ	0xFE8
  1712                           indf2	equ	0xFDF
  1713                           fsr2h	equ	0xFDA
  1714                           fsr2l	equ	0xFD9
  1715                           status	equ	0xFD8
  1716                           
  1717 ;; *************** function _InitRFLoRaPins *****************
  1718 ;; Defined at:
  1719 ;;		line 18 in file "RF_LoRa_868_SO.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		None
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;Total ram usage:        0 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_initLoRaRx
  1743 ;;		_initLoRaTx
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text7
  1748  00F9D4                     __ptext7:
  1749                           	opt stack 0
  1750  00F9D4                     _InitRFLoRaPins:
  1751                           	opt stack 29
  1752                           
  1753                           ;RF_LoRa_868_SO.c: 19:     TRISCbits.TRISC0 = 1;
  1754                           
  1755                           ;incstack = 0
  1756  00F9D4  8094               	bsf	3988,0,c	;volatile
  1757                           
  1758                           ;RF_LoRa_868_SO.c: 20:     LATCbits.LATC2 = 0;
  1759  00F9D6  948B               	bcf	3979,2,c	;volatile
  1760                           
  1761                           ;RF_LoRa_868_SO.c: 21:     TRISCbits.TRISC2 = 0;
  1762  00F9D8  9494               	bcf	3988,2,c	;volatile
  1763                           
  1764                           ;RF_LoRa_868_SO.c: 22:     ANSELCbits.ANSC2 = 0;
  1765  00F9DA  010F               	movlb	15	; () banked
  1766  00F9DC  953A               	bcf	58,2,b	;volatile
  1767                           
  1768                           ;RF_LoRa_868_SO.c: 23:     LATCbits.LATC1 = 0;
  1769  00F9DE  928B               	bcf	3979,1,c	;volatile
  1770                           
  1771                           ;RF_LoRa_868_SO.c: 24:     TRISCbits.TRISC1 = 0;
  1772  00F9E0  9294               	bcf	3988,1,c	;volatile
  1773                           
  1774                           ; BSR set to: 15
  1775  00F9E2  0012               	return		;funcret
  1776  00F9E4                     __end_of_InitRFLoRaPins:
  1777                           	opt stack 0
  1778                           tblptru	equ	0xFF8
  1779                           prodh	equ	0xFF4
  1780                           prodl	equ	0xFF3
  1781                           wreg	equ	0xFE8
  1782                           indf2	equ	0xFDF
  1783                           fsr2h	equ	0xFDA
  1784                           fsr2l	equ	0xFD9
  1785                           status	equ	0xFD8
  1786                           
  1787 ;; *************** function _InitModule *****************
  1788 ;; Defined at:
  1789 ;;		line 94 in file "SX1272.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    2
  1810 ;; This function calls:
  1811 ;;		_WriteSXRegister
  1812 ;; This function is called by:
  1813 ;;		_initLoRaRx
  1814 ;;		_initLoRaTx
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text8
  1819  00FC02                     __ptext8:
  1820                           	opt stack 0
  1821  00FC02                     _InitModule:
  1822                           	opt stack 27
  1823                           
  1824                           ;SX1272.c: 96:   WriteSXRegister(0x00, 0x00);
  1825                           
  1826                           ; BSR set to: 15
  1827                           ;incstack = 0
  1828  00FC02  0E00               	movlw	0
  1829  00FC04  6E06               	movwf	WriteSXRegister@data,c
  1830  00FC06  0E00               	movlw	0
  1831  00FC08  EC12  F07D         	call	_WriteSXRegister
  1832                           
  1833                           ;SX1272.c: 98:   WriteSXRegister(0x06, 0xD8);
  1834  00FC0C  0ED8               	movlw	216
  1835  00FC0E  6E06               	movwf	WriteSXRegister@data,c
  1836  00FC10  0E06               	movlw	6
  1837  00FC12  EC12  F07D         	call	_WriteSXRegister
  1838                           
  1839                           ;SX1272.c: 99:   WriteSXRegister(0x07, 0x99);
  1840  00FC16  0E99               	movlw	153
  1841  00FC18  6E06               	movwf	WriteSXRegister@data,c
  1842  00FC1A  0E07               	movlw	7
  1843  00FC1C  EC12  F07D         	call	_WriteSXRegister
  1844                           
  1845                           ;SX1272.c: 100:   WriteSXRegister(0x08, 0x99);
  1846  00FC20  0E99               	movlw	153
  1847  00FC22  6E06               	movwf	WriteSXRegister@data,c
  1848  00FC24  0E08               	movlw	8
  1849  00FC26  EC12  F07D         	call	_WriteSXRegister
  1850                           
  1851                           ;SX1272.c: 102:   WriteSXRegister(0x09, 0x01);
  1852  00FC2A  0E01               	movlw	1
  1853  00FC2C  6E06               	movwf	WriteSXRegister@data,c
  1854  00FC2E  0E09               	movlw	9
  1855  00FC30  EC12  F07D         	call	_WriteSXRegister
  1856                           
  1857                           ;SX1272.c: 104:   WriteSXRegister(0x0A, 0x19);
  1858  00FC34  0E19               	movlw	25
  1859  00FC36  6E06               	movwf	WriteSXRegister@data,c
  1860  00FC38  0E0A               	movlw	10
  1861  00FC3A  EC12  F07D         	call	_WriteSXRegister
  1862                           
  1863                           ;SX1272.c: 106:   WriteSXRegister(0x0B, 0b00101011);
  1864  00FC3E  0E2B               	movlw	43
  1865  00FC40  6E06               	movwf	WriteSXRegister@data,c
  1866  00FC42  0E0B               	movlw	11
  1867  00FC44  EC12  F07D         	call	_WriteSXRegister
  1868                           
  1869                           ;SX1272.c: 108:   WriteSXRegister(0x0C, 0b00100011);
  1870  00FC48  0E23               	movlw	35
  1871  00FC4A  6E06               	movwf	WriteSXRegister@data,c
  1872  00FC4C  0E0C               	movlw	12
  1873  00FC4E  EC12  F07D         	call	_WriteSXRegister
  1874                           
  1875                           ;SX1272.c: 110:   WriteSXRegister(0x0D, 0x00);
  1876  00FC52  0E00               	movlw	0
  1877  00FC54  6E06               	movwf	WriteSXRegister@data,c
  1878  00FC56  0E0D               	movlw	13
  1879  00FC58  EC12  F07D         	call	_WriteSXRegister
  1880                           
  1881                           ;SX1272.c: 111:   WriteSXRegister(0x0E, 0x80);
  1882  00FC5C  0E80               	movlw	128
  1883  00FC5E  6E06               	movwf	WriteSXRegister@data,c
  1884  00FC60  0E0E               	movlw	14
  1885  00FC62  EC12  F07D         	call	_WriteSXRegister
  1886                           
  1887                           ;SX1272.c: 112:   WriteSXRegister(0x0F, 0x00);
  1888  00FC66  0E00               	movlw	0
  1889  00FC68  6E06               	movwf	WriteSXRegister@data,c
  1890  00FC6A  0E0F               	movlw	15
  1891  00FC6C  EC12  F07D         	call	_WriteSXRegister
  1892                           
  1893                           ;SX1272.c: 114:   WriteSXRegister(0x11, 0x00);
  1894  00FC70  0E00               	movlw	0
  1895  00FC72  6E06               	movwf	WriteSXRegister@data,c
  1896  00FC74  0E11               	movlw	17
  1897  00FC76  EC12  F07D         	call	_WriteSXRegister
  1898                           
  1899                           ;SX1272.c: 116:   WriteSXRegister(0x12, 0xFF);
  1900  00FC7A  0EFF               	movlw	255
  1901  00FC7C  6E06               	movwf	WriteSXRegister@data,c
  1902  00FC7E  0E12               	movlw	18
  1903  00FC80  EC12  F07D         	call	_WriteSXRegister
  1904                           
  1905                           ;SX1272.c: 120:   WriteSXRegister(0x1D, 0b10001010);
  1906  00FC84  0E8A               	movlw	138
  1907  00FC86  6E06               	movwf	WriteSXRegister@data,c
  1908  00FC88  0E1D               	movlw	29
  1909  00FC8A  EC12  F07D         	call	_WriteSXRegister
  1910                           
  1911                           ;SX1272.c: 122:   WriteSXRegister(0x1E, 0b11000111);
  1912  00FC8E  0EC7               	movlw	199
  1913  00FC90  6E06               	movwf	WriteSXRegister@data,c
  1914  00FC92  0E1E               	movlw	30
  1915  00FC94  EC12  F07D         	call	_WriteSXRegister
  1916                           
  1917                           ;SX1272.c: 124:   WriteSXRegister(0x1F, 0xFF);
  1918  00FC98  0EFF               	movlw	255
  1919  00FC9A  6E06               	movwf	WriteSXRegister@data,c
  1920  00FC9C  0E1F               	movlw	31
  1921  00FC9E  EC12  F07D         	call	_WriteSXRegister
  1922                           
  1923                           ;SX1272.c: 126:   WriteSXRegister(0x20, 0x00);
  1924  00FCA2  0E00               	movlw	0
  1925  00FCA4  6E06               	movwf	WriteSXRegister@data,c
  1926  00FCA6  0E20               	movlw	32
  1927  00FCA8  EC12  F07D         	call	_WriteSXRegister
  1928                           
  1929                           ;SX1272.c: 127:   WriteSXRegister(0x21, 0x08);
  1930  00FCAC  0E08               	movlw	8
  1931  00FCAE  6E06               	movwf	WriteSXRegister@data,c
  1932  00FCB0  0E21               	movlw	33
  1933  00FCB2  EC12  F07D         	call	_WriteSXRegister
  1934                           
  1935                           ;SX1272.c: 129:   WriteSXRegister(0x23, 0x80);
  1936  00FCB6  0E80               	movlw	128
  1937  00FCB8  6E06               	movwf	WriteSXRegister@data,c
  1938  00FCBA  0E23               	movlw	35
  1939  00FCBC  EC12  F07D         	call	_WriteSXRegister
  1940                           
  1941                           ;SX1272.c: 131:   WriteSXRegister(0x24, 0x00);
  1942  00FCC0  0E00               	movlw	0
  1943  00FCC2  6E06               	movwf	WriteSXRegister@data,c
  1944  00FCC4  0E24               	movlw	36
  1945  00FCC6  EC12  F07D         	call	_WriteSXRegister
  1946                           
  1947                           ;SX1272.c: 133:   WriteSXRegister(0x31, 0xC3);
  1948  00FCCA  0EC3               	movlw	195
  1949  00FCCC  6E06               	movwf	WriteSXRegister@data,c
  1950  00FCCE  0E31               	movlw	49
  1951  00FCD0  EC12  F07D         	call	_WriteSXRegister
  1952                           
  1953                           ;SX1272.c: 135:   WriteSXRegister(0x33, 0x27);
  1954  00FCD4  0E27               	movlw	39
  1955  00FCD6  6E06               	movwf	WriteSXRegister@data,c
  1956  00FCD8  0E33               	movlw	51
  1957  00FCDA  EC12  F07D         	call	_WriteSXRegister
  1958                           
  1959                           ;SX1272.c: 137:   WriteSXRegister(0x37, 0x0A);
  1960  00FCDE  0E0A               	movlw	10
  1961  00FCE0  6E06               	movwf	WriteSXRegister@data,c
  1962  00FCE2  0E37               	movlw	55
  1963  00FCE4  EC12  F07D         	call	_WriteSXRegister
  1964                           
  1965                           ;SX1272.c: 139:   WriteSXRegister(0x39, 0x12);
  1966  00FCE8  0E12               	movlw	18
  1967  00FCEA  6E06               	movwf	WriteSXRegister@data,c
  1968  00FCEC  0E39               	movlw	57
  1969  00FCEE  EC12  F07D         	call	_WriteSXRegister
  1970  00FCF2  0012               	return		;funcret
  1971  00FCF4                     __end_of_InitModule:
  1972                           	opt stack 0
  1973                           tblptru	equ	0xFF8
  1974                           prodh	equ	0xFF4
  1975                           prodl	equ	0xFF3
  1976                           wreg	equ	0xFE8
  1977                           indf2	equ	0xFDF
  1978                           fsr2h	equ	0xFDA
  1979                           fsr2l	equ	0xFD9
  1980                           status	equ	0xFD8
  1981                           
  1982 ;; *************** function _WriteSXRegister *****************
  1983 ;; Defined at:
  1984 ;;		line 19 in file "SX1272.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  address         1    wreg     unsigned char 
  1987 ;;  data            1    5[COMRAM] unsigned char 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  address         1    6[COMRAM] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, status,2, status,0, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1999 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;Total ram usage:        2 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    1
  2006 ;; This function calls:
  2007 ;;		_SPITransfer
  2008 ;; This function is called by:
  2009 ;;		_InitModule
  2010 ;;		_initLoRaRx
  2011 ;;		_readLoRaData
  2012 ;;		_initLoRaTx
  2013 ;;		_sendLoRaData
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text9
  2018  00FA24                     __ptext9:
  2019                           	opt stack 0
  2020  00FA24                     _WriteSXRegister:
  2021                           	opt stack 28
  2022                           
  2023                           ;incstack = 0
  2024                           ;WriteSXRegister@address stored from wreg
  2025  00FA24  6E07               	movwf	WriteSXRegister@address,c
  2026                           
  2027                           ;SX1272.c: 21:     LATBbits.LATB4 = 0;
  2028  00FA26  988A               	bcf	3978,4,c	;volatile
  2029                           
  2030                           ;SX1272.c: 22:     address = address | 0x80;
  2031  00FA28  5007               	movf	WriteSXRegister@address,w,c
  2032  00FA2A  0980               	iorlw	128
  2033  00FA2C  6E07               	movwf	WriteSXRegister@address,c
  2034                           
  2035                           ;SX1272.c: 24:     SPITransfer(address);
  2036  00FA2E  5007               	movf	WriteSXRegister@address,w,c
  2037  00FA30  ECF2  F07C         	call	_SPITransfer
  2038                           
  2039                           ;SX1272.c: 25:     SPITransfer(data);
  2040  00FA34  5006               	movf	WriteSXRegister@data,w,c
  2041  00FA36  ECF2  F07C         	call	_SPITransfer
  2042                           
  2043                           ;SX1272.c: 26:     LATBbits.LATB4 = 1;
  2044  00FA3A  888A               	bsf	3978,4,c	;volatile
  2045  00FA3C  0012               	return		;funcret
  2046  00FA3E                     __end_of_WriteSXRegister:
  2047                           	opt stack 0
  2048                           tblptru	equ	0xFF8
  2049                           prodh	equ	0xFF4
  2050                           prodl	equ	0xFF3
  2051                           wreg	equ	0xFE8
  2052                           indf2	equ	0xFDF
  2053                           fsr2h	equ	0xFDA
  2054                           fsr2l	equ	0xFD9
  2055                           status	equ	0xFD8
  2056                           
  2057 ;; *************** function _SPITransfer *****************
  2058 ;; Defined at:
  2059 ;;		line 38 in file "spi.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  data_out        1    wreg     unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  data_out        1    1[COMRAM] unsigned char 
  2064 ;;  dummy_byte      1    0[COMRAM] unsigned char 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;Total ram usage:        2 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_WriteSXRegister
  2084 ;;		_ReadSXRegister
  2085 ;;		_PrintSXRegContent
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text10
  2090  00F9E4                     __ptext10:
  2091                           	opt stack 0
  2092  00F9E4                     _SPITransfer:
  2093                           	opt stack 28
  2094                           
  2095                           ;incstack = 0
  2096                           ;SPITransfer@data_out stored from wreg
  2097  00F9E4  6E02               	movwf	SPITransfer@data_out,c
  2098                           
  2099                           ;spi.c: 40:     uint8_t dummy_byte;;spi.c: 41:     dummy_byte = SSP2BUF;
  2100  00F9E6  CF6F F001          	movff	3951,SPITransfer@dummy_byte	;volatile
  2101                           
  2102                           ;spi.c: 42:     PIR3bits.SSP2IF = 0;
  2103  00F9EA  9EA4               	bcf	4004,7,c	;volatile
  2104                           
  2105                           ;spi.c: 43:     SSP2BUF = data_out;
  2106  00F9EC  C002  FF6F         	movff	SPITransfer@data_out,3951	;volatile
  2107  00F9F0  BEA4               	btfsc	4004,7,c	;volatile
  2108  00F9F2  0012               	return	
  2109  00F9F4  D7FD               	goto	l83
  2110  00F9F6                     __end_of_SPITransfer:
  2111                           	opt stack 0
  2112                           tblptru	equ	0xFF8
  2113                           prodh	equ	0xFF4
  2114                           prodl	equ	0xFF3
  2115                           wreg	equ	0xFE8
  2116                           indf2	equ	0xFDF
  2117                           fsr2h	equ	0xFDA
  2118                           fsr2l	equ	0xFD9
  2119                           status	equ	0xFD8
  2120                           
  2121 ;; *************** function _AntennaRX *****************
  2122 ;; Defined at:
  2123 ;;		line 42 in file "RF_LoRa_868_SO.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;Total ram usage:        1 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_initLoRaRx
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text11
  2151  00F9F6                     __ptext11:
  2152                           	opt stack 0
  2153  00F9F6                     _AntennaRX:
  2154                           	opt stack 29
  2155                           
  2156                           ;RF_LoRa_868_SO.c: 43:     LATCbits.LATC1 = 0;
  2157                           
  2158                           ;incstack = 0
  2159  00F9F6  928B               	bcf	3979,1,c	;volatile
  2160                           
  2161                           ;RF_LoRa_868_SO.c: 44:     LATCbits.LATC2 = 0;
  2162  00F9F8  948B               	bcf	3979,2,c	;volatile
  2163                           
  2164                           ;RF_LoRa_868_SO.c: 45:     _delay((unsigned long)((10)*(1000000UL/4000.0)));
  2165  00F9FA  0E04               	movlw	4
  2166  00F9FC  6E01               	movwf	??_AntennaRX& (0+255),c
  2167  00F9FE  0E3E               	movlw	62
  2168  00FA00                     u267:
  2169  00FA00  2EE8               	decfsz	wreg,f,c
  2170  00FA02  D7FE               	bra	u267
  2171  00FA04  2E01               	decfsz	??_AntennaRX& (0+255),f,c
  2172  00FA06  D7FC               	bra	u267
  2173                           
  2174                           ;RF_LoRa_868_SO.c: 46:     LATCbits.LATC1 = 1;
  2175  00FA08  828B               	bsf	3979,1,c	;volatile
  2176  00FA0A  0012               	return		;funcret
  2177  00FA0C                     __end_of_AntennaRX:
  2178                           	opt stack 0
  2179                           tblptru	equ	0xFF8
  2180                           prodh	equ	0xFF4
  2181                           prodl	equ	0xFF3
  2182                           wreg	equ	0xFE8
  2183                           indf2	equ	0xFDF
  2184                           fsr2h	equ	0xFDA
  2185                           fsr2l	equ	0xFD9
  2186                           status	equ	0xFD8
  2187                           
  2188 ;; *************** function _UARTWriteByte *****************
  2189 ;; Defined at:
  2190 ;;		line 52 in file "uart.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  data            1    wreg     unsigned char 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  data            1    0[COMRAM] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:        1 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;;		_UARTWriteStr
  2215 ;;		_UARTWriteStrLn
  2216 ;;		_UARTWriteByteHex
  2217 ;;		_UARTWriteByteDec
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text12
  2222  00F9C8                     __ptext12:
  2223                           	opt stack 0
  2224  00F9C8                     _UARTWriteByte:
  2225                           	opt stack 30
  2226                           
  2227                           ;incstack = 0
  2228                           ;UARTWriteByte@data stored from wreg
  2229  00F9C8  6E01               	movwf	UARTWriteByte@data,c
  2230  00F9CA                     
  2231                           ;uart.c: 54:     while (TXSTA1bits.TRMT == 0);
  2232  00F9CA  A2AC               	btfss	4012,1,c	;volatile
  2233  00F9CC  D7FE               	goto	l1028
  2234                           
  2235                           ;uart.c: 56:     TXREG1 = data;
  2236  00F9CE  C001  FFAD         	movff	UARTWriteByte@data,4013	;volatile
  2237  00F9D2  0012               	return		;funcret
  2238  00F9D4                     __end_of_UARTWriteByte:
  2239                           	opt stack 0
  2240                           tblptru	equ	0xFF8
  2241                           prodh	equ	0xFF4
  2242                           prodl	equ	0xFF3
  2243                           wreg	equ	0xFE8
  2244                           indf2	equ	0xFDF
  2245                           fsr2h	equ	0xFDA
  2246                           fsr2l	equ	0xFD9
  2247                           status	equ	0xFD8
  2248                           
  2249 ;; *************** function _UARTInit *****************
  2250 ;; Defined at:
  2251 ;;		line 16 in file "uart.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  baudRate        2    0[COMRAM] unsigned int 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;Total ram usage:        2 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_main
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text13
  2279  00FAA2                     __ptext13:
  2280                           	opt stack 0
  2281  00FAA2                     _UARTInit:
  2282                           	opt stack 30
  2283                           
  2284                           ;uart.c: 18:     TRISCbits.TRISC6 = 1;
  2285                           
  2286                           ;incstack = 0
  2287  00FAA2  8C94               	bsf	3988,6,c	;volatile
  2288                           
  2289                           ;uart.c: 19:     TRISCbits.TRISC7 = 1;
  2290  00FAA4  8E94               	bsf	3988,7,c	;volatile
  2291                           
  2292                           ;uart.c: 20:     ANSELCbits.ANSC7 = 0;
  2293  00FAA6  010F               	movlb	15	; () banked
  2294  00FAA8  9F3A               	bcf	58,7,b	;volatile
  2295                           
  2296                           ; BSR set to: 15
  2297                           ;uart.c: 22:     TXSTA1 = 0;
  2298  00FAAA  0E00               	movlw	0
  2299  00FAAC  6EAC               	movwf	4012,c	;volatile
  2300                           
  2301                           ;uart.c: 23:     RCSTA1 = 0;
  2302  00FAAE  0E00               	movlw	0
  2303  00FAB0  6EAB               	movwf	4011,c	;volatile
  2304                           
  2305                           ; BSR set to: 15
  2306                           ;uart.c: 25:     TXSTA1bits.SYNC = 0;
  2307  00FAB2  98AC               	bcf	4012,4,c	;volatile
  2308                           
  2309                           ; BSR set to: 15
  2310                           ;uart.c: 26:     TXSTA1bits.TX9 = 0;
  2311  00FAB4  9CAC               	bcf	4012,6,c	;volatile
  2312                           
  2313                           ; BSR set to: 15
  2314                           ;uart.c: 27:     RCSTA1bits.RX9 = 0;
  2315  00FAB6  9CAB               	bcf	4011,6,c	;volatile
  2316                           
  2317                           ; BSR set to: 15
  2318                           ;uart.c: 28:     RCSTA1bits.CREN = 1;
  2319  00FAB8  88AB               	bsf	4011,4,c	;volatile
  2320                           
  2321                           ; BSR set to: 15
  2322                           ;uart.c: 29:     RCSTA1bits.ADDEN = 0;
  2323  00FABA  96AB               	bcf	4011,3,c	;volatile
  2324                           
  2325                           ; BSR set to: 15
  2326                           ;uart.c: 31:     PIE1bits.RC1IE = 1;
  2327  00FABC  8A9D               	bsf	3997,5,c	;volatile
  2328                           
  2329                           ; BSR set to: 15
  2330                           ;uart.c: 32:     PIE1bits.TX1IE = 0;
  2331  00FABE  989D               	bcf	3997,4,c	;volatile
  2332                           
  2333                           ; BSR set to: 15
  2334                           ;uart.c: 34:     TXSTA1bits.BRGH = 1;
  2335  00FAC0  84AC               	bsf	4012,2,c	;volatile
  2336                           
  2337                           ; BSR set to: 15
  2338                           ;uart.c: 35:     BAUDCON1bits.BRG16 = 1;
  2339  00FAC2  86B8               	bsf	4024,3,c	;volatile
  2340                           
  2341                           ;uart.c: 38:     SPBRG1 = 12;
  2342  00FAC4  0E0C               	movlw	12
  2343  00FAC6  6EAF               	movwf	4015,c	;volatile
  2344                           
  2345                           ;uart.c: 39:     SPBRGH1 = 0;
  2346  00FAC8  0E00               	movlw	0
  2347  00FACA  6EB0               	movwf	4016,c	;volatile
  2348                           
  2349                           ; BSR set to: 15
  2350                           ;uart.c: 43:     TXSTA1bits.TXEN = 1;
  2351  00FACC  8AAC               	bsf	4012,5,c	;volatile
  2352                           
  2353                           ; BSR set to: 15
  2354                           ;uart.c: 44:     RCSTA1bits.SPEN = 1;
  2355  00FACE  8EAB               	bsf	4011,7,c	;volatile
  2356                           
  2357                           ; BSR set to: 15
  2358                           ;uart.c: 46:     RCIF = 0;
  2359  00FAD0  9A9E               	bcf	3998,5,c	;volatile
  2360                           
  2361                           ; BSR set to: 15
  2362                           ;uart.c: 48:     RCIE = 1;
  2363  00FAD2  8A9D               	bsf	3997,5,c	;volatile
  2364                           
  2365                           ; BSR set to: 15
  2366                           ;uart.c: 49:     PEIE = 1;
  2367  00FAD4  8CF2               	bsf	intcon,6,c	;volatile
  2368                           
  2369                           ; BSR set to: 15
  2370  00FAD6  0012               	return		;funcret
  2371  00FAD8                     __end_of_UARTInit:
  2372                           	opt stack 0
  2373                           tblptru	equ	0xFF8
  2374                           prodh	equ	0xFF4
  2375                           prodl	equ	0xFF3
  2376                           intcon	equ	0xFF2
  2377                           wreg	equ	0xFE8
  2378                           indf2	equ	0xFDF
  2379                           fsr2h	equ	0xFDA
  2380                           fsr2l	equ	0xFD9
  2381                           status	equ	0xFD8
  2382                           tblptru	equ	0xFF8
  2383                           prodh	equ	0xFF4
  2384                           prodl	equ	0xFF3
  2385                           intcon	equ	0xFF2
  2386                           wreg	equ	0xFE8
  2387                           indf2	equ	0xFDF
  2388                           fsr2h	equ	0xFDA
  2389                           fsr2l	equ	0xFD9
  2390                           status	equ	0xFD8
  2391                           
  2392                           	psect	rparam
  2393  0000                     tblptru	equ	0xFF8
  2394                           prodh	equ	0xFF4
  2395                           prodl	equ	0xFF3
  2396                           intcon	equ	0xFF2
  2397                           wreg	equ	0xFE8
  2398                           indf2	equ	0xFDF
  2399                           fsr2h	equ	0xFDA
  2400                           fsr2l	equ	0xFD9
  2401                           status	equ	0xFD8


Data Sizes:
    Strings     778
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      19
    BANK0           160      0       0
    BANK1           256    256     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    readLoRaData@buff	PTR unsigned char  size(2) Largest target is 256
		 -> main@buff(BANK1[256]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 256
		 -> sendLoRaData@txBuffer(BANK1[256]), 


Critical Paths under _main in COMRAM

    _main->_readLoRaData
    _readLoRaData->_WriteSXRegister
    _initLoRaRx->_WriteSXRegister
    _ReadSXRegister->_SPIReceive
    _InitModule->_WriteSXRegister
    _WriteSXRegister->_ReadSXRegister

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               263   258      5    9739
                                             12 COMRAM     7     2      5
                                              0 BANK1    256   256      0
                           _UARTInit
                      _UARTWriteByte
                         _initLoRaRx
                       _readLoRaData
 ---------------------------------------------------------------------------------
 (1) _readLoRaData                                         5     3      2    3351
                                              7 COMRAM     5     3      2
                     _ReadSXRegister
                    _WriteSXRegister
 ---------------------------------------------------------------------------------
 (1) _initLoRaRx                                           1     1      0    6182
                                              7 COMRAM     1     1      0
                          _AntennaRX
                         _InitModule
                     _InitRFLoRaPins
                     _ReadSXRegister
                      _ResetRFModule
                            _SPIInit
                    _WriteSXRegister
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ResetRFModule                                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadSXRegister                                       2     2      0      90
                                              3 COMRAM     2     2      0
                         _SPIReceive
                        _SPITransfer
 ---------------------------------------------------------------------------------
 (3) _SPIReceive                                           3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InitRFLoRaPins                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitModule                                           0     0      0    3046
                    _WriteSXRegister
 ---------------------------------------------------------------------------------
 (2) _WriteSXRegister                                      2     1      1    3046
                                              5 COMRAM     2     1      1
                     _ReadSXRegister (ARG)
                        _SPITransfer
 ---------------------------------------------------------------------------------
 (3) _SPITransfer                                          2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _AntennaRX                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTWriteByte                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTInit
   _UARTWriteByte
   _initLoRaRx
     _AntennaRX
     _InitModule
       _WriteSXRegister
         _ReadSXRegister (ARG)
           _SPIReceive
           _SPITransfer
         _SPITransfer (ARG)
     _InitRFLoRaPins
     _ReadSXRegister
       _SPIReceive
       _SPITransfer
     _ResetRFModule
     _SPIInit
     _WriteSXRegister
       _ReadSXRegister (ARG)
         _SPIReceive
         _SPITransfer
       _SPITransfer (ARG)
   _readLoRaData
     _ReadSXRegister
       _SPIReceive
       _SPITransfer
     _WriteSXRegister
       _ReadSXRegister (ARG)
         _SPIReceive
         _SPITransfer
       _SPITransfer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     13      13       1       20.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BIGRAM             F37      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jun 20 09:04:34 2019

     __end_of_InitRFLoRaPins F9E4        __end_of_ResetRFModule FAA2                           l13 FAE8  
                         l14 FB0C                           l83 F9F0                           l89 FA18  
                _SPITransfer F9E4                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                          l211 FBEE  
                        l212 FBD4                          l206 FB98                          l209 FBAC  
               __CFG_CPB$OFF 000000                          u227 FB54                          u237 FB84  
                        u247 FA84                          u257 FA96                 __CFG_CPD$OFF 000000  
                        u267 FA00                          wreg 000FE8                   _TXSTA1bits 000FAC  
               __CFG_LVP$OFF 000000                         l1028 F9CA                         l1352 FAE8  
                       l1356 FAFC                         STR_1 FF8A                         STR_2 FFD3  
                       STR_3 FCF5                         STR_4 FFDF                         STR_5 FFEA  
                       STR_6 FFAC                         STR_7 FE76                         STR_8 FFF5  
                       STR_9 FE5F        SPITransfer@dummy_byte 0001                         _PEIE 007F96  
                       _RCIE 007CED                         _RCIF 007CF5        ReadSXRegister@address 0005  
                       _main FAD8              __end_of_SPIInit FA7A                         indf2 000FDF  
                       fsr2l 000FD9                __CFG_BORV$190 000000                         prodh 000FF4  
                       prodl 000FF3                         start 0000                __CFG_IESO$OFF 000000  
     ReadSXRegister@RegValue 0004                 ___param_bank 000000              ?_InitRFLoRaPins 0001  
               _BAUDCON1bits 000FB8                        ?_main 000D                        STR_10 FE2F  
                      STR_11 FED2                        STR_20 FFC6                        STR_12 FD75  
                      STR_13 FFFD                        STR_21 FFB9                        STR_22 FEBB  
                      STR_30 FDAB                        STR_14 FD1B                        STR_15 FF68  
                      STR_23 FDE1                        STR_31 FD90                        STR_16 FF79  
                      STR_24 FDC6                        STR_32 FD59                        STR_17 FF57  
                      STR_33 FEE6                        STR_25 FE47                        STR_26 FF33  
                      STR_18 FF0D                        STR_34 FE16                        STR_19 FF9B  
                      STR_35 FF20                        STR_27 FE8D                        STR_28 FEA4  
                      STR_36 FD3C                        STR_37 FEFA                        STR_29 FDFC  
                      STR_38 FF46                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000             __end_of_UARTInit FAD8                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
         __CFG_MCLRE$EXTMCLR 000000                        main@i 0012               _ReadSXRegister FA3E  
                      status 000FD8               __CFG_HFOFST$ON 000000                  ?_SPIReceive 0001  
            __initialization F9BE                   _InitModule FC02                 __end_of_main FB24  
              ?_readLoRaData 0008                       ??_main 0012                __activetblptr 000002  
         __size_of_AntennaRX 0016                    ??_SPIInit 0001       __end_of_ReadSXRegister FA5C  
             __CFG_WDTEN$OFF 000000                       _RCREG1 000FAE                       _RCSTA1 000FAB  
                     _SPBRG1 000FAF                       _TXREG1 000FAD                       _TXSTA1 000FAC  
             __CFG_XINST$OFF 000000               __CFG_STVREN$ON 000000               ??_readLoRaData 000A  
         SPIReceive@data_out 0002                 __mediumconst FCF4                       tblptru 000FF8  
        __size_of_SPIReceive 0018              ?_ReadSXRegister 0001                   __accesstop 0060  
    __end_of__initialization F9BE              __CFG_PBADEN$OFF 000000                ___rparam_used 000001  
          __end_of_AntennaRX FA0C                  ?_InitModule 0001               __pcstackCOMRAM 0001  
                  ?_UARTInit 0001     __size_of_WriteSXRegister 001A                 ?_SPITransfer 0001  
      __end_of_UARTWriteByte F9D4  readLoRaData@RXNumberOfBytes 000A              __CFG_PLLCFG$OFF 000000  
           ??_InitRFLoRaPins 0001           __CFG_CCP2MX$PORTC1 000000                   ??_UARTInit 0003  
         __CFG_CCP3MX$PORTB5 000000                      _SPBRGH1 000FB0                      _SSP2BUF 000F6F  
        __size_of_InitModule 00F2                      _SPIInit FA5C       __size_of_ResetRFModule 0028  
       __end_of_readLoRaData FC02            UARTWriteByte@data 0001              __CFG_PWRTEN$OFF 000000  
               ??_SPIReceive 0001                      __Hparam 0000                      __Lparam 0000  
                 _initLoRaRx FB24                      __pcinit F9BE                      __ramtop 1000  
                    __ptext0 FAD8                      __ptext1 FB90                      __ptext2 FB24  
                    __ptext3 FA5C                      __ptext4 FA7A                      __ptext5 FA3E  
                    __ptext6 FA0C                      __ptext7 F9D4                      __ptext8 FC02  
                    __ptext9 FA24            ??_WriteSXRegister 0007           __end_of_SPIReceive FA24  
       end_of_initialization F9BE                __Lmediumconst FCF4                _ResetRFModule FA7A  
       __size_of_SPITransfer 0012             __CFG_FOSC$INTIO7 000000             ??_ReadSXRegister 0004  
                  _TRISBbits 000F93                    _TRISCbits 000F94                 ??_InitModule 0008  
                ?_initLoRaRx 0001               ?_ResetRFModule 0001                    _AntennaRX F9F6  
          __size_of_UARTInit 0036          start_initialization F9BE        __size_of_readLoRaData 0072  
         __end_of_InitModule FCF4                   ?_AntennaRX 0001            SPIReceive@data_in 0003  
               _readLoRaData FB90                __pcstackBANK1 0100          __size_of_initLoRaRx 006C  
                   ?_SPIInit 0001       __size_of_UARTWriteByte 000C              ??_ResetRFModule 0001  
              __pmediumconst FCF4              _WriteSXRegister FA24             __CFG_PRICLKEN$ON 000000  
                   _LATBbits 000F8A                     _LATCbits 000F8B                     _PIE1bits 000F9D  
              readLoRaData@i 000B                     _PIR3bits 000FA4             __CFG_WDTPS$32768 000000  
        SPITransfer@data_out 0002                     _SSP2CON1 000F6C                     _UARTInit FAA2  
                ??_AntennaRX 0001      __size_of_InitRFLoRaPins 0010                _UARTWriteByte F9C8  
           __size_of_SPIInit 001E      __end_of_WriteSXRegister FA3E                     __Hrparam 0000  
               ??_initLoRaRx 0008                     __Lrparam 0000           __CFG_BOREN$SBORDIS 000000  
          __CFG_P2BMX$PORTB5 000000                ??_SPITransfer 0001               ?_UARTWriteByte 0001  
        readLoRaData@reg_val 000C                   _ANSELBbits 000F39                   _ANSELCbits 000F3A  
                   __ptext10 F9E4                     __ptext11 F9F6                     __ptext12 F9C8  
                   __ptext13 FAA2           __end_of_initLoRaRx FB90             readLoRaData@buff 0008  
              __size_of_main 004C          WriteSXRegister@data 0006                     main@argc 000D  
                   main@argv 000F                     main@buff 0100                 _SSP2STATbits 000F6D  
        __end_of_SPITransfer F9F6      __size_of_ReadSXRegister 001E                   _RCSTA1bits 000FAB  
           ?_WriteSXRegister 0006       WriteSXRegister@address 0007              ??_UARTWriteByte 0001  
             _InitRFLoRaPins F9D4            __CFG_T3CMX$PORTC0 000000         SPIReceive@dummy_byte 0001  
                 _SPIReceive FA0C             UARTInit@baudRate 0001  
