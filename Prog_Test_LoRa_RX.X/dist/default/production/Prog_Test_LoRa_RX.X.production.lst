

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jun  5 12:34:37 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 2.00
    31                           ; Generated 27/05/2018 GMT
    32                           ; 
    33                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F26K22 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     _ANSELCbits	set	3898
    65  0000                     _ANSELBbits	set	3897
    66  0000                     _LATCbits	set	3979
    67  0000                     _RCREG1	set	4014
    68  0000                     _TXREG1	set	4013
    69  0000                     _SPBRGH1	set	4016
    70  0000                     _SPBRG1	set	4015
    71  0000                     _BAUDCON1bits	set	4024
    72  0000                     _PIE1bits	set	3997
    73  0000                     _RCSTA1bits	set	4011
    74  0000                     _TXSTA1bits	set	4012
    75  0000                     _RCSTA1	set	4011
    76  0000                     _TXSTA1	set	4012
    77  0000                     _TRISCbits	set	3988
    78  0000                     _PIR3bits	set	4004
    79  0000                     _SSP2BUF	set	3951
    80  0000                     _SSP2CON1	set	3948
    81  0000                     _SSP2STATbits	set	3949
    82  0000                     _TRISBbits	set	3987
    83  0000                     _LATBbits	set	3978
    84  0000                     _PEIE	set	32662
    85  0000                     _RCIE	set	31981
    86  0000                     _RCIF	set	31989
    87                           
    88                           	psect	mediumconst
    89  00FBE2                     __pmediumconst:
    90                           	opt stack 0
    91  00FBE2  00                 	db	0
    92  00FBE3                     STR_25:
    93  00FBE3  6D                 	db	109	;'m'
    94  00FBE4  6F                 	db	111	;'o'
    95  00FBE5  64                 	db	100	;'d'
    96  00FBE6  65                 	db	101	;'e'
    97  00FBE7  20                 	db	32
    98  00FBE8  3D                 	db	61	;'='
    99  00FBE9  20                 	db	32
   100  00FBEA  4C                 	db	76	;'L'
   101  00FBEB  6F                 	db	111	;'o'
   102  00FBEC  52                 	db	82	;'R'
   103  00FBED  61                 	db	97	;'a'
   104  00FBEE  20                 	db	32
   105  00FBEF  77                 	db	119	;'w'
   106  00FBF0  69                 	db	105	;'i'
   107  00FBF1  74                 	db	116	;'t'
   108  00FBF2  68                 	db	104	;'h'
   109  00FBF3  20                 	db	32
   110  00FBF4  46                 	db	70	;'F'
   111  00FBF5  53                 	db	83	;'S'
   112  00FBF6  4B                 	db	75	;'K'
   113  00FBF7  20                 	db	32
   114  00FBF8  72                 	db	114	;'r'
   115  00FBF9  65                 	db	101	;'e'
   116  00FBFA  67                 	db	103	;'g'
   117  00FBFB  69                 	db	105	;'i'
   118  00FBFC  73                 	db	115	;'s'
   119  00FBFD  74                 	db	116	;'t'
   120  00FBFE  65                 	db	101	;'e'
   121  00FBFF  72                 	db	114	;'r'
   122  00FC00  73                 	db	115	;'s'
   123  00FC01  20                 	db	32
   124  00FC02  61                 	db	97	;'a'
   125  00FC03  63                 	db	99	;'c'
   126  00FC04  63                 	db	99	;'c'
   127  00FC05  65                 	db	101	;'e'
   128  00FC06  73                 	db	115	;'s'
   129  00FC07  73                 	db	115	;'s'
   130  00FC08  00                 	db	0
   131  00FC09  63                 	db	99	;'c'
   132  00FC0A  6F                 	db	111	;'o'
   133  00FC0B  6E                 	db	110	;'n'
   134  00FC0C  66                 	db	102	;'f'
   135  00FC0D  69                 	db	105	;'i'
   136  00FC0E  67                 	db	103	;'g'
   137  00FC0F  75                 	db	117	;'u'
   138  00FC10  72                 	db	114	;'r'
   139  00FC11  61                 	db	97	;'a'
   140  00FC12  74                 	db	116	;'t'
   141  00FC13  69                 	db	105	;'i'
   142  00FC14  6F                 	db	111	;'o'
   143  00FC15  6E                 	db	110	;'n'
   144  00FC16  20                 	db	32
   145  00FC17  72                 	db	114	;'r'
   146  00FC18  65                 	db	101	;'e'
   147  00FC19  67                 	db	103	;'g'
   148  00FC1A  69                 	db	105	;'i'
   149  00FC1B  73                 	db	115	;'s'
   150  00FC1C  74                 	db	116	;'t'
   151  00FC1D  65                 	db	101	;'e'
   152  00FC1E  72                 	db	114	;'r'
   153  00FC1F  73                 	db	115	;'s'
   154  00FC20  20                 	db	32
   155  00FC21  63                 	db	99	;'c'
   156  00FC22  6F                 	db	111	;'o'
   157  00FC23  6E                 	db	110	;'n'
   158  00FC24  74                 	db	116	;'t'
   159  00FC25  65                 	db	101	;'e'
   160  00FC26  6E                 	db	110	;'n'
   161  00FC27  74                 	db	116	;'t'
   162  00FC28  3A                 	db	58	;':'
   163  00FC29  00                 	db	0
   164  00FC2A                     STR_19:
   165  00FC2A  52                 	db	82	;'R'
   166  00FC2B  45                 	db	69	;'E'
   167  00FC2C  47                 	db	71	;'G'
   168  00FC2D  5F                 	db	95	;'_'
   169  00FC2E  50                 	db	80	;'P'
   170  00FC2F  4B                 	db	75	;'K'
   171  00FC30  54                 	db	84	;'T'
   172  00FC31  5F                 	db	95	;'_'
   173  00FC32  52                 	db	82	;'R'
   174  00FC33  53                 	db	83	;'S'
   175  00FC34  53                 	db	83	;'S'
   176  00FC35  49                 	db	73	;'I'
   177  00FC36  5F                 	db	95	;'_'
   178  00FC37  56                 	db	86	;'V'
   179  00FC38  41                 	db	65	;'A'
   180  00FC39  4C                 	db	76	;'L'
   181  00FC3A  55                 	db	85	;'U'
   182  00FC3B  45                 	db	69	;'E'
   183  00FC3C  20                 	db	32
   184  00FC3D  28                 	db	40
   185  00FC3E  64                 	db	100	;'d'
   186  00FC3F  65                 	db	101	;'e'
   187  00FC40  63                 	db	99	;'c'
   188  00FC41  69                 	db	105	;'i'
   189  00FC42  6D                 	db	109	;'m'
   190  00FC43  61                 	db	97	;'a'
   191  00FC44  6C                 	db	108	;'l'
   192  00FC45  29                 	db	41
   193  00FC46  20                 	db	32
   194  00FC47  3D                 	db	61	;'='
   195  00FC48  20                 	db	32
   196  00FC49  00                 	db	0
   197  00FC4A                     STR_4:
   198  00FC4A  73                 	db	115	;'s'
   199  00FC4B  65                 	db	101	;'e'
   200  00FC4C  74                 	db	116	;'t'
   201  00FC4D  20                 	db	32
   202  00FC4E  6D                 	db	109	;'m'
   203  00FC4F  6F                 	db	111	;'o'
   204  00FC50  64                 	db	100	;'d'
   205  00FC51  65                 	db	101	;'e'
   206  00FC52  20                 	db	32
   207  00FC53  74                 	db	116	;'t'
   208  00FC54  6F                 	db	111	;'o'
   209  00FC55  20                 	db	32
   210  00FC56  4C                 	db	76	;'L'
   211  00FC57  6F                 	db	111	;'o'
   212  00FC58  52                 	db	82	;'R'
   213  00FC59  61                 	db	97	;'a'
   214  00FC5A  20                 	db	32
   215  00FC5B  63                 	db	99	;'c'
   216  00FC5C  6F                 	db	111	;'o'
   217  00FC5D  6E                 	db	110	;'n'
   218  00FC5E  74                 	db	116	;'t'
   219  00FC5F  69                 	db	105	;'i'
   220  00FC60  6E                 	db	110	;'n'
   221  00FC61  75                 	db	117	;'u'
   222  00FC62  6F                 	db	111	;'o'
   223  00FC63  75                 	db	117	;'u'
   224  00FC64  73                 	db	115	;'s'
   225  00FC65  20                 	db	32
   226  00FC66  52                 	db	82	;'R'
   227  00FC67  58                 	db	88	;'X'
   228  00FC68  00                 	db	0
   229  00FC69                     STR_17:
   230  00FC69  52                 	db	82	;'R'
   231  00FC6A  45                 	db	69	;'E'
   232  00FC6B  47                 	db	71	;'G'
   233  00FC6C  5F                 	db	95	;'_'
   234  00FC6D  46                 	db	70	;'F'
   235  00FC6E  49                 	db	73	;'I'
   236  00FC6F  46                 	db	70	;'F'
   237  00FC70  4F                 	db	79	;'O'
   238  00FC71  5F                 	db	95	;'_'
   239  00FC72  52                 	db	82	;'R'
   240  00FC73  58                 	db	88	;'X'
   241  00FC74  5F                 	db	95	;'_'
   242  00FC75  43                 	db	67	;'C'
   243  00FC76  55                 	db	85	;'U'
   244  00FC77  52                 	db	82	;'R'
   245  00FC78  52                 	db	82	;'R'
   246  00FC79  45                 	db	69	;'E'
   247  00FC7A  4E                 	db	78	;'N'
   248  00FC7B  54                 	db	84	;'T'
   249  00FC7C  5F                 	db	95	;'_'
   250  00FC7D  41                 	db	65	;'A'
   251  00FC7E  44                 	db	68	;'D'
   252  00FC7F  44                 	db	68	;'D'
   253  00FC80  52                 	db	82	;'R'
   254  00FC81  20                 	db	32
   255  00FC82  3D                 	db	61	;'='
   256  00FC83  20                 	db	32
   257  00FC84  30                 	db	48	;'0'
   258  00FC85  78                 	db	120	;'x'
   259  00FC86  00                 	db	0
   260  00FC87  52                 	db	82	;'R'
   261  00FC88  45                 	db	69	;'E'
   262  00FC89  47                 	db	71	;'G'
   263  00FC8A  5F                 	db	95	;'_'
   264  00FC8B  44                 	db	68	;'D'
   265  00FC8C  45                 	db	69	;'E'
   266  00FC8D  54                 	db	84	;'T'
   267  00FC8E  45                 	db	69	;'E'
   268  00FC8F  43                 	db	67	;'C'
   269  00FC90  54                 	db	84	;'T'
   270  00FC91  49                 	db	73	;'I'
   271  00FC92  4F                 	db	79	;'O'
   272  00FC93  4E                 	db	78	;'N'
   273  00FC94  5F                 	db	95	;'_'
   274  00FC95  54                 	db	84	;'T'
   275  00FC96  48                 	db	72	;'H'
   276  00FC97  52                 	db	82	;'R'
   277  00FC98  45                 	db	69	;'E'
   278  00FC99  53                 	db	83	;'S'
   279  00FC9A  48                 	db	72	;'H'
   280  00FC9B  4F                 	db	79	;'O'
   281  00FC9C  4C                 	db	76	;'L'
   282  00FC9D  44                 	db	68	;'D'
   283  00FC9E  20                 	db	32
   284  00FC9F  3D                 	db	61	;'='
   285  00FCA0  20                 	db	32
   286  00FCA1  30                 	db	48	;'0'
   287  00FCA2  78                 	db	120	;'x'
   288  00FCA3  00                 	db	0
   289  00FCA4  52                 	db	82	;'R'
   290  00FCA5  45                 	db	69	;'E'
   291  00FCA6  47                 	db	71	;'G'
   292  00FCA7  5F                 	db	95	;'_'
   293  00FCA8  4D                 	db	77	;'M'
   294  00FCA9  41                 	db	65	;'A'
   295  00FCAA  58                 	db	88	;'X'
   296  00FCAB  5F                 	db	95	;'_'
   297  00FCAC  50                 	db	80	;'P'
   298  00FCAD  41                 	db	65	;'A'
   299  00FCAE  59                 	db	89	;'Y'
   300  00FCAF  4C                 	db	76	;'L'
   301  00FCB0  4F                 	db	79	;'O'
   302  00FCB1  41                 	db	65	;'A'
   303  00FCB2  44                 	db	68	;'D'
   304  00FCB3  5F                 	db	95	;'_'
   305  00FCB4  4C                 	db	76	;'L'
   306  00FCB5  45                 	db	69	;'E'
   307  00FCB6  4E                 	db	78	;'N'
   308  00FCB7  47                 	db	71	;'G'
   309  00FCB8  54                 	db	84	;'T'
   310  00FCB9  48                 	db	72	;'H'
   311  00FCBA  20                 	db	32
   312  00FCBB  3D                 	db	61	;'='
   313  00FCBC  20                 	db	32
   314  00FCBD  30                 	db	48	;'0'
   315  00FCBE  78                 	db	120	;'x'
   316  00FCBF  00                 	db	0
   317  00FCC0                     STR_34:
   318  00FCC0  43                 	db	67	;'C'
   319  00FCC1  68                 	db	104	;'h'
   320  00FCC2  61                 	db	97	;'a'
   321  00FCC3  6E                 	db	110	;'n'
   322  00FCC4  6E                 	db	110	;'n'
   323  00FCC5  65                 	db	101	;'e'
   324  00FCC6  6C                 	db	108	;'l'
   325  00FCC7  20                 	db	32
   326  00FCC8  41                 	db	65	;'A'
   327  00FCC9  63                 	db	99	;'c'
   328  00FCCA  74                 	db	116	;'t'
   329  00FCCB  69                 	db	105	;'i'
   330  00FCCC  76                 	db	118	;'v'
   331  00FCCD  69                 	db	105	;'i'
   332  00FCCE  74                 	db	116	;'t'
   333  00FCCF  79                 	db	121	;'y'
   334  00FCD0  20                 	db	32
   335  00FCD1  44                 	db	68	;'D'
   336  00FCD2  65                 	db	101	;'e'
   337  00FCD3  74                 	db	116	;'t'
   338  00FCD4  65                 	db	101	;'e'
   339  00FCD5  63                 	db	99	;'c'
   340  00FCD6  74                 	db	116	;'t'
   341  00FCD7  69                 	db	105	;'i'
   342  00FCD8  6F                 	db	111	;'o'
   343  00FCD9  6E                 	db	110	;'n'
   344  00FCDA  00                 	db	0
   345  00FCDB  52                 	db	82	;'R'
   346  00FCDC  45                 	db	69	;'E'
   347  00FCDD  47                 	db	71	;'G'
   348  00FCDE  5F                 	db	95	;'_'
   349  00FCDF  50                 	db	80	;'P'
   350  00FCE0  52                 	db	82	;'R'
   351  00FCE1  45                 	db	69	;'E'
   352  00FCE2  41                 	db	65	;'A'
   353  00FCE3  4D                 	db	77	;'M'
   354  00FCE4  42                 	db	66	;'B'
   355  00FCE5  4C                 	db	76	;'L'
   356  00FCE6  45                 	db	69	;'E'
   357  00FCE7  5F                 	db	95	;'_'
   358  00FCE8  4C                 	db	76	;'L'
   359  00FCE9  53                 	db	83	;'S'
   360  00FCEA  42                 	db	66	;'B'
   361  00FCEB  5F                 	db	95	;'_'
   362  00FCEC  4C                 	db	76	;'L'
   363  00FCED  4F                 	db	79	;'O'
   364  00FCEE  52                 	db	82	;'R'
   365  00FCEF  41                 	db	65	;'A'
   366  00FCF0  20                 	db	32
   367  00FCF1  3D                 	db	61	;'='
   368  00FCF2  20                 	db	32
   369  00FCF3  30                 	db	48	;'0'
   370  00FCF4  78                 	db	120	;'x'
   371  00FCF5  00                 	db	0
   372  00FCF6  52                 	db	82	;'R'
   373  00FCF7  45                 	db	69	;'E'
   374  00FCF8  47                 	db	71	;'G'
   375  00FCF9  5F                 	db	95	;'_'
   376  00FCFA  50                 	db	80	;'P'
   377  00FCFB  52                 	db	82	;'R'
   378  00FCFC  45                 	db	69	;'E'
   379  00FCFD  41                 	db	65	;'A'
   380  00FCFE  4D                 	db	77	;'M'
   381  00FCFF  42                 	db	66	;'B'
   382  00FD00  4C                 	db	76	;'L'
   383  00FD01  45                 	db	69	;'E'
   384  00FD02  5F                 	db	95	;'_'
   385  00FD03  4D                 	db	77	;'M'
   386  00FD04  53                 	db	83	;'S'
   387  00FD05  42                 	db	66	;'B'
   388  00FD06  5F                 	db	95	;'_'
   389  00FD07  4C                 	db	76	;'L'
   390  00FD08  4F                 	db	79	;'O'
   391  00FD09  52                 	db	82	;'R'
   392  00FD0A  41                 	db	65	;'A'
   393  00FD0B  20                 	db	32
   394  00FD0C  3D                 	db	61	;'='
   395  00FD0D  20                 	db	32
   396  00FD0E  30                 	db	48	;'0'
   397  00FD0F  78                 	db	120	;'x'
   398  00FD10  00                 	db	0
   399  00FD11  52                 	db	82	;'R'
   400  00FD12  45                 	db	69	;'E'
   401  00FD13  47                 	db	71	;'G'
   402  00FD14  5F                 	db	95	;'_'
   403  00FD15  46                 	db	70	;'F'
   404  00FD16  49                 	db	73	;'I'
   405  00FD17  46                 	db	70	;'F'
   406  00FD18  4F                 	db	79	;'O'
   407  00FD19  5F                 	db	95	;'_'
   408  00FD1A  52                 	db	82	;'R'
   409  00FD1B  58                 	db	88	;'X'
   410  00FD1C  5F                 	db	95	;'_'
   411  00FD1D  42                 	db	66	;'B'
   412  00FD1E  41                 	db	65	;'A'
   413  00FD1F  53                 	db	83	;'S'
   414  00FD20  45                 	db	69	;'E'
   415  00FD21  5F                 	db	95	;'_'
   416  00FD22  41                 	db	65	;'A'
   417  00FD23  44                 	db	68	;'D'
   418  00FD24  44                 	db	68	;'D'
   419  00FD25  52                 	db	82	;'R'
   420  00FD26  20                 	db	32
   421  00FD27  3D                 	db	61	;'='
   422  00FD28  20                 	db	32
   423  00FD29  30                 	db	48	;'0'
   424  00FD2A  78                 	db	120	;'x'
   425  00FD2B  00                 	db	0
   426  00FD2C  52                 	db	82	;'R'
   427  00FD2D  45                 	db	69	;'E'
   428  00FD2E  47                 	db	71	;'G'
   429  00FD2F  5F                 	db	95	;'_'
   430  00FD30  46                 	db	70	;'F'
   431  00FD31  49                 	db	73	;'I'
   432  00FD32  46                 	db	70	;'F'
   433  00FD33  4F                 	db	79	;'O'
   434  00FD34  5F                 	db	95	;'_'
   435  00FD35  54                 	db	84	;'T'
   436  00FD36  58                 	db	88	;'X'
   437  00FD37  5F                 	db	95	;'_'
   438  00FD38  42                 	db	66	;'B'
   439  00FD39  41                 	db	65	;'A'
   440  00FD3A  53                 	db	83	;'S'
   441  00FD3B  45                 	db	69	;'E'
   442  00FD3C  5F                 	db	95	;'_'
   443  00FD3D  41                 	db	65	;'A'
   444  00FD3E  44                 	db	68	;'D'
   445  00FD3F  44                 	db	68	;'D'
   446  00FD40  52                 	db	82	;'R'
   447  00FD41  20                 	db	32
   448  00FD42  3D                 	db	61	;'='
   449  00FD43  20                 	db	32
   450  00FD44  30                 	db	48	;'0'
   451  00FD45  78                 	db	120	;'x'
   452  00FD46  00                 	db	0
   453  00FD47  52                 	db	82	;'R'
   454  00FD48  45                 	db	69	;'E'
   455  00FD49  47                 	db	71	;'G'
   456  00FD4A  5F                 	db	95	;'_'
   457  00FD4B  53                 	db	83	;'S'
   458  00FD4C  59                 	db	89	;'Y'
   459  00FD4D  4D                 	db	77	;'M'
   460  00FD4E  42                 	db	66	;'B'
   461  00FD4F  5F                 	db	95	;'_'
   462  00FD50  54                 	db	84	;'T'
   463  00FD51  49                 	db	73	;'I'
   464  00FD52  4D                 	db	77	;'M'
   465  00FD53  45                 	db	69	;'E'
   466  00FD54  4F                 	db	79	;'O'
   467  00FD55  55                 	db	85	;'U'
   468  00FD56  54                 	db	84	;'T'
   469  00FD57  5F                 	db	95	;'_'
   470  00FD58  4C                 	db	76	;'L'
   471  00FD59  53                 	db	83	;'S'
   472  00FD5A  42                 	db	66	;'B'
   473  00FD5B  20                 	db	32
   474  00FD5C  3D                 	db	61	;'='
   475  00FD5D  20                 	db	32
   476  00FD5E  30                 	db	48	;'0'
   477  00FD5F  78                 	db	120	;'x'
   478  00FD60  00                 	db	0
   479  00FD61                     STR_9:
   480  00FD61  70                 	db	112	;'p'
   481  00FD62  61                 	db	97	;'a'
   482  00FD63  63                 	db	99	;'c'
   483  00FD64  6B                 	db	107	;'k'
   484  00FD65  65                 	db	101	;'e'
   485  00FD66  74                 	db	116	;'t'
   486  00FD67  20                 	db	32
   487  00FD68  72                 	db	114	;'r'
   488  00FD69  65                 	db	101	;'e'
   489  00FD6A  63                 	db	99	;'c'
   490  00FD6B  65                 	db	101	;'e'
   491  00FD6C  70                 	db	112	;'p'
   492  00FD6D  74                 	db	116	;'t'
   493  00FD6E  69                 	db	105	;'i'
   494  00FD6F  6F                 	db	111	;'o'
   495  00FD70  6E                 	db	110	;'n'
   496  00FD71  20                 	db	32
   497  00FD72  63                 	db	99	;'c'
   498  00FD73  6F                 	db	111	;'o'
   499  00FD74  6D                 	db	109	;'m'
   500  00FD75  70                 	db	112	;'p'
   501  00FD76  6C                 	db	108	;'l'
   502  00FD77  65                 	db	101	;'e'
   503  00FD78  74                 	db	116	;'t'
   504  00FD79  65                 	db	101	;'e'
   505  00FD7A  00                 	db	0
   506  00FD7B  52                 	db	82	;'R'
   507  00FD7C  45                 	db	69	;'E'
   508  00FD7D  47                 	db	71	;'G'
   509  00FD7E  5F                 	db	95	;'_'
   510  00FD7F  44                 	db	68	;'D'
   511  00FD80  45                 	db	69	;'E'
   512  00FD81  54                 	db	84	;'T'
   513  00FD82  45                 	db	69	;'E'
   514  00FD83  43                 	db	67	;'C'
   515  00FD84  54                 	db	84	;'T'
   516  00FD85  5F                 	db	95	;'_'
   517  00FD86  4F                 	db	79	;'O'
   518  00FD87  50                 	db	80	;'P'
   519  00FD88  54                 	db	84	;'T'
   520  00FD89  49                 	db	73	;'I'
   521  00FD8A  4D                 	db	77	;'M'
   522  00FD8B  49                 	db	73	;'I'
   523  00FD8C  5A                 	db	90	;'Z'
   524  00FD8D  45                 	db	69	;'E'
   525  00FD8E  20                 	db	32
   526  00FD8F  3D                 	db	61	;'='
   527  00FD90  20                 	db	32
   528  00FD91  30                 	db	48	;'0'
   529  00FD92  78                 	db	120	;'x'
   530  00FD93  00                 	db	0
   531  00FD94                     STR_1:
   532  00FD94  73                 	db	115	;'s'
   533  00FD95  65                 	db	101	;'e'
   534  00FD96  74                 	db	116	;'t'
   535  00FD97  20                 	db	32
   536  00FD98  6D                 	db	109	;'m'
   537  00FD99  6F                 	db	111	;'o'
   538  00FD9A  64                 	db	100	;'d'
   539  00FD9B  65                 	db	101	;'e'
   540  00FD9C  20                 	db	32
   541  00FD9D  74                 	db	116	;'t'
   542  00FD9E  6F                 	db	111	;'o'
   543  00FD9F  20                 	db	32
   544  00FDA0  4C                 	db	76	;'L'
   545  00FDA1  6F                 	db	111	;'o'
   546  00FDA2  52                 	db	82	;'R'
   547  00FDA3  61                 	db	97	;'a'
   548  00FDA4  20                 	db	32
   549  00FDA5  73                 	db	115	;'s'
   550  00FDA6  74                 	db	116	;'t'
   551  00FDA7  61                 	db	97	;'a'
   552  00FDA8  6E                 	db	110	;'n'
   553  00FDA9  64                 	db	100	;'d'
   554  00FDAA  62                 	db	98	;'b'
   555  00FDAB  79                 	db	121	;'y'
   556  00FDAC  00                 	db	0
   557  00FDAD                     STR_32:
   558  00FDAD  63                 	db	99	;'c'
   559  00FDAE  6F                 	db	111	;'o'
   560  00FDAF  6E                 	db	110	;'n'
   561  00FDB0  74                 	db	116	;'t'
   562  00FDB1  69                 	db	105	;'i'
   563  00FDB2  6E                 	db	110	;'n'
   564  00FDB3  75                 	db	117	;'u'
   565  00FDB4  6F                 	db	111	;'o'
   566  00FDB5  75                 	db	117	;'u'
   567  00FDB6  73                 	db	115	;'s'
   568  00FDB7  20                 	db	32
   569  00FDB8  72                 	db	114	;'r'
   570  00FDB9  65                 	db	101	;'e'
   571  00FDBA  63                 	db	99	;'c'
   572  00FDBB  65                 	db	101	;'e'
   573  00FDBC  69                 	db	105	;'i'
   574  00FDBD  76                 	db	118	;'v'
   575  00FDBE  65                 	db	101	;'e'
   576  00FDBF  20                 	db	32
   577  00FDC0  6D                 	db	109	;'m'
   578  00FDC1  6F                 	db	111	;'o'
   579  00FDC2  64                 	db	100	;'d'
   580  00FDC3  65                 	db	101	;'e'
   581  00FDC4  00                 	db	0
   582  00FDC5  52                 	db	82	;'R'
   583  00FDC6  45                 	db	69	;'E'
   584  00FDC7  47                 	db	71	;'G'
   585  00FDC8  5F                 	db	95	;'_'
   586  00FDC9  49                 	db	73	;'I'
   587  00FDCA  52                 	db	82	;'R'
   588  00FDCB  51                 	db	81	;'Q'
   589  00FDCC  5F                 	db	95	;'_'
   590  00FDCD  46                 	db	70	;'F'
   591  00FDCE  4C                 	db	76	;'L'
   592  00FDCF  41                 	db	65	;'A'
   593  00FDD0  47                 	db	71	;'G'
   594  00FDD1  53                 	db	83	;'S'
   595  00FDD2  5F                 	db	95	;'_'
   596  00FDD3  4D                 	db	77	;'M'
   597  00FDD4  41                 	db	65	;'A'
   598  00FDD5  53                 	db	83	;'S'
   599  00FDD6  4B                 	db	75	;'K'
   600  00FDD7  20                 	db	32
   601  00FDD8  3D                 	db	61	;'='
   602  00FDD9  20                 	db	32
   603  00FDDA  30                 	db	48	;'0'
   604  00FDDB  78                 	db	120	;'x'
   605  00FDDC  00                 	db	0
   606  00FDDD                     STR_22:
   607  00FDDD  2D                 	db	45
   608  00FDDE  2D                 	db	45
   609  00FDDF  2D                 	db	45
   610  00FDE0  2D                 	db	45
   611  00FDE1  2D                 	db	45
   612  00FDE2  2D                 	db	45
   613  00FDE3  2D                 	db	45
   614  00FDE4  2D                 	db	45
   615  00FDE5  2D                 	db	45
   616  00FDE6  2D                 	db	45
   617  00FDE7  2D                 	db	45
   618  00FDE8  2D                 	db	45
   619  00FDE9  2D                 	db	45
   620  00FDEA  2D                 	db	45
   621  00FDEB  2D                 	db	45
   622  00FDEC  2D                 	db	45
   623  00FDED  2D                 	db	45
   624  00FDEE  2D                 	db	45
   625  00FDEF  2D                 	db	45
   626  00FDF0  2D                 	db	45
   627  00FDF1  2D                 	db	45
   628  00FDF2  2D                 	db	45
   629  00FDF3  2D                 	db	45
   630  00FDF4  00                 	db	0
   631  00FDF5                     STR_31:
   632  00FDF5  66                 	db	102	;'f'
   633  00FDF6  72                 	db	114	;'r'
   634  00FDF7  65                 	db	101	;'e'
   635  00FDF8  71                 	db	113	;'q'
   636  00FDF9  75                 	db	117	;'u'
   637  00FDFA  65                 	db	101	;'e'
   638  00FDFB  6E                 	db	110	;'n'
   639  00FDFC  63                 	db	99	;'c'
   640  00FDFD  79                 	db	121	;'y'
   641  00FDFE  20                 	db	32
   642  00FDFF  73                 	db	115	;'s'
   643  00FE00  79                 	db	121	;'y'
   644  00FE01  6E                 	db	110	;'n'
   645  00FE02  74                 	db	116	;'t'
   646  00FE03  68                 	db	104	;'h'
   647  00FE04  65                 	db	101	;'e'
   648  00FE05  73                 	db	115	;'s'
   649  00FE06  69                 	db	105	;'i'
   650  00FE07  73                 	db	115	;'s'
   651  00FE08  20                 	db	32
   652  00FE09  52                 	db	82	;'R'
   653  00FE0A  58                 	db	88	;'X'
   654  00FE0B  00                 	db	0
   655  00FE0C                     STR_29:
   656  00FE0C  66                 	db	102	;'f'
   657  00FE0D  72                 	db	114	;'r'
   658  00FE0E  65                 	db	101	;'e'
   659  00FE0F  71                 	db	113	;'q'
   660  00FE10  75                 	db	117	;'u'
   661  00FE11  65                 	db	101	;'e'
   662  00FE12  6E                 	db	110	;'n'
   663  00FE13  63                 	db	99	;'c'
   664  00FE14  79                 	db	121	;'y'
   665  00FE15  20                 	db	32
   666  00FE16  73                 	db	115	;'s'
   667  00FE17  79                 	db	121	;'y'
   668  00FE18  6E                 	db	110	;'n'
   669  00FE19  74                 	db	116	;'t'
   670  00FE1A  68                 	db	104	;'h'
   671  00FE1B  65                 	db	101	;'e'
   672  00FE1C  73                 	db	115	;'s'
   673  00FE1D  69                 	db	105	;'i'
   674  00FE1E  73                 	db	115	;'s'
   675  00FE1F  20                 	db	32
   676  00FE20  54                 	db	84	;'T'
   677  00FE21  58                 	db	88	;'X'
   678  00FE22  00                 	db	0
   679  00FE23  52                 	db	82	;'R'
   680  00FE24  45                 	db	69	;'E'
   681  00FE25  47                 	db	71	;'G'
   682  00FE26  5F                 	db	95	;'_'
   683  00FE27  4D                 	db	77	;'M'
   684  00FE28  4F                 	db	79	;'O'
   685  00FE29  44                 	db	68	;'D'
   686  00FE2A  45                 	db	69	;'E'
   687  00FE2B  4D                 	db	77	;'M'
   688  00FE2C  5F                 	db	95	;'_'
   689  00FE2D  43                 	db	67	;'C'
   690  00FE2E  4F                 	db	79	;'O'
   691  00FE2F  4E                 	db	78	;'N'
   692  00FE30  46                 	db	70	;'F'
   693  00FE31  49                 	db	73	;'I'
   694  00FE32  47                 	db	71	;'G'
   695  00FE33  31                 	db	49	;'1'
   696  00FE34  20                 	db	32
   697  00FE35  3D                 	db	61	;'='
   698  00FE36  20                 	db	32
   699  00FE37  30                 	db	48	;'0'
   700  00FE38  78                 	db	120	;'x'
   701  00FE39  00                 	db	0
   702  00FE3A  52                 	db	82	;'R'
   703  00FE3B  45                 	db	69	;'E'
   704  00FE3C  47                 	db	71	;'G'
   705  00FE3D  5F                 	db	95	;'_'
   706  00FE3E  4D                 	db	77	;'M'
   707  00FE3F  4F                 	db	79	;'O'
   708  00FE40  44                 	db	68	;'D'
   709  00FE41  45                 	db	69	;'E'
   710  00FE42  4D                 	db	77	;'M'
   711  00FE43  5F                 	db	95	;'_'
   712  00FE44  43                 	db	67	;'C'
   713  00FE45  4F                 	db	79	;'O'
   714  00FE46  4E                 	db	78	;'N'
   715  00FE47  46                 	db	70	;'F'
   716  00FE48  49                 	db	73	;'I'
   717  00FE49  47                 	db	71	;'G'
   718  00FE4A  32                 	db	50	;'2'
   719  00FE4B  20                 	db	32
   720  00FE4C  3D                 	db	61	;'='
   721  00FE4D  20                 	db	32
   722  00FE4E  30                 	db	48	;'0'
   723  00FE4F  78                 	db	120	;'x'
   724  00FE50  00                 	db	0
   725  00FE51  52                 	db	82	;'R'
   726  00FE52  45                 	db	69	;'E'
   727  00FE53  47                 	db	71	;'G'
   728  00FE54  5F                 	db	95	;'_'
   729  00FE55  46                 	db	70	;'F'
   730  00FE56  49                 	db	73	;'I'
   731  00FE57  46                 	db	70	;'F'
   732  00FE58  4F                 	db	79	;'O'
   733  00FE59  5F                 	db	95	;'_'
   734  00FE5A  41                 	db	65	;'A'
   735  00FE5B  44                 	db	68	;'D'
   736  00FE5C  44                 	db	68	;'D'
   737  00FE5D  52                 	db	82	;'R'
   738  00FE5E  5F                 	db	95	;'_'
   739  00FE5F  50                 	db	80	;'P'
   740  00FE60  54                 	db	84	;'T'
   741  00FE61  52                 	db	82	;'R'
   742  00FE62  20                 	db	32
   743  00FE63  3D                 	db	61	;'='
   744  00FE64  20                 	db	32
   745  00FE65  30                 	db	48	;'0'
   746  00FE66  78                 	db	120	;'x'
   747  00FE67  00                 	db	0
   748  00FE68                     STR_6:
   749  00FE68  76                 	db	118	;'v'
   750  00FE69  61                 	db	97	;'a'
   751  00FE6A  6C                 	db	108	;'l'
   752  00FE6B  69                 	db	105	;'i'
   753  00FE6C  64                 	db	100	;'d'
   754  00FE6D  20                 	db	32
   755  00FE6E  68                 	db	104	;'h'
   756  00FE6F  65                 	db	101	;'e'
   757  00FE70  61                 	db	97	;'a'
   758  00FE71  64                 	db	100	;'d'
   759  00FE72  65                 	db	101	;'e'
   760  00FE73  72                 	db	114	;'r'
   761  00FE74  20                 	db	32
   762  00FE75  72                 	db	114	;'r'
   763  00FE76  65                 	db	101	;'e'
   764  00FE77  63                 	db	99	;'c'
   765  00FE78  65                 	db	101	;'e'
   766  00FE79  69                 	db	105	;'i'
   767  00FE7A  76                 	db	118	;'v'
   768  00FE7B  65                 	db	101	;'e'
   769  00FE7C  64                 	db	100	;'d'
   770  00FE7D  00                 	db	0
   771  00FE7E                     STR_18:
   772  00FE7E  52                 	db	82	;'R'
   773  00FE7F  45                 	db	69	;'E'
   774  00FE80  47                 	db	71	;'G'
   775  00FE81  5F                 	db	95	;'_'
   776  00FE82  52                 	db	82	;'R'
   777  00FE83  58                 	db	88	;'X'
   778  00FE84  5F                 	db	95	;'_'
   779  00FE85  4E                 	db	78	;'N'
   780  00FE86  42                 	db	66	;'B'
   781  00FE87  5F                 	db	95	;'_'
   782  00FE88  42                 	db	66	;'B'
   783  00FE89  59                 	db	89	;'Y'
   784  00FE8A  54                 	db	84	;'T'
   785  00FE8B  45                 	db	69	;'E'
   786  00FE8C  53                 	db	83	;'S'
   787  00FE8D  20                 	db	32
   788  00FE8E  3D                 	db	61	;'='
   789  00FE8F  20                 	db	32
   790  00FE90  30                 	db	48	;'0'
   791  00FE91  78                 	db	120	;'x'
   792  00FE92  00                 	db	0
   793  00FE93                     STR_33:
   794  00FE93  73                 	db	115	;'s'
   795  00FE94  69                 	db	105	;'i'
   796  00FE95  6E                 	db	110	;'n'
   797  00FE96  67                 	db	103	;'g'
   798  00FE97  6C                 	db	108	;'l'
   799  00FE98  65                 	db	101	;'e'
   800  00FE99  20                 	db	32
   801  00FE9A  72                 	db	114	;'r'
   802  00FE9B  65                 	db	101	;'e'
   803  00FE9C  63                 	db	99	;'c'
   804  00FE9D  65                 	db	101	;'e'
   805  00FE9E  69                 	db	105	;'i'
   806  00FE9F  76                 	db	118	;'v'
   807  00FEA0  65                 	db	101	;'e'
   808  00FEA1  20                 	db	32
   809  00FEA2  6D                 	db	109	;'m'
   810  00FEA3  6F                 	db	111	;'o'
   811  00FEA4  64                 	db	100	;'d'
   812  00FEA5  65                 	db	101	;'e'
   813  00FEA6  00                 	db	0
   814  00FEA7  52                 	db	82	;'R'
   815  00FEA8  45                 	db	69	;'E'
   816  00FEA9  47                 	db	71	;'G'
   817  00FEAA  5F                 	db	95	;'_'
   818  00FEAB  48                 	db	72	;'H'
   819  00FEAC  4F                 	db	79	;'O'
   820  00FEAD  50                 	db	80	;'P'
   821  00FEAE  5F                 	db	95	;'_'
   822  00FEAF  50                 	db	80	;'P'
   823  00FEB0  45                 	db	69	;'E'
   824  00FEB1  52                 	db	82	;'R'
   825  00FEB2  49                 	db	73	;'I'
   826  00FEB3  4F                 	db	79	;'O'
   827  00FEB4  44                 	db	68	;'D'
   828  00FEB5  20                 	db	32
   829  00FEB6  3D                 	db	61	;'='
   830  00FEB7  20                 	db	32
   831  00FEB8  30                 	db	48	;'0'
   832  00FEB9  78                 	db	120	;'x'
   833  00FEBA  00                 	db	0
   834  00FEBB  52                 	db	82	;'R'
   835  00FEBC  45                 	db	69	;'E'
   836  00FEBD  47                 	db	71	;'G'
   837  00FEBE  5F                 	db	95	;'_'
   838  00FEBF  53                 	db	83	;'S'
   839  00FEC0  59                 	db	89	;'Y'
   840  00FEC1  4E                 	db	78	;'N'
   841  00FEC2  43                 	db	67	;'C'
   842  00FEC3  5F                 	db	95	;'_'
   843  00FEC4  57                 	db	87	;'W'
   844  00FEC5  4F                 	db	79	;'O'
   845  00FEC6  52                 	db	82	;'R'
   846  00FEC7  44                 	db	68	;'D'
   847  00FEC8  20                 	db	32
   848  00FEC9  3D                 	db	61	;'='
   849  00FECA  20                 	db	32
   850  00FECB  30                 	db	48	;'0'
   851  00FECC  78                 	db	120	;'x'
   852  00FECD  00                 	db	0
   853  00FECE  52                 	db	82	;'R'
   854  00FECF  45                 	db	69	;'E'
   855  00FED0  47                 	db	71	;'G'
   856  00FED1  5F                 	db	95	;'_'
   857  00FED2  50                 	db	80	;'P'
   858  00FED3  41                 	db	65	;'A'
   859  00FED4  5F                 	db	95	;'_'
   860  00FED5  43                 	db	67	;'C'
   861  00FED6  4F                 	db	79	;'O'
   862  00FED7  4E                 	db	78	;'N'
   863  00FED8  46                 	db	70	;'F'
   864  00FED9  49                 	db	73	;'I'
   865  00FEDA  47                 	db	71	;'G'
   866  00FEDB  20                 	db	32
   867  00FEDC  3D                 	db	61	;'='
   868  00FEDD  20                 	db	32
   869  00FEDE  30                 	db	48	;'0'
   870  00FEDF  78                 	db	120	;'x'
   871  00FEE0  00                 	db	0
   872  00FEE1  52                 	db	82	;'R'
   873  00FEE2  45                 	db	69	;'E'
   874  00FEE3  47                 	db	71	;'G'
   875  00FEE4  5F                 	db	95	;'_'
   876  00FEE5  49                 	db	73	;'I'
   877  00FEE6  4E                 	db	78	;'N'
   878  00FEE7  56                 	db	86	;'V'
   879  00FEE8  45                 	db	69	;'E'
   880  00FEE9  52                 	db	82	;'R'
   881  00FEEA  54                 	db	84	;'T'
   882  00FEEB  5F                 	db	95	;'_'
   883  00FEEC  49                 	db	73	;'I'
   884  00FEED  51                 	db	81	;'Q'
   885  00FEEE  20                 	db	32
   886  00FEEF  3D                 	db	61	;'='
   887  00FEF0  20                 	db	32
   888  00FEF1  30                 	db	48	;'0'
   889  00FEF2  78                 	db	120	;'x'
   890  00FEF3  00                 	db	0
   891  00FEF4                     STR_2:
   892  00FEF4  69                 	db	105	;'i'
   893  00FEF5  6E                 	db	110	;'n'
   894  00FEF6  69                 	db	105	;'i'
   895  00FEF7  74                 	db	116	;'t'
   896  00FEF8  69                 	db	105	;'i'
   897  00FEF9  61                 	db	97	;'a'
   898  00FEFA  6C                 	db	108	;'l'
   899  00FEFB  69                 	db	105	;'i'
   900  00FEFC  7A                 	db	122	;'z'
   901  00FEFD  65                 	db	101	;'e'
   902  00FEFE  20                 	db	32
   903  00FEFF  6D                 	db	109	;'m'
   904  00FF00  6F                 	db	111	;'o'
   905  00FF01  64                 	db	100	;'d'
   906  00FF02  75                 	db	117	;'u'
   907  00FF03  6C                 	db	108	;'l'
   908  00FF04  65                 	db	101	;'e'
   909  00FF05  20                 	db	32
   910  00FF06  00                 	db	0
   911  00FF07                     STR_7:
   912  00FF07  52                 	db	82	;'R'
   913  00FF08  45                 	db	69	;'E'
   914  00FF09  47                 	db	71	;'G'
   915  00FF0A  5F                 	db	95	;'_'
   916  00FF0B  49                 	db	73	;'I'
   917  00FF0C  52                 	db	82	;'R'
   918  00FF0D  51                 	db	81	;'Q'
   919  00FF0E  5F                 	db	95	;'_'
   920  00FF0F  46                 	db	70	;'F'
   921  00FF10  4C                 	db	76	;'L'
   922  00FF11  41                 	db	65	;'A'
   923  00FF12  47                 	db	71	;'G'
   924  00FF13  53                 	db	83	;'S'
   925  00FF14  20                 	db	32
   926  00FF15  3D                 	db	61	;'='
   927  00FF16  20                 	db	32
   928  00FF17  30                 	db	48	;'0'
   929  00FF18  78                 	db	120	;'x'
   930  00FF19  00                 	db	0
   931  00FF1A                     STR_12:
   932  00FF1A  70                 	db	112	;'p'
   933  00FF1B  61                 	db	97	;'a'
   934  00FF1C  79                 	db	121	;'y'
   935  00FF1D  6C                 	db	108	;'l'
   936  00FF1E  6F                 	db	111	;'o'
   937  00FF1F  61                 	db	97	;'a'
   938  00FF20  64                 	db	100	;'d'
   939  00FF21  20                 	db	32
   940  00FF22  43                 	db	67	;'C'
   941  00FF23  52                 	db	82	;'R'
   942  00FF24  43                 	db	67	;'C'
   943  00FF25  20                 	db	32
   944  00FF26  65                 	db	101	;'e'
   945  00FF27  72                 	db	114	;'r'
   946  00FF28  72                 	db	114	;'r'
   947  00FF29  6F                 	db	111	;'o'
   948  00FF2A  72                 	db	114	;'r'
   949  00FF2B  00                 	db	0
   950  00FF2C                     STR_60:
   951  00FF2C  30                 	db	48	;'0'
   952  00FF2D  31                 	db	49	;'1'
   953  00FF2E  32                 	db	50	;'2'
   954  00FF2F  33                 	db	51	;'3'
   955  00FF30  34                 	db	52	;'4'
   956  00FF31  35                 	db	53	;'5'
   957  00FF32  36                 	db	54	;'6'
   958  00FF33  37                 	db	55	;'7'
   959  00FF34  38                 	db	56	;'8'
   960  00FF35  39                 	db	57	;'9'
   961  00FF36  41                 	db	65	;'A'
   962  00FF37  42                 	db	66	;'B'
   963  00FF38  43                 	db	67	;'C'
   964  00FF39  44                 	db	68	;'D'
   965  00FF3A  45                 	db	69	;'E'
   966  00FF3B  46                 	db	70	;'F'
   967  00FF3C  00                 	db	0
   968  00FF3D  52                 	db	82	;'R'
   969  00FF3E  45                 	db	69	;'E'
   970  00FF3F  47                 	db	71	;'G'
   971  00FF40  5F                 	db	95	;'_'
   972  00FF41  46                 	db	70	;'F'
   973  00FF42  52                 	db	82	;'R'
   974  00FF43  46                 	db	70	;'F'
   975  00FF44  5F                 	db	95	;'_'
   976  00FF45  4C                 	db	76	;'L'
   977  00FF46  53                 	db	83	;'S'
   978  00FF47  42                 	db	66	;'B'
   979  00FF48  20                 	db	32
   980  00FF49  3D                 	db	61	;'='
   981  00FF4A  20                 	db	32
   982  00FF4B  30                 	db	48	;'0'
   983  00FF4C  78                 	db	120	;'x'
   984  00FF4D  00                 	db	0
   985  00FF4E  52                 	db	82	;'R'
   986  00FF4F  45                 	db	69	;'E'
   987  00FF50  47                 	db	71	;'G'
   988  00FF51  5F                 	db	95	;'_'
   989  00FF52  46                 	db	70	;'F'
   990  00FF53  52                 	db	82	;'R'
   991  00FF54  46                 	db	70	;'F'
   992  00FF55  5F                 	db	95	;'_'
   993  00FF56  4D                 	db	77	;'M'
   994  00FF57  53                 	db	83	;'S'
   995  00FF58  42                 	db	66	;'B'
   996  00FF59  20                 	db	32
   997  00FF5A  3D                 	db	61	;'='
   998  00FF5B  20                 	db	32
   999  00FF5C  30                 	db	48	;'0'
  1000  00FF5D  78                 	db	120	;'x'
  1001  00FF5E  00                 	db	0
  1002  00FF5F  52                 	db	82	;'R'
  1003  00FF60  45                 	db	69	;'E'
  1004  00FF61  47                 	db	71	;'G'
  1005  00FF62  5F                 	db	95	;'_'
  1006  00FF63  46                 	db	70	;'F'
  1007  00FF64  52                 	db	82	;'R'
  1008  00FF65  46                 	db	70	;'F'
  1009  00FF66  5F                 	db	95	;'_'
  1010  00FF67  4D                 	db	77	;'M'
  1011  00FF68  49                 	db	73	;'I'
  1012  00FF69  44                 	db	68	;'D'
  1013  00FF6A  20                 	db	32
  1014  00FF6B  3D                 	db	61	;'='
  1015  00FF6C  20                 	db	32
  1016  00FF6D  30                 	db	48	;'0'
  1017  00FF6E  78                 	db	120	;'x'
  1018  00FF6F  00                 	db	0
  1019  00FF70                     STR_23:
  1020  00FF70  52                 	db	82	;'R'
  1021  00FF71  45                 	db	69	;'E'
  1022  00FF72  47                 	db	71	;'G'
  1023  00FF73  5F                 	db	95	;'_'
  1024  00FF74  4F                 	db	79	;'O'
  1025  00FF75  50                 	db	80	;'P'
  1026  00FF76  5F                 	db	95	;'_'
  1027  00FF77  4D                 	db	77	;'M'
  1028  00FF78  4F                 	db	79	;'O'
  1029  00FF79  44                 	db	68	;'D'
  1030  00FF7A  45                 	db	69	;'E'
  1031  00FF7B  20                 	db	32
  1032  00FF7C  3D                 	db	61	;'='
  1033  00FF7D  20                 	db	32
  1034  00FF7E  30                 	db	48	;'0'
  1035  00FF7F  78                 	db	120	;'x'
  1036  00FF80  00                 	db	0
  1037  00FF81  52                 	db	82	;'R'
  1038  00FF82  45                 	db	69	;'E'
  1039  00FF83  47                 	db	71	;'G'
  1040  00FF84  5F                 	db	95	;'_'
  1041  00FF85  50                 	db	80	;'P'
  1042  00FF86  41                 	db	65	;'A'
  1043  00FF87  5F                 	db	95	;'_'
  1044  00FF88  52                 	db	82	;'R'
  1045  00FF89  41                 	db	65	;'A'
  1046  00FF8A  4D                 	db	77	;'M'
  1047  00FF8B  50                 	db	80	;'P'
  1048  00FF8C  20                 	db	32
  1049  00FF8D  3D                 	db	61	;'='
  1050  00FF8E  20                 	db	32
  1051  00FF8F  30                 	db	48	;'0'
  1052  00FF90  78                 	db	120	;'x'
  1053  00FF91  00                 	db	0
  1054  00FF92                     STR_14:
  1055  00FF92  72                 	db	114	;'r'
  1056  00FF93  65                 	db	101	;'e'
  1057  00FF94  63                 	db	99	;'c'
  1058  00FF95  65                 	db	101	;'e'
  1059  00FF96  69                 	db	105	;'i'
  1060  00FF97  76                 	db	118	;'v'
  1061  00FF98  65                 	db	101	;'e'
  1062  00FF99  64                 	db	100	;'d'
  1063  00FF9A  20                 	db	32
  1064  00FF9B  64                 	db	100	;'d'
  1065  00FF9C  61                 	db	97	;'a'
  1066  00FF9D  74                 	db	116	;'t'
  1067  00FF9E  61                 	db	97	;'a'
  1068  00FF9F  3A                 	db	58	;':'
  1069  00FFA0  00                 	db	0
  1070  00FFA1                     STR_28:
  1071  00FFA1  73                 	db	115	;'s'
  1072  00FFA2  74                 	db	116	;'t'
  1073  00FFA3  61                 	db	97	;'a'
  1074  00FFA4  6E                 	db	110	;'n'
  1075  00FFA5  64                 	db	100	;'d'
  1076  00FFA6  62                 	db	98	;'b'
  1077  00FFA7  79                 	db	121	;'y'
  1078  00FFA8  20                 	db	32
  1079  00FFA9  6D                 	db	109	;'m'
  1080  00FFAA  6F                 	db	111	;'o'
  1081  00FFAB  64                 	db	100	;'d'
  1082  00FFAC  65                 	db	101	;'e'
  1083  00FFAD  00                 	db	0
  1084  00FFAE  52                 	db	82	;'R'
  1085  00FFAF  45                 	db	69	;'E'
  1086  00FFB0  47                 	db	71	;'G'
  1087  00FFB1  5F                 	db	95	;'_'
  1088  00FFB2  4C                 	db	76	;'L'
  1089  00FFB3  4E                 	db	78	;'N'
  1090  00FFB4  41                 	db	65	;'A'
  1091  00FFB5  20                 	db	32
  1092  00FFB6  3D                 	db	61	;'='
  1093  00FFB7  20                 	db	32
  1094  00FFB8  30                 	db	48	;'0'
  1095  00FFB9  78                 	db	120	;'x'
  1096  00FFBA  00                 	db	0
  1097  00FFBB  52                 	db	82	;'R'
  1098  00FFBC  45                 	db	69	;'E'
  1099  00FFBD  47                 	db	71	;'G'
  1100  00FFBE  5F                 	db	95	;'_'
  1101  00FFBF  4F                 	db	79	;'O'
  1102  00FFC0  43                 	db	67	;'C'
  1103  00FFC1  50                 	db	80	;'P'
  1104  00FFC2  20                 	db	32
  1105  00FFC3  3D                 	db	61	;'='
  1106  00FFC4  20                 	db	32
  1107  00FFC5  30                 	db	48	;'0'
  1108  00FFC6  78                 	db	120	;'x'
  1109  00FFC7  00                 	db	0
  1110  00FFC8                     STR_24:
  1111  00FFC8  6D                 	db	109	;'m'
  1112  00FFC9  6F                 	db	111	;'o'
  1113  00FFCA  64                 	db	100	;'d'
  1114  00FFCB  65                 	db	101	;'e'
  1115  00FFCC  20                 	db	32
  1116  00FFCD  3D                 	db	61	;'='
  1117  00FFCE  20                 	db	32
  1118  00FFCF  4C                 	db	76	;'L'
  1119  00FFD0  6F                 	db	111	;'o'
  1120  00FFD1  52                 	db	82	;'R'
  1121  00FFD2  61                 	db	97	;'a'
  1122  00FFD3  00                 	db	0
  1123  00FFD4                     STR_21:
  1124  00FFD4  63                 	db	99	;'c'
  1125  00FFD5  6C                 	db	108	;'l'
  1126  00FFD6  65                 	db	101	;'e'
  1127  00FFD7  61                 	db	97	;'a'
  1128  00FFD8  72                 	db	114	;'r'
  1129  00FFD9  20                 	db	32
  1130  00FFDA  66                 	db	102	;'f'
  1131  00FFDB  6C                 	db	108	;'l'
  1132  00FFDC  61                 	db	97	;'a'
  1133  00FFDD  67                 	db	103	;'g'
  1134  00FFDE  73                 	db	115	;'s'
  1135  00FFDF  00                 	db	0
  1136  00FFE0                     STR_26:
  1137  00FFE0  6D                 	db	109	;'m'
  1138  00FFE1  6F                 	db	111	;'o'
  1139  00FFE2  64                 	db	100	;'d'
  1140  00FFE3  65                 	db	101	;'e'
  1141  00FFE4  20                 	db	32
  1142  00FFE5  3D                 	db	61	;'='
  1143  00FFE6  20                 	db	32
  1144  00FFE7  46                 	db	70	;'F'
  1145  00FFE8  53                 	db	83	;'S'
  1146  00FFE9  4B                 	db	75	;'K'
  1147  00FFEA  00                 	db	0
  1148  00FFEB                     STR_27:
  1149  00FFEB  73                 	db	115	;'s'
  1150  00FFEC  6C                 	db	108	;'l'
  1151  00FFED  65                 	db	101	;'e'
  1152  00FFEE  65                 	db	101	;'e'
  1153  00FFEF  70                 	db	112	;'p'
  1154  00FFF0  20                 	db	32
  1155  00FFF1  6D                 	db	109	;'m'
  1156  00FFF2  6F                 	db	111	;'o'
  1157  00FFF3  64                 	db	100	;'d'
  1158  00FFF4  65                 	db	101	;'e'
  1159  00FFF5  00                 	db	0
  1160  00FFF6                     STR_30:
  1161  00FFF6  54                 	db	84	;'T'
  1162  00FFF7  58                 	db	88	;'X'
  1163  00FFF8  20                 	db	32
  1164  00FFF9  6D                 	db	109	;'m'
  1165  00FFFA  6F                 	db	111	;'o'
  1166  00FFFB  64                 	db	100	;'d'
  1167  00FFFC  65                 	db	101	;'e'
  1168  00FFFD  00                 	db	0
  1169  0000                     
  1170                           ; #config settings
  1171  00FFFE  00                 	db	0	; dummy byte at the end
  1172  0000                     
  1173                           	psect	cinit
  1174  00F402                     __pcinit:
  1175                           	opt stack 0
  1176  00F402                     start_initialization:
  1177                           	opt stack 0
  1178  00F402                     __initialization:
  1179                           	opt stack 0
  1180  00F402                     end_of_initialization:
  1181                           	opt stack 0
  1182  00F402                     __end_of__initialization:
  1183                           	opt stack 0
  1184  00F402  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1185  00F404  6EF8               	movwf	tblptru,c
  1186  00F406  0100               	movlb	0
  1187  00F408  EFD5  F07C         	goto	_main	;jump to C main() function
  1188                           tblptru	equ	0xFF8
  1189                           
  1190                           	psect	cstackCOMRAM
  1191  000001                     __pcstackCOMRAM:
  1192                           	opt stack 0
  1193  000001                     ??_ResetRFModule:
  1194  000001                     ??_AntennaRX:
  1195  000001                     ?___awmod:
  1196                           	opt stack 0
  1197  000001                     SPITransfer@dummy_byte:
  1198                           	opt stack 0
  1199  000001                     SPIReceive@dummy_byte:
  1200                           	opt stack 0
  1201  000001                     UARTWriteByte@data:
  1202                           	opt stack 0
  1203  000001                     UARTInit@baudRate:
  1204                           	opt stack 0
  1205  000001                     ___awmod@dividend:
  1206                           	opt stack 0
  1207                           
  1208                           ; 2 bytes @ 0x0
  1209  000001                     	ds	1
  1210  000002                     SPITransfer@data_out:
  1211                           	opt stack 0
  1212  000002                     SPIReceive@data_out:
  1213                           	opt stack 0
  1214  000002                     UARTWriteStr@string:
  1215                           	opt stack 0
  1216  000002                     UARTWriteStrLn@string:
  1217                           	opt stack 0
  1218                           
  1219                           ; 2 bytes @ 0x1
  1220  000002                     	ds	1
  1221  000003                     SPIReceive@data_in:
  1222                           	opt stack 0
  1223  000003                     ___awmod@divisor:
  1224                           	opt stack 0
  1225                           
  1226                           ; 2 bytes @ 0x2
  1227  000003                     	ds	1
  1228  000004                     ??_UARTWriteStrLn:
  1229  000004                     ??_UARTWriteStr:
  1230  000004                     ReadSXRegister@RegValue:
  1231                           	opt stack 0
  1232                           
  1233                           ; 1 bytes @ 0x3
  1234  000004                     	ds	1
  1235  000005                     ReadSXRegister@address:
  1236                           	opt stack 0
  1237  000005                     ___awmod@counter:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x4
  1241  000005                     	ds	1
  1242  000006                     WriteSXRegister@data:
  1243                           	opt stack 0
  1244  000006                     UARTWriteStr@i:
  1245                           	opt stack 0
  1246  000006                     UARTWriteStrLn@i:
  1247                           	opt stack 0
  1248  000006                     ___awmod@sign:
  1249                           	opt stack 0
  1250                           
  1251                           ; 1 bytes @ 0x5
  1252  000006                     	ds	1
  1253  000007                     ?___awdiv:
  1254                           	opt stack 0
  1255  000007                     WriteSXRegister@address:
  1256                           	opt stack 0
  1257  000007                     ___awdiv@dividend:
  1258                           	opt stack 0
  1259                           
  1260                           ; 2 bytes @ 0x6
  1261  000007                     	ds	1
  1262  000008                     
  1263                           ; 1 bytes @ 0x7
  1264  000008                     	ds	1
  1265  000009                     ___awdiv@divisor:
  1266                           	opt stack 0
  1267                           
  1268                           ; 2 bytes @ 0x8
  1269  000009                     	ds	2
  1270  00000B                     ___awdiv@counter:
  1271                           	opt stack 0
  1272                           
  1273                           ; 1 bytes @ 0xA
  1274  00000B                     	ds	1
  1275  00000C                     ___awdiv@sign:
  1276                           	opt stack 0
  1277                           
  1278                           ; 1 bytes @ 0xB
  1279  00000C                     	ds	1
  1280  00000D                     ___awdiv@quotient:
  1281                           	opt stack 0
  1282                           
  1283                           ; 2 bytes @ 0xC
  1284  00000D                     	ds	2
  1285  00000F                     ??_UARTWriteByteHex:
  1286  00000F                     UARTWriteByteDec@data:
  1287                           	opt stack 0
  1288                           
  1289                           ; 1 bytes @ 0xE
  1290  00000F                     	ds	3
  1291  000012                     UARTWriteByteHex@hexa:
  1292                           	opt stack 0
  1293                           
  1294                           ; 2 bytes @ 0x11
  1295  000012                     	ds	2
  1296  000014                     UARTWriteByteHex@data:
  1297                           	opt stack 0
  1298                           
  1299                           ; 1 bytes @ 0x13
  1300  000014                     	ds	1
  1301  000015                     ??_GetMode:
  1302                           
  1303                           ; 1 bytes @ 0x14
  1304  000015                     	ds	2
  1305  000017                     GetMode@masked_reg:
  1306                           	opt stack 0
  1307                           
  1308                           ; 1 bytes @ 0x16
  1309  000017                     	ds	1
  1310  000018                     GetMode@reg:
  1311                           	opt stack 0
  1312                           
  1313                           ; 1 bytes @ 0x17
  1314  000018                     	ds	1
  1315  000019                     
  1316                           ; 2 bytes @ 0x18
  1317  000019                     	ds	2
  1318  00001B                     
  1319                           ; 3 bytes @ 0x1A
  1320  00001B                     	ds	3
  1321  00001E                     ??_main:
  1322                           
  1323                           ; 1 bytes @ 0x1D
  1324  00001E                     	ds	1
  1325  00001F                     main@RXNumberOfBytes:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0x1E
  1329  00001F                     	ds	1
  1330  000020                     main@i:
  1331                           	opt stack 0
  1332                           
  1333                           ; 1 bytes @ 0x1F
  1334  000020                     	ds	1
  1335  000021                     main@reg_val:
  1336                           	opt stack 0
  1337                           
  1338                           ; 1 bytes @ 0x20
  1339  000021                     	ds	1
  1340                           tblptru	equ	0xFF8
  1341                           
  1342 ;;
  1343 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1344 ;;
  1345 ;; *************** function _main *****************
  1346 ;; Defined at:
  1347 ;;		line 87 in file "RXcontinuous_LoRa.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  argc            2   24[COMRAM] int 
  1350 ;;  argv            3   26[COMRAM] PTR PTR unsigned char 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  reg_val         1   32[COMRAM] unsigned char 
  1353 ;;  i               1   31[COMRAM] unsigned char 
  1354 ;;  RXNumberOfBy    1   30[COMRAM] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  2   24[COMRAM] int 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1364 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;Total ram usage:        9 bytes
  1369 ;; Hardware stack levels required when called:    3
  1370 ;; This function calls:
  1371 ;;		_AntennaRX
  1372 ;;		_GetMode
  1373 ;;		_InitModule
  1374 ;;		_InitRFLoRaPins
  1375 ;;		_ReadSXRegister
  1376 ;;		_ResetRFModule
  1377 ;;		_SPIInit
  1378 ;;		_UARTInit
  1379 ;;		_UARTWriteByte
  1380 ;;		_UARTWriteByteDec
  1381 ;;		_UARTWriteByteHex
  1382 ;;		_UARTWriteStr
  1383 ;;		_UARTWriteStrLn
  1384 ;;		_WriteSXRegister
  1385 ;; This function is called by:
  1386 ;;		Startup code after reset
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text0
  1391  00F9AA                     __ptext0:
  1392                           	opt stack 0
  1393  00F9AA                     _main:
  1394                           	opt stack 28
  1395                           
  1396                           ;RXcontinuous_LoRa.c: 89:         };RXcontinuous_LoRa.c: 90:         UARTWriteStrLn(" ")
      +                          ;;RXcontinuous_LoRa.c: 91:         UARTWriteStrLn(" ");;RXcontinuous_LoRa.c: 94:        
      +                           reg_val = ReadSXRegister(0x10);
  1397                           
  1398                           ;incstack = 0
  1399  00F9AA  0E4B               	movlw	75
  1400  00F9AC  6E02               	movwf	UARTInit@baudRate+1,c
  1401  00F9AE  0E00               	movlw	0
  1402  00F9B0  6E01               	movwf	UARTInit@baudRate,c
  1403  00F9B2  EC73  F07A         	call	_UARTInit	;wreg free
  1404                           
  1405                           ;RXcontinuous_LoRa.c: 95:         UARTWriteStr("REG_FIFO_RX_CURRENT_ADDR = 0x");
  1406  00F9B6  EC0C  F07A         	call	_InitRFLoRaPins	;wreg free
  1407                           
  1408                           ;RXcontinuous_LoRa.c: 96:         UARTWriteByteHex(reg_val);
  1409  00F9BA  EC50  F07A         	call	_SPIInit	;wreg free
  1410                           
  1411                           ;RXcontinuous_LoRa.c: 97:         reg_val = ReadSXRegister(0x13);
  1412  00F9BE  EC5F  F07A         	call	_ResetRFModule	;wreg free
  1413                           
  1414                           ;RXcontinuous_LoRa.c: 101: 
  1415  00F9C2  0E94               	movlw	low STR_1
  1416  00F9C4  6E02               	movwf	UARTWriteStrLn@string,c
  1417  00F9C6  0EFD               	movlw	high STR_1
  1418  00F9C8  6E03               	movwf	UARTWriteStrLn@string+1,c
  1419  00F9CA  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1420                           
  1421                           ;RXcontinuous_LoRa.c: 103:         UARTWriteStr("REG_PKT_RSSI_VALUE (decimal) = ");
  1422  00F9CE  0E00               	movlw	0
  1423  00F9D0  6E06               	movwf	WriteSXRegister@data,c
  1424  00F9D2  0E01               	movlw	1
  1425  00F9D4  EC34  F07A         	call	_WriteSXRegister
  1426                           
  1427                           ;RXcontinuous_LoRa.c: 104:         UARTWriteByteDec(reg_val);
  1428  00F9D8  0E80               	movlw	128
  1429  00F9DA  6E06               	movwf	WriteSXRegister@data,c
  1430  00F9DC  0E01               	movlw	1
  1431  00F9DE  EC34  F07A         	call	_WriteSXRegister
  1432                           
  1433                           ;RXcontinuous_LoRa.c: 105: 
  1434  00F9E2  0E81               	movlw	129
  1435  00F9E4  6E06               	movwf	WriteSXRegister@data,c
  1436  00F9E6  0E01               	movlw	1
  1437  00F9E8  EC34  F07A         	call	_WriteSXRegister
  1438                           
  1439                           ;RXcontinuous_LoRa.c: 106: 
  1440  00F9EC  0E21               	movlw	33
  1441  00F9EE  6E1E               	movwf	??_main& (0+255),c
  1442  00F9F0  0E76               	movlw	118
  1443  00F9F2                     u447:
  1444  00F9F2  2EE8               	decfsz	wreg,f,c
  1445  00F9F4  D7FE               	bra	u447
  1446  00F9F6  2E1E               	decfsz	??_main& (0+255),f,c
  1447  00F9F8  D7FC               	bra	u447
  1448  00F9FA  D000               	nop2	
  1449                           
  1450                           ;RXcontinuous_LoRa.c: 107:         UARTWriteStrLn(" ");
  1451  00F9FC  EC4B  F07C         	call	_GetMode	;wreg free
  1452                           
  1453                           ;RXcontinuous_LoRa.c: 110: 
  1454  00FA00  0EF4               	movlw	low STR_2
  1455  00FA02  6E02               	movwf	UARTWriteStrLn@string,c
  1456  00FA04  0EFE               	movlw	high STR_2
  1457  00FA06  6E03               	movwf	UARTWriteStrLn@string+1,c
  1458  00FA08  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1459                           
  1460                           ;RXcontinuous_LoRa.c: 111: 
  1461  00FA0C  ECD2  F07B         	call	_InitModule	;wreg free
  1462                           
  1463                           ;RXcontinuous_LoRa.c: 113:         WriteSXRegister(0x12, 0xFF);
  1464  00FA10  EC1D  F07A         	call	_AntennaRX	;wreg free
  1465                           
  1466                           ;RXcontinuous_LoRa.c: 119: 
  1467  00FA14  0E0F               	movlw	15
  1468  00FA16  EC41  F07A         	call	_ReadSXRegister
  1469  00FA1A  6E06               	movwf	WriteSXRegister@data,c
  1470  00FA1C  0E0D               	movlw	13
  1471  00FA1E  EC34  F07A         	call	_WriteSXRegister
  1472                           
  1473                           ;RXcontinuous_LoRa.c: 122:     }
  1474  00FA22  0E48               	movlw	low (STR_19+30)
  1475  00FA24  6E02               	movwf	UARTWriteStrLn@string,c
  1476  00FA26  0EFC               	movlw	high (STR_19+30)
  1477  00FA28  6E03               	movwf	UARTWriteStrLn@string+1,c
  1478  00FA2A  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1479                           
  1480                           ;RXcontinuous_LoRa.c: 123: 
  1481  00FA2E  0E4A               	movlw	low STR_4
  1482  00FA30  6E02               	movwf	UARTWriteStrLn@string,c
  1483  00FA32  0EFC               	movlw	high STR_4
  1484  00FA34  6E03               	movwf	UARTWriteStrLn@string+1,c
  1485  00FA36  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1486                           
  1487                           ;RXcontinuous_LoRa.c: 124: }
  1488  00FA3A  0E85               	movlw	133
  1489  00FA3C  6E06               	movwf	WriteSXRegister@data,c
  1490  00FA3E  0E01               	movlw	1
  1491  00FA40  EC34  F07A         	call	_WriteSXRegister
  1492  00FA44  0E21               	movlw	33
  1493  00FA46  6E1E               	movwf	??_main& (0+255),c
  1494  00FA48  0E76               	movlw	118
  1495  00FA4A                     u457:
  1496  00FA4A  2EE8               	decfsz	wreg,f,c
  1497  00FA4C  D7FE               	bra	u457
  1498  00FA4E  2E1E               	decfsz	??_main& (0+255),f,c
  1499  00FA50  D7FC               	bra	u457
  1500  00FA52  D000               	nop2	
  1501  00FA54  EC4B  F07C         	call	_GetMode	;wreg free
  1502  00FA58  0E12               	movlw	18
  1503  00FA5A  EC41  F07A         	call	_ReadSXRegister
  1504  00FA5E  D003               	goto	L1
  1505  00FA60  0E12               	movlw	18
  1506  00FA62  EC41  F07A         	call	_ReadSXRegister
  1507  00FA66                     L1:
  1508  00FA66  6E21               	movwf	main@reg_val,c
  1509  00FA68  A821               	btfss	main@reg_val,4,c
  1510  00FA6A  D7FA               	goto	l37
  1511  00FA6C  0E48               	movlw	low (STR_19+30)
  1512  00FA6E  6E02               	movwf	UARTWriteStrLn@string,c
  1513  00FA70  0EFC               	movlw	high (STR_19+30)
  1514  00FA72  6E03               	movwf	UARTWriteStrLn@string+1,c
  1515  00FA74  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1516  00FA78  0E68               	movlw	low STR_6
  1517  00FA7A  6E02               	movwf	UARTWriteStrLn@string,c
  1518  00FA7C  0EFE               	movlw	high STR_6
  1519  00FA7E  6E03               	movwf	UARTWriteStrLn@string+1,c
  1520  00FA80  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1521  00FA84  0E12               	movlw	18
  1522  00FA86  EC41  F07A         	call	_ReadSXRegister
  1523  00FA8A  6E21               	movwf	main@reg_val,c
  1524  00FA8C  0E07               	movlw	low STR_7
  1525  00FA8E  6E02               	movwf	UARTWriteStr@string,c
  1526  00FA90  0EFF               	movlw	high STR_7
  1527  00FA92  6E03               	movwf	UARTWriteStr@string+1,c
  1528  00FA94  EC8E  F07A         	call	_UARTWriteStr	;wreg free
  1529  00FA98  5021               	movf	main@reg_val,w,c
  1530  00FA9A  ECE8  F07A         	call	_UARTWriteByteHex
  1531  00FA9E  0E12               	movlw	18
  1532  00FAA0  EC41  F07A         	call	_ReadSXRegister
  1533  00FAA4  D003               	goto	L2
  1534  00FAA6  0E12               	movlw	18
  1535  00FAA8  EC41  F07A         	call	_ReadSXRegister
  1536  00FAAC                     L2:
  1537  00FAAC  6E21               	movwf	main@reg_val,c
  1538  00FAAE  AC21               	btfss	main@reg_val,6,c
  1539  00FAB0  D7FA               	goto	l40
  1540  00FAB2  0E48               	movlw	low (STR_19+30)
  1541  00FAB4  6E02               	movwf	UARTWriteStrLn@string,c
  1542  00FAB6  0EFC               	movlw	high (STR_19+30)
  1543  00FAB8  6E03               	movwf	UARTWriteStrLn@string+1,c
  1544  00FABA  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1545  00FABE  0E61               	movlw	low STR_9
  1546  00FAC0  6E02               	movwf	UARTWriteStrLn@string,c
  1547  00FAC2  0EFD               	movlw	high STR_9
  1548  00FAC4  6E03               	movwf	UARTWriteStrLn@string+1,c
  1549  00FAC6  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1550  00FACA  0E12               	movlw	18
  1551  00FACC  EC41  F07A         	call	_ReadSXRegister
  1552  00FAD0  6E21               	movwf	main@reg_val,c
  1553  00FAD2  0E07               	movlw	low STR_7
  1554  00FAD4  6E02               	movwf	UARTWriteStr@string,c
  1555  00FAD6  0EFF               	movlw	high STR_7
  1556  00FAD8  6E03               	movwf	UARTWriteStr@string+1,c
  1557  00FADA  EC8E  F07A         	call	_UARTWriteStr	;wreg free
  1558  00FADE  5021               	movf	main@reg_val,w,c
  1559  00FAE0  ECE8  F07A         	call	_UARTWriteByteHex
  1560  00FAE4  AA21               	btfss	main@reg_val,5,c
  1561  00FAE6  D00C               	goto	l42
  1562  00FAE8  0E48               	movlw	low (STR_19+30)
  1563  00FAEA  6E02               	movwf	UARTWriteStrLn@string,c
  1564  00FAEC  0EFC               	movlw	high (STR_19+30)
  1565  00FAEE  6E03               	movwf	UARTWriteStrLn@string+1,c
  1566  00FAF0  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1567  00FAF4  0E1A               	movlw	low STR_12
  1568  00FAF6  6E02               	movwf	UARTWriteStrLn@string,c
  1569  00FAF8  0EFF               	movlw	high STR_12
  1570  00FAFA  6E03               	movwf	UARTWriteStrLn@string+1,c
  1571  00FAFC  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1572  00FB00                     l42:
  1573  00FB00  0E48               	movlw	low (STR_19+30)
  1574  00FB02  6E02               	movwf	UARTWriteStrLn@string,c
  1575  00FB04  0EFC               	movlw	high (STR_19+30)
  1576  00FB06  6E03               	movwf	UARTWriteStrLn@string+1,c
  1577  00FB08  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1578  00FB0C  0E92               	movlw	low STR_14
  1579  00FB0E  6E02               	movwf	UARTWriteStrLn@string,c
  1580  00FB10  0EFF               	movlw	high STR_14
  1581  00FB12  6E03               	movwf	UARTWriteStrLn@string+1,c
  1582  00FB14  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1583  00FB18  0E13               	movlw	19
  1584  00FB1A  EC41  F07A         	call	_ReadSXRegister
  1585  00FB1E  6E1F               	movwf	main@RXNumberOfBytes,c
  1586  00FB20  0E10               	movlw	16
  1587  00FB22  EC41  F07A         	call	_ReadSXRegister
  1588  00FB26  6E06               	movwf	WriteSXRegister@data,c
  1589  00FB28  0E0D               	movlw	13
  1590  00FB2A  EC34  F07A         	call	_WriteSXRegister
  1591  00FB2E  0E00               	movlw	0
  1592  00FB30  6E20               	movwf	main@i,c
  1593  00FB32  D008               	goto	l43
  1594  00FB34  0E00               	movlw	0
  1595  00FB36  EC41  F07A         	call	_ReadSXRegister
  1596  00FB3A  6E21               	movwf	main@reg_val,c
  1597  00FB3C  5021               	movf	main@reg_val,w,c
  1598  00FB3E  EC06  F07A         	call	_UARTWriteByte
  1599  00FB42  2A20               	incf	main@i,f,c
  1600  00FB44                     l43:
  1601  00FB44  501F               	movf	main@RXNumberOfBytes,w,c
  1602  00FB46  5C20               	subwf	main@i,w,c
  1603  00FB48  A0D8               	btfss	status,0,c
  1604  00FB4A  D7F4               	goto	l44
  1605  00FB4C  0E48               	movlw	low (STR_19+30)
  1606  00FB4E  6E02               	movwf	UARTWriteStrLn@string,c
  1607  00FB50  0EFC               	movlw	high (STR_19+30)
  1608  00FB52  6E03               	movwf	UARTWriteStrLn@string+1,c
  1609  00FB54  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1610  00FB58  0E48               	movlw	low (STR_19+30)
  1611  00FB5A  6E02               	movwf	UARTWriteStrLn@string,c
  1612  00FB5C  0EFC               	movlw	high (STR_19+30)
  1613  00FB5E  6E03               	movwf	UARTWriteStrLn@string+1,c
  1614  00FB60  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1615  00FB64  0E10               	movlw	16
  1616  00FB66  EC41  F07A         	call	_ReadSXRegister
  1617  00FB6A  6E21               	movwf	main@reg_val,c
  1618  00FB6C  0E69               	movlw	low STR_17
  1619  00FB6E  6E02               	movwf	UARTWriteStr@string,c
  1620  00FB70  0EFC               	movlw	high STR_17
  1621  00FB72  6E03               	movwf	UARTWriteStr@string+1,c
  1622  00FB74  EC8E  F07A         	call	_UARTWriteStr	;wreg free
  1623  00FB78  5021               	movf	main@reg_val,w,c
  1624  00FB7A  ECE8  F07A         	call	_UARTWriteByteHex
  1625  00FB7E  0E13               	movlw	19
  1626  00FB80  EC41  F07A         	call	_ReadSXRegister
  1627  00FB84  6E21               	movwf	main@reg_val,c
  1628  00FB86  0E7E               	movlw	low STR_18
  1629  00FB88  6E02               	movwf	UARTWriteStr@string,c
  1630  00FB8A  0EFE               	movlw	high STR_18
  1631  00FB8C  6E03               	movwf	UARTWriteStr@string+1,c
  1632  00FB8E  EC8E  F07A         	call	_UARTWriteStr	;wreg free
  1633  00FB92  5021               	movf	main@reg_val,w,c
  1634  00FB94  ECE8  F07A         	call	_UARTWriteByteHex
  1635  00FB98  0E1A               	movlw	26
  1636  00FB9A  EC41  F07A         	call	_ReadSXRegister
  1637  00FB9E  6E21               	movwf	main@reg_val,c
  1638  00FBA0  0E2A               	movlw	low STR_19
  1639  00FBA2  6E02               	movwf	UARTWriteStr@string,c
  1640  00FBA4  0EFC               	movlw	high STR_19
  1641  00FBA6  6E03               	movwf	UARTWriteStr@string+1,c
  1642  00FBA8  EC8E  F07A         	call	_UARTWriteStr	;wreg free
  1643  00FBAC  5021               	movf	main@reg_val,w,c
  1644  00FBAE  EC57  F07B         	call	_UARTWriteByteDec
  1645  00FBB2  0E48               	movlw	low (STR_19+30)
  1646  00FBB4  6E02               	movwf	UARTWriteStrLn@string,c
  1647  00FBB6  0EFC               	movlw	high (STR_19+30)
  1648  00FBB8  6E03               	movwf	UARTWriteStrLn@string+1,c
  1649  00FBBA  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1650  00FBBE  0ED4               	movlw	low STR_21
  1651  00FBC0  6E02               	movwf	UARTWriteStrLn@string,c
  1652  00FBC2  0EFF               	movlw	high STR_21
  1653  00FBC4  6E03               	movwf	UARTWriteStrLn@string+1,c
  1654  00FBC6  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1655  00FBCA  0EFF               	movlw	255
  1656  00FBCC  6E06               	movwf	WriteSXRegister@data,c
  1657  00FBCE  0E12               	movlw	18
  1658  00FBD0  EC34  F07A         	call	_WriteSXRegister
  1659  00FBD4  0EDD               	movlw	low STR_22
  1660  00FBD6  6E02               	movwf	UARTWriteStrLn@string,c
  1661  00FBD8  0EFD               	movlw	high STR_22
  1662  00FBDA  6E03               	movwf	UARTWriteStrLn@string+1,c
  1663  00FBDC  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  1664  00FBE0  D73B               	goto	l35
  1665  00FBE2                     __end_of_main:
  1666                           	opt stack 0
  1667                           tblptru	equ	0xFF8
  1668                           wreg	equ	0xFE8
  1669                           status	equ	0xFD8
  1670                           
  1671 ;; *************** function _UARTWriteByteDec *****************
  1672 ;; Defined at:
  1673 ;;		line 93 in file "uart.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  data            1    wreg     unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  data            1   14[COMRAM] unsigned char 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;Total ram usage:        1 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    1
  1694 ;; This function calls:
  1695 ;;		_UARTWriteByte
  1696 ;;		___awdiv
  1697 ;;		___awmod
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text1
  1704  00F6AE                     __ptext1:
  1705                           	opt stack 0
  1706  00F6AE                     _UARTWriteByteDec:
  1707                           	opt stack 29
  1708                           
  1709                           ;incstack = 0
  1710                           ;UARTWriteByteDec@data stored from wreg
  1711  00F6AE  6E0F               	movwf	UARTWriteByteDec@data,c
  1712                           
  1713                           ;uart.c: 93: void UARTWriteByteDec(UINT8_T data);uart.c: 94: {;uart.c: 96:     UARTWrite
      +                          Byte((data / 100) + '0');
  1714  00F6B0  C00F  F007         	movff	UARTWriteByteDec@data,___awdiv@dividend
  1715  00F6B4  6A08               	clrf	___awdiv@dividend+1,c
  1716  00F6B6  0E00               	movlw	0
  1717  00F6B8  6E0A               	movwf	___awdiv@divisor+1,c
  1718  00F6BA  0E64               	movlw	100
  1719  00F6BC  6E09               	movwf	___awdiv@divisor,c
  1720  00F6BE  EC90  F07B         	call	___awdiv	;wreg free
  1721  00F6C2  5007               	movf	?___awdiv,w,c
  1722  00F6C4  0F30               	addlw	48
  1723  00F6C6  EC06  F07A         	call	_UARTWriteByte
  1724                           
  1725                           ;uart.c: 97:     UARTWriteByte(((data % 100) / 10) + '0');
  1726  00F6CA  0E00               	movlw	0
  1727  00F6CC  6E04               	movwf	___awmod@divisor+1,c
  1728  00F6CE  0E64               	movlw	100
  1729  00F6D0  6E03               	movwf	___awmod@divisor,c
  1730  00F6D2  C00F  F001         	movff	UARTWriteByteDec@data,___awmod@dividend
  1731  00F6D6  6A02               	clrf	___awmod@dividend+1,c
  1732  00F6D8  EC1F  F07B         	call	___awmod	;wreg free
  1733  00F6DC  C001  F007         	movff	?___awmod,___awdiv@dividend
  1734  00F6E0  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  1735  00F6E4  0E00               	movlw	0
  1736  00F6E6  6E0A               	movwf	___awdiv@divisor+1,c
  1737  00F6E8  0E0A               	movlw	10
  1738  00F6EA  6E09               	movwf	___awdiv@divisor,c
  1739  00F6EC  EC90  F07B         	call	___awdiv	;wreg free
  1740  00F6F0  5007               	movf	?___awdiv,w,c
  1741  00F6F2  0F30               	addlw	48
  1742  00F6F4  EC06  F07A         	call	_UARTWriteByte
  1743                           
  1744                           ;uart.c: 98:     UARTWriteByte((data % 10) + '0');
  1745  00F6F8  C00F  F001         	movff	UARTWriteByteDec@data,___awmod@dividend
  1746  00F6FC  6A02               	clrf	___awmod@dividend+1,c
  1747  00F6FE  0E00               	movlw	0
  1748  00F700  6E04               	movwf	___awmod@divisor+1,c
  1749  00F702  0E0A               	movlw	10
  1750  00F704  6E03               	movwf	___awmod@divisor,c
  1751  00F706  EC1F  F07B         	call	___awmod	;wreg free
  1752  00F70A  5001               	movf	?___awmod,w,c
  1753  00F70C  0F30               	addlw	48
  1754  00F70E  EC06  F07A         	call	_UARTWriteByte
  1755                           
  1756                           ;uart.c: 100:     UARTWriteByte(0x0D);
  1757  00F712  0E0D               	movlw	13
  1758  00F714  EC06  F07A         	call	_UARTWriteByte
  1759                           
  1760                           ;uart.c: 101:     UARTWriteByte(0x0A);
  1761  00F718  0E0A               	movlw	10
  1762  00F71A  EC06  F07A         	call	_UARTWriteByte
  1763  00F71E  0012               	return		;funcret
  1764  00F720                     __end_of_UARTWriteByteDec:
  1765                           	opt stack 0
  1766                           tblptru	equ	0xFF8
  1767                           wreg	equ	0xFE8
  1768                           status	equ	0xFD8
  1769                           
  1770 ;; *************** function ___awmod *****************
  1771 ;; Defined at:
  1772 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/awmod.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  dividend        2    0[COMRAM] int 
  1775 ;;  divisor         2    2[COMRAM] int 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  sign            1    5[COMRAM] unsigned char 
  1778 ;;  counter         1    4[COMRAM] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  2    0[COMRAM] int 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;Total ram usage:        6 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_UARTWriteByteDec
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text2
  1802  00F63E                     __ptext2:
  1803                           	opt stack 0
  1804  00F63E                     ___awmod:
  1805                           	opt stack 29
  1806                           
  1807                           ;incstack = 0
  1808  00F63E  0E00               	movlw	0
  1809  00F640  6E06               	movwf	___awmod@sign,c
  1810  00F642  AE02               	btfss	___awmod@dividend+1,7,c
  1811  00F644  D006               	goto	l438
  1812  00F646  6C01               	negf	___awmod@dividend,c
  1813  00F648  1E02               	comf	___awmod@dividend+1,f,c
  1814  00F64A  B0D8               	btfsc	status,0,c
  1815  00F64C  2A02               	incf	___awmod@dividend+1,f,c
  1816  00F64E  0E01               	movlw	1
  1817  00F650  6E06               	movwf	___awmod@sign,c
  1818  00F652                     l438:
  1819  00F652  AE04               	btfss	___awmod@divisor+1,7,c
  1820  00F654  D004               	goto	l439
  1821  00F656  6C03               	negf	___awmod@divisor,c
  1822  00F658  1E04               	comf	___awmod@divisor+1,f,c
  1823  00F65A  B0D8               	btfsc	status,0,c
  1824  00F65C  2A04               	incf	___awmod@divisor+1,f,c
  1825  00F65E                     l439:
  1826  00F65E  5003               	movf	___awmod@divisor,w,c
  1827  00F660  1004               	iorwf	___awmod@divisor+1,w,c
  1828  00F662  B4D8               	btfsc	status,2,c
  1829  00F664  D018               	goto	l446
  1830  00F666  0E01               	movlw	1
  1831  00F668  6E05               	movwf	___awmod@counter,c
  1832  00F66A  D004               	goto	l441
  1833  00F66C  90D8               	bcf	status,0,c
  1834  00F66E  3603               	rlcf	___awmod@divisor,f,c
  1835  00F670  3604               	rlcf	___awmod@divisor+1,f,c
  1836  00F672  2A05               	incf	___awmod@counter,f,c
  1837  00F674                     l441:
  1838  00F674  AE04               	btfss	___awmod@divisor+1,7,c
  1839  00F676  D7FA               	goto	l442
  1840  00F678                     u350:
  1841  00F678  5003               	movf	___awmod@divisor,w,c
  1842  00F67A  5C01               	subwf	___awmod@dividend,w,c
  1843  00F67C  5004               	movf	___awmod@divisor+1,w,c
  1844  00F67E  5802               	subwfb	___awmod@dividend+1,w,c
  1845  00F680  A0D8               	btfss	status,0,c
  1846  00F682  D004               	goto	l445
  1847  00F684  5003               	movf	___awmod@divisor,w,c
  1848  00F686  5E01               	subwf	___awmod@dividend,f,c
  1849  00F688  5004               	movf	___awmod@divisor+1,w,c
  1850  00F68A  5A02               	subwfb	___awmod@dividend+1,f,c
  1851  00F68C                     l445:
  1852  00F68C  90D8               	bcf	status,0,c
  1853  00F68E  3204               	rrcf	___awmod@divisor+1,f,c
  1854  00F690  3203               	rrcf	___awmod@divisor,f,c
  1855  00F692  2E05               	decfsz	___awmod@counter,f,c
  1856  00F694  D7F1               	goto	u350
  1857  00F696                     l446:
  1858  00F696  5006               	movf	___awmod@sign,w,c
  1859  00F698  B4D8               	btfsc	status,2,c
  1860  00F69A  D004               	goto	l447
  1861  00F69C  6C01               	negf	___awmod@dividend,c
  1862  00F69E  1E02               	comf	___awmod@dividend+1,f,c
  1863  00F6A0  B0D8               	btfsc	status,0,c
  1864  00F6A2  2A02               	incf	___awmod@dividend+1,f,c
  1865  00F6A4                     l447:
  1866  00F6A4  C001  F001         	movff	___awmod@dividend,?___awmod
  1867  00F6A8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1868  00F6AC  0012               	return	
  1869  00F6AE                     __end_of___awmod:
  1870                           	opt stack 0
  1871                           tblptru	equ	0xFF8
  1872                           wreg	equ	0xFE8
  1873                           status	equ	0xFD8
  1874                           
  1875 ;; *************** function _UARTInit *****************
  1876 ;; Defined at:
  1877 ;;		line 16 in file "uart.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  baudRate        2    0[COMRAM] unsigned int 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;Total ram usage:        2 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text3
  1905  00F4E6                     __ptext3:
  1906                           	opt stack 0
  1907  00F4E6                     _UARTInit:
  1908                           	opt stack 30
  1909                           
  1910                           ;uart.c: 18:     TRISCbits.TRISC6 = 1;
  1911                           
  1912                           ;incstack = 0
  1913  00F4E6  8C94               	bsf	3988,6,c	;volatile
  1914                           
  1915                           ;uart.c: 19:     TRISCbits.TRISC7 = 1;
  1916  00F4E8  8E94               	bsf	3988,7,c	;volatile
  1917                           
  1918                           ;uart.c: 20:     ANSELCbits.ANSC7 = 0;
  1919  00F4EA  010F               	movlb	15	; () banked
  1920  00F4EC  9F3A               	bcf	58,7,b	;volatile
  1921                           
  1922                           ; BSR set to: 15
  1923                           ;uart.c: 22:     TXSTA1 = 0;
  1924  00F4EE  0E00               	movlw	0
  1925  00F4F0  6EAC               	movwf	4012,c	;volatile
  1926                           
  1927                           ;uart.c: 23:     RCSTA1 = 0;
  1928  00F4F2  0E00               	movlw	0
  1929  00F4F4  6EAB               	movwf	4011,c	;volatile
  1930                           
  1931                           ; BSR set to: 15
  1932                           ;uart.c: 25:     TXSTA1bits.SYNC = 0;
  1933  00F4F6  98AC               	bcf	4012,4,c	;volatile
  1934                           
  1935                           ; BSR set to: 15
  1936                           ;uart.c: 26:     TXSTA1bits.TX9 = 0;
  1937  00F4F8  9CAC               	bcf	4012,6,c	;volatile
  1938                           
  1939                           ; BSR set to: 15
  1940                           ;uart.c: 27:     RCSTA1bits.RX9 = 0;
  1941  00F4FA  9CAB               	bcf	4011,6,c	;volatile
  1942                           
  1943                           ; BSR set to: 15
  1944                           ;uart.c: 28:     RCSTA1bits.CREN = 1;
  1945  00F4FC  88AB               	bsf	4011,4,c	;volatile
  1946                           
  1947                           ; BSR set to: 15
  1948                           ;uart.c: 29:     RCSTA1bits.ADDEN = 0;
  1949  00F4FE  96AB               	bcf	4011,3,c	;volatile
  1950                           
  1951                           ; BSR set to: 15
  1952                           ;uart.c: 31:     PIE1bits.RC1IE = 1;
  1953  00F500  8A9D               	bsf	3997,5,c	;volatile
  1954                           
  1955                           ; BSR set to: 15
  1956                           ;uart.c: 32:     PIE1bits.TX1IE = 0;
  1957  00F502  989D               	bcf	3997,4,c	;volatile
  1958                           
  1959                           ; BSR set to: 15
  1960                           ;uart.c: 34:     TXSTA1bits.BRGH = 1;
  1961  00F504  84AC               	bsf	4012,2,c	;volatile
  1962                           
  1963                           ; BSR set to: 15
  1964                           ;uart.c: 35:     BAUDCON1bits.BRG16 = 1;
  1965  00F506  86B8               	bsf	4024,3,c	;volatile
  1966                           
  1967                           ;uart.c: 38:     SPBRG1 = 12;
  1968  00F508  0E0C               	movlw	12
  1969  00F50A  6EAF               	movwf	4015,c	;volatile
  1970                           
  1971                           ;uart.c: 39:     SPBRGH1 = 0;
  1972  00F50C  0E00               	movlw	0
  1973  00F50E  6EB0               	movwf	4016,c	;volatile
  1974                           
  1975                           ; BSR set to: 15
  1976                           ;uart.c: 43:     TXSTA1bits.TXEN = 1;
  1977  00F510  8AAC               	bsf	4012,5,c	;volatile
  1978                           
  1979                           ; BSR set to: 15
  1980                           ;uart.c: 44:     RCSTA1bits.SPEN = 1;
  1981  00F512  8EAB               	bsf	4011,7,c	;volatile
  1982                           
  1983                           ; BSR set to: 15
  1984                           ;uart.c: 46:     RCIF = 0;
  1985  00F514  9A9E               	bcf	3998,5,c	;volatile
  1986                           
  1987                           ; BSR set to: 15
  1988                           ;uart.c: 48:     RCIE = 1;
  1989  00F516  8A9D               	bsf	3997,5,c	;volatile
  1990                           
  1991                           ; BSR set to: 15
  1992                           ;uart.c: 49:     PEIE = 1;
  1993  00F518  8CF2               	bsf	intcon,6,c	;volatile
  1994                           
  1995                           ; BSR set to: 15
  1996  00F51A  0012               	return		;funcret
  1997  00F51C                     __end_of_UARTInit:
  1998                           	opt stack 0
  1999                           tblptru	equ	0xFF8
  2000                           intcon	equ	0xFF2
  2001                           wreg	equ	0xFE8
  2002                           status	equ	0xFD8
  2003                           
  2004 ;; *************** function _SPIInit *****************
  2005 ;; Defined at:
  2006 ;;		line 16 in file "spi.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_main
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text4
  2034  00F4A0                     __ptext4:
  2035                           	opt stack 0
  2036  00F4A0                     _SPIInit:
  2037                           	opt stack 30
  2038                           
  2039                           ;spi.c: 18:     TRISBbits.TRISB1 = 0;
  2040                           
  2041                           ; BSR set to: 15
  2042                           ;incstack = 0
  2043  00F4A0  9293               	bcf	3987,1,c	;volatile
  2044                           
  2045                           ;spi.c: 19:     ANSELBbits.ANSB1 = 0;
  2046  00F4A2  010F               	movlb	15	; () banked
  2047  00F4A4  9339               	bcf	57,1,b	;volatile
  2048                           
  2049                           ;spi.c: 20:     TRISBbits.TRISB2 = 1;
  2050  00F4A6  8493               	bsf	3987,2,c	;volatile
  2051                           
  2052                           ;spi.c: 21:     ANSELBbits.ANSB2 = 0;
  2053  00F4A8  9539               	bcf	57,2,b	;volatile
  2054                           
  2055                           ;spi.c: 22:     TRISBbits.TRISB3 = 0;
  2056  00F4AA  9693               	bcf	3987,3,c	;volatile
  2057                           
  2058                           ;spi.c: 23:     ANSELBbits.ANSB3 = 0;
  2059  00F4AC  9739               	bcf	57,3,b	;volatile
  2060                           
  2061                           ;spi.c: 26:     TRISBbits.TRISB4 = 0;
  2062  00F4AE  9893               	bcf	3987,4,c	;volatile
  2063                           
  2064                           ;spi.c: 27:     ANSELBbits.ANSB4 = 0;
  2065  00F4B0  9939               	bcf	57,4,b	;volatile
  2066                           
  2067                           ;spi.c: 28:     LATBbits.LATB4 = 1;
  2068  00F4B2  888A               	bsf	3978,4,c	;volatile
  2069                           
  2070                           ;spi.c: 30:     SSP2STATbits.SMP = 0;
  2071  00F4B4  9E6D               	bcf	3949,7,c	;volatile
  2072                           
  2073                           ;spi.c: 31:     SSP2STATbits.CKE = 1;
  2074  00F4B6  8C6D               	bsf	3949,6,c	;volatile
  2075                           
  2076                           ; BSR set to: 15
  2077                           ;spi.c: 32:     SSP2CON1 = 0b00100000;
  2078  00F4B8  0E20               	movlw	32
  2079  00F4BA  6E6C               	movwf	3948,c	;volatile
  2080                           
  2081                           ; BSR set to: 15
  2082  00F4BC  0012               	return		;funcret
  2083  00F4BE                     __end_of_SPIInit:
  2084                           	opt stack 0
  2085                           tblptru	equ	0xFF8
  2086                           intcon	equ	0xFF2
  2087                           wreg	equ	0xFE8
  2088                           status	equ	0xFD8
  2089                           
  2090 ;; *************** function _ResetRFModule *****************
  2091 ;; Defined at:
  2092 ;;		line 27 in file "RF_LoRa_868_SO.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;Total ram usage:        1 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_main
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text5
  2120  00F4BE                     __ptext5:
  2121                           	opt stack 0
  2122  00F4BE                     _ResetRFModule:
  2123                           	opt stack 30
  2124                           
  2125                           ;RF_LoRa_868_SO.c: 28:     LATCbits.LATC0 = 1;
  2126                           
  2127                           ; BSR set to: 15
  2128                           ;incstack = 0
  2129  00F4BE  808B               	bsf	3979,0,c	;volatile
  2130                           
  2131                           ;RF_LoRa_868_SO.c: 29:     TRISCbits.TRISC0 = 0;
  2132  00F4C0  9094               	bcf	3988,0,c	;volatile
  2133                           
  2134                           ;RF_LoRa_868_SO.c: 30:     _delay((unsigned long)((50)*(1000000UL/4000.0)));
  2135  00F4C2  0E11               	movlw	17
  2136  00F4C4  6E01               	movwf	??_ResetRFModule& (0+255),c
  2137  00F4C6  0E3A               	movlw	58
  2138  00F4C8                     u467:
  2139  00F4C8  2EE8               	decfsz	wreg,f,c
  2140  00F4CA  D7FE               	bra	u467
  2141  00F4CC  2E01               	decfsz	??_ResetRFModule& (0+255),f,c
  2142  00F4CE  D7FC               	bra	u467
  2143  00F4D0  D000               	nop2	
  2144                           
  2145                           ;RF_LoRa_868_SO.c: 31:     TRISCbits.TRISC0 = 1;
  2146  00F4D2  8094               	bsf	3988,0,c	;volatile
  2147                           
  2148                           ;RF_LoRa_868_SO.c: 32:     _delay((unsigned long)((50)*(1000000UL/4000.0)));
  2149  00F4D4  0E11               	movlw	17
  2150  00F4D6  6E01               	movwf	??_ResetRFModule& (0+255),c
  2151  00F4D8  0E3A               	movlw	58
  2152  00F4DA                     u477:
  2153  00F4DA  2EE8               	decfsz	wreg,f,c
  2154  00F4DC  D7FE               	bra	u477
  2155  00F4DE  2E01               	decfsz	??_ResetRFModule& (0+255),f,c
  2156  00F4E0  D7FC               	bra	u477
  2157  00F4E2  D000               	nop2	
  2158  00F4E4  0012               	return		;funcret
  2159  00F4E6                     __end_of_ResetRFModule:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           intcon	equ	0xFF2
  2163                           wreg	equ	0xFE8
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _InitRFLoRaPins *****************
  2167 ;; Defined at:
  2168 ;;		line 18 in file "RF_LoRa_868_SO.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		None
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;Total ram usage:        0 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text6
  2196  00F418                     __ptext6:
  2197                           	opt stack 0
  2198  00F418                     _InitRFLoRaPins:
  2199                           	opt stack 30
  2200                           
  2201                           ;RF_LoRa_868_SO.c: 19:     TRISCbits.TRISC0 = 1;
  2202                           
  2203                           ;incstack = 0
  2204  00F418  8094               	bsf	3988,0,c	;volatile
  2205                           
  2206                           ;RF_LoRa_868_SO.c: 20:     LATCbits.LATC2 = 0;
  2207  00F41A  948B               	bcf	3979,2,c	;volatile
  2208                           
  2209                           ;RF_LoRa_868_SO.c: 21:     TRISCbits.TRISC2 = 0;
  2210  00F41C  9494               	bcf	3988,2,c	;volatile
  2211                           
  2212                           ;RF_LoRa_868_SO.c: 22:     ANSELCbits.ANSC2 = 0;
  2213  00F41E  010F               	movlb	15	; () banked
  2214  00F420  953A               	bcf	58,2,b	;volatile
  2215                           
  2216                           ;RF_LoRa_868_SO.c: 23:     LATCbits.LATC1 = 0;
  2217  00F422  928B               	bcf	3979,1,c	;volatile
  2218                           
  2219                           ;RF_LoRa_868_SO.c: 24:     TRISCbits.TRISC1 = 0;
  2220  00F424  9294               	bcf	3988,1,c	;volatile
  2221                           
  2222                           ; BSR set to: 15
  2223  00F426  0012               	return		;funcret
  2224  00F428                     __end_of_InitRFLoRaPins:
  2225                           	opt stack 0
  2226                           tblptru	equ	0xFF8
  2227                           intcon	equ	0xFF2
  2228                           wreg	equ	0xFE8
  2229                           status	equ	0xFD8
  2230                           
  2231 ;; *************** function _InitModule *****************
  2232 ;; Defined at:
  2233 ;;		line 94 in file "SX1272.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    2
  2254 ;; This function calls:
  2255 ;;		_WriteSXRegister
  2256 ;; This function is called by:
  2257 ;;		_main
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text7
  2262  00F7A4                     __ptext7:
  2263                           	opt stack 0
  2264  00F7A4                     _InitModule:
  2265                           	opt stack 28
  2266                           
  2267                           ;SX1272.c: 96:   WriteSXRegister(0x00, 0x00);
  2268                           
  2269                           ; BSR set to: 15
  2270                           ;incstack = 0
  2271  00F7A4  0E00               	movlw	0
  2272  00F7A6  6E06               	movwf	WriteSXRegister@data,c
  2273  00F7A8  0E00               	movlw	0
  2274  00F7AA  EC34  F07A         	call	_WriteSXRegister
  2275                           
  2276                           ;SX1272.c: 98:   WriteSXRegister(0x06, 0xD8);
  2277  00F7AE  0ED8               	movlw	216
  2278  00F7B0  6E06               	movwf	WriteSXRegister@data,c
  2279  00F7B2  0E06               	movlw	6
  2280  00F7B4  EC34  F07A         	call	_WriteSXRegister
  2281                           
  2282                           ;SX1272.c: 99:   WriteSXRegister(0x07, 0x99);
  2283  00F7B8  0E99               	movlw	153
  2284  00F7BA  6E06               	movwf	WriteSXRegister@data,c
  2285  00F7BC  0E07               	movlw	7
  2286  00F7BE  EC34  F07A         	call	_WriteSXRegister
  2287                           
  2288                           ;SX1272.c: 100:   WriteSXRegister(0x08, 0x99);
  2289  00F7C2  0E99               	movlw	153
  2290  00F7C4  6E06               	movwf	WriteSXRegister@data,c
  2291  00F7C6  0E08               	movlw	8
  2292  00F7C8  EC34  F07A         	call	_WriteSXRegister
  2293                           
  2294                           ;SX1272.c: 102:   WriteSXRegister(0x09, 0x01);
  2295  00F7CC  0E01               	movlw	1
  2296  00F7CE  6E06               	movwf	WriteSXRegister@data,c
  2297  00F7D0  0E09               	movlw	9
  2298  00F7D2  EC34  F07A         	call	_WriteSXRegister
  2299                           
  2300                           ;SX1272.c: 104:   WriteSXRegister(0x0A, 0x19);
  2301  00F7D6  0E19               	movlw	25
  2302  00F7D8  6E06               	movwf	WriteSXRegister@data,c
  2303  00F7DA  0E0A               	movlw	10
  2304  00F7DC  EC34  F07A         	call	_WriteSXRegister
  2305                           
  2306                           ;SX1272.c: 106:   WriteSXRegister(0x0B, 0b00101011);
  2307  00F7E0  0E2B               	movlw	43
  2308  00F7E2  6E06               	movwf	WriteSXRegister@data,c
  2309  00F7E4  0E0B               	movlw	11
  2310  00F7E6  EC34  F07A         	call	_WriteSXRegister
  2311                           
  2312                           ;SX1272.c: 108:   WriteSXRegister(0x0C, 0b00100011);
  2313  00F7EA  0E23               	movlw	35
  2314  00F7EC  6E06               	movwf	WriteSXRegister@data,c
  2315  00F7EE  0E0C               	movlw	12
  2316  00F7F0  EC34  F07A         	call	_WriteSXRegister
  2317                           
  2318                           ;SX1272.c: 110:   WriteSXRegister(0x0D, 0x00);
  2319  00F7F4  0E00               	movlw	0
  2320  00F7F6  6E06               	movwf	WriteSXRegister@data,c
  2321  00F7F8  0E0D               	movlw	13
  2322  00F7FA  EC34  F07A         	call	_WriteSXRegister
  2323                           
  2324                           ;SX1272.c: 111:   WriteSXRegister(0x0E, 0x80);
  2325  00F7FE  0E80               	movlw	128
  2326  00F800  6E06               	movwf	WriteSXRegister@data,c
  2327  00F802  0E0E               	movlw	14
  2328  00F804  EC34  F07A         	call	_WriteSXRegister
  2329                           
  2330                           ;SX1272.c: 112:   WriteSXRegister(0x0F, 0x00);
  2331  00F808  0E00               	movlw	0
  2332  00F80A  6E06               	movwf	WriteSXRegister@data,c
  2333  00F80C  0E0F               	movlw	15
  2334  00F80E  EC34  F07A         	call	_WriteSXRegister
  2335                           
  2336                           ;SX1272.c: 114:   WriteSXRegister(0x11, 0x00);
  2337  00F812  0E00               	movlw	0
  2338  00F814  6E06               	movwf	WriteSXRegister@data,c
  2339  00F816  0E11               	movlw	17
  2340  00F818  EC34  F07A         	call	_WriteSXRegister
  2341                           
  2342                           ;SX1272.c: 116:   WriteSXRegister(0x12, 0xFF);
  2343  00F81C  0EFF               	movlw	255
  2344  00F81E  6E06               	movwf	WriteSXRegister@data,c
  2345  00F820  0E12               	movlw	18
  2346  00F822  EC34  F07A         	call	_WriteSXRegister
  2347                           
  2348                           ;SX1272.c: 119:   WriteSXRegister(0x1D, 0b10001000);
  2349  00F826  0E88               	movlw	136
  2350  00F828  6E06               	movwf	WriteSXRegister@data,c
  2351  00F82A  0E1D               	movlw	29
  2352  00F82C  EC34  F07A         	call	_WriteSXRegister
  2353                           
  2354                           ;SX1272.c: 122:   WriteSXRegister(0x1E, 0b11000111);
  2355  00F830  0EC7               	movlw	199
  2356  00F832  6E06               	movwf	WriteSXRegister@data,c
  2357  00F834  0E1E               	movlw	30
  2358  00F836  EC34  F07A         	call	_WriteSXRegister
  2359                           
  2360                           ;SX1272.c: 124:   WriteSXRegister(0x1F, 0xFF);
  2361  00F83A  0EFF               	movlw	255
  2362  00F83C  6E06               	movwf	WriteSXRegister@data,c
  2363  00F83E  0E1F               	movlw	31
  2364  00F840  EC34  F07A         	call	_WriteSXRegister
  2365                           
  2366                           ;SX1272.c: 126:   WriteSXRegister(0x20, 0x00);
  2367  00F844  0E00               	movlw	0
  2368  00F846  6E06               	movwf	WriteSXRegister@data,c
  2369  00F848  0E20               	movlw	32
  2370  00F84A  EC34  F07A         	call	_WriteSXRegister
  2371                           
  2372                           ;SX1272.c: 127:   WriteSXRegister(0x21, 0x08);
  2373  00F84E  0E08               	movlw	8
  2374  00F850  6E06               	movwf	WriteSXRegister@data,c
  2375  00F852  0E21               	movlw	33
  2376  00F854  EC34  F07A         	call	_WriteSXRegister
  2377                           
  2378                           ;SX1272.c: 129:   WriteSXRegister(0x23, 0x80);
  2379  00F858  0E80               	movlw	128
  2380  00F85A  6E06               	movwf	WriteSXRegister@data,c
  2381  00F85C  0E23               	movlw	35
  2382  00F85E  EC34  F07A         	call	_WriteSXRegister
  2383                           
  2384                           ;SX1272.c: 131:   WriteSXRegister(0x24, 0x00);
  2385  00F862  0E00               	movlw	0
  2386  00F864  6E06               	movwf	WriteSXRegister@data,c
  2387  00F866  0E24               	movlw	36
  2388  00F868  EC34  F07A         	call	_WriteSXRegister
  2389                           
  2390                           ;SX1272.c: 133:   WriteSXRegister(0x31, 0xC3);
  2391  00F86C  0EC3               	movlw	195
  2392  00F86E  6E06               	movwf	WriteSXRegister@data,c
  2393  00F870  0E31               	movlw	49
  2394  00F872  EC34  F07A         	call	_WriteSXRegister
  2395                           
  2396                           ;SX1272.c: 135:   WriteSXRegister(0x33, 0x27);
  2397  00F876  0E27               	movlw	39
  2398  00F878  6E06               	movwf	WriteSXRegister@data,c
  2399  00F87A  0E33               	movlw	51
  2400  00F87C  EC34  F07A         	call	_WriteSXRegister
  2401                           
  2402                           ;SX1272.c: 137:   WriteSXRegister(0x37, 0x0A);
  2403  00F880  0E0A               	movlw	10
  2404  00F882  6E06               	movwf	WriteSXRegister@data,c
  2405  00F884  0E37               	movlw	55
  2406  00F886  EC34  F07A         	call	_WriteSXRegister
  2407                           
  2408                           ;SX1272.c: 139:   WriteSXRegister(0x39, 0x12);
  2409  00F88A  0E12               	movlw	18
  2410  00F88C  6E06               	movwf	WriteSXRegister@data,c
  2411  00F88E  0E39               	movlw	57
  2412  00F890  EC34  F07A         	call	_WriteSXRegister
  2413  00F894  0012               	return		;funcret
  2414  00F896                     __end_of_InitModule:
  2415                           	opt stack 0
  2416                           tblptru	equ	0xFF8
  2417                           intcon	equ	0xFF2
  2418                           wreg	equ	0xFE8
  2419                           status	equ	0xFD8
  2420                           
  2421 ;; *************** function _WriteSXRegister *****************
  2422 ;; Defined at:
  2423 ;;		line 19 in file "SX1272.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  address         1    wreg     unsigned char 
  2426 ;;  data            1    5[COMRAM] unsigned char 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  address         1    6[COMRAM] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2438 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;Total ram usage:        2 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    1
  2445 ;; This function calls:
  2446 ;;		_SPITransfer
  2447 ;; This function is called by:
  2448 ;;		_main
  2449 ;;		_InitModule
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text8
  2454  00F468                     __ptext8:
  2455                           	opt stack 0
  2456  00F468                     _WriteSXRegister:
  2457                           	opt stack 29
  2458                           
  2459                           ;incstack = 0
  2460                           ;WriteSXRegister@address stored from wreg
  2461  00F468  6E07               	movwf	WriteSXRegister@address,c
  2462                           
  2463                           ;SX1272.c: 21:     LATBbits.LATB4 = 0;
  2464  00F46A  988A               	bcf	3978,4,c	;volatile
  2465                           
  2466                           ;SX1272.c: 22:     address = address | 0x80;
  2467  00F46C  5007               	movf	WriteSXRegister@address,w,c
  2468  00F46E  0980               	iorlw	128
  2469  00F470  6E07               	movwf	WriteSXRegister@address,c
  2470                           
  2471                           ;SX1272.c: 24:     SPITransfer(address);
  2472  00F472  5007               	movf	WriteSXRegister@address,w,c
  2473  00F474  EC14  F07A         	call	_SPITransfer
  2474                           
  2475                           ;SX1272.c: 25:     SPITransfer(data);
  2476  00F478  5006               	movf	WriteSXRegister@data,w,c
  2477  00F47A  EC14  F07A         	call	_SPITransfer
  2478                           
  2479                           ;SX1272.c: 26:     LATBbits.LATB4 = 1;
  2480  00F47E  888A               	bsf	3978,4,c	;volatile
  2481  00F480  0012               	return		;funcret
  2482  00F482                     __end_of_WriteSXRegister:
  2483                           	opt stack 0
  2484                           tblptru	equ	0xFF8
  2485                           intcon	equ	0xFF2
  2486                           wreg	equ	0xFE8
  2487                           status	equ	0xFD8
  2488                           
  2489 ;; *************** function _GetMode *****************
  2490 ;; Defined at:
  2491 ;;		line 42 in file "SX1272.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  reg             1   23[COMRAM] unsigned char 
  2496 ;;  masked_reg      1   22[COMRAM] unsigned char 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;Total ram usage:        4 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    2
  2513 ;; This function calls:
  2514 ;;		_ReadSXRegister
  2515 ;;		_UARTWriteByteHex
  2516 ;;		_UARTWriteStr
  2517 ;;		_UARTWriteStrLn
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text9
  2524  00F896                     __ptext9:
  2525                           	opt stack 0
  2526  00F896                     _GetMode:
  2527                           	opt stack 28
  2528                           
  2529                           ;SX1272.c: 43:     uint8_t reg, masked_reg;;SX1272.c: 44:     reg = ReadSXRegister(0x01)
      +                          ;
  2530                           
  2531                           ;incstack = 0
  2532  00F896  0E01               	movlw	1
  2533  00F898  EC41  F07A         	call	_ReadSXRegister
  2534  00F89C  6E18               	movwf	GetMode@reg,c
  2535                           
  2536                           ;SX1272.c: 47:         UARTWriteStr("REG_OP_MODE = 0x");
  2537  00F89E  0E70               	movlw	low STR_23
  2538  00F8A0  6E02               	movwf	UARTWriteStr@string,c
  2539  00F8A2  0EFF               	movlw	high STR_23
  2540  00F8A4  6E03               	movwf	UARTWriteStr@string+1,c
  2541  00F8A6  EC8E  F07A         	call	_UARTWriteStr	;wreg free
  2542                           
  2543                           ;SX1272.c: 48:         UARTWriteByteHex(reg);
  2544  00F8AA  5018               	movf	GetMode@reg,w,c
  2545  00F8AC  ECE8  F07A         	call	_UARTWriteByteHex
  2546                           
  2547                           ;SX1272.c: 50:     masked_reg = reg & 0x80;
  2548  00F8B0  5018               	movf	GetMode@reg,w,c
  2549  00F8B2  0B80               	andlw	128
  2550  00F8B4  6E17               	movwf	GetMode@masked_reg,c
  2551                           
  2552                           ;SX1272.c: 51:     if (masked_reg)
  2553  00F8B6  5017               	movf	GetMode@masked_reg,w,c
  2554  00F8B8  B4D8               	btfsc	status,2,c
  2555  00F8BA  D014               	goto	l69
  2556                           
  2557                           ;SX1272.c: 52:         {;SX1272.c: 54:         masked_reg = reg & 0x40;
  2558  00F8BC  5018               	movf	GetMode@reg,w,c
  2559  00F8BE  0B40               	andlw	64
  2560  00F8C0  6E17               	movwf	GetMode@masked_reg,c
  2561                           
  2562                           ;SX1272.c: 55:         if (!masked_reg)
  2563  00F8C2  5017               	movf	GetMode@masked_reg,w,c
  2564  00F8C4  A4D8               	btfss	status,2,c
  2565  00F8C6  D007               	goto	l70
  2566                           
  2567                           ;SX1272.c: 56:             UARTWriteStrLn("mode = LoRa");
  2568  00F8C8  0EC8               	movlw	low STR_24
  2569  00F8CA  6E02               	movwf	UARTWriteStrLn@string,c
  2570  00F8CC  0EFF               	movlw	high STR_24
  2571  00F8CE  6E03               	movwf	UARTWriteStrLn@string+1,c
  2572  00F8D0  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  2573  00F8D4  D00D               	goto	l72
  2574  00F8D6                     l70:
  2575                           
  2576                           ;SX1272.c: 58:             UARTWriteStrLn("mode = LoRa with FSK registers access");
  2577  00F8D6  0EE3               	movlw	low STR_25
  2578  00F8D8  6E02               	movwf	UARTWriteStrLn@string,c
  2579  00F8DA  0EFB               	movlw	high STR_25
  2580  00F8DC  6E03               	movwf	UARTWriteStrLn@string+1,c
  2581  00F8DE  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  2582                           
  2583                           ;SX1272.c: 59:         }
  2584  00F8E2  D006               	goto	l72
  2585  00F8E4                     l69:
  2586                           
  2587                           ;SX1272.c: 62:         UARTWriteStrLn("mode = FSK");
  2588  00F8E4  0EE0               	movlw	low STR_26
  2589  00F8E6  6E02               	movwf	UARTWriteStrLn@string,c
  2590  00F8E8  0EFF               	movlw	high STR_26
  2591  00F8EA  6E03               	movwf	UARTWriteStrLn@string+1,c
  2592  00F8EC  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  2593  00F8F0                     l72:
  2594                           
  2595                           ;SX1272.c: 64:     masked_reg = reg & 0x07;
  2596  00F8F0  5018               	movf	GetMode@reg,w,c
  2597  00F8F2  0B07               	andlw	7
  2598  00F8F4  6E17               	movwf	GetMode@masked_reg,c
  2599                           
  2600                           ;SX1272.c: 65:         switch (masked_reg){
  2601  00F8F6  D038               	goto	l73
  2602  00F8F8                     
  2603                           ;SX1272.c: 67:             UARTWriteStrLn("sleep mode");
  2604  00F8F8  0EEB               	movlw	low STR_27
  2605  00F8FA  6E02               	movwf	UARTWriteStrLn@string,c
  2606  00F8FC  0EFF               	movlw	high STR_27
  2607  00F8FE  6E03               	movwf	UARTWriteStrLn@string+1,c
  2608  00F900  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  2609                           
  2610                           ;SX1272.c: 68:             break;
  2611  00F904  0012               	return	
  2612  00F906                     
  2613                           ;SX1272.c: 70:             UARTWriteStrLn("standby mode");
  2614  00F906  0EA1               	movlw	low STR_28
  2615  00F908  6E02               	movwf	UARTWriteStrLn@string,c
  2616  00F90A  0EFF               	movlw	high STR_28
  2617  00F90C  6E03               	movwf	UARTWriteStrLn@string+1,c
  2618  00F90E  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  2619                           
  2620                           ;SX1272.c: 71:             break;
  2621  00F912  0012               	return	
  2622  00F914                     
  2623                           ;SX1272.c: 73:             UARTWriteStrLn("frequency synthesis TX");
  2624  00F914  0E0C               	movlw	low STR_29
  2625  00F916  6E02               	movwf	UARTWriteStrLn@string,c
  2626  00F918  0EFE               	movlw	high STR_29
  2627  00F91A  6E03               	movwf	UARTWriteStrLn@string+1,c
  2628  00F91C  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  2629                           
  2630                           ;SX1272.c: 74:             break;
  2631  00F920  0012               	return	
  2632  00F922                     
  2633                           ;SX1272.c: 76:             UARTWriteStrLn("TX mode");
  2634  00F922  0EF6               	movlw	low STR_30
  2635  00F924  6E02               	movwf	UARTWriteStrLn@string,c
  2636  00F926  0EFF               	movlw	high STR_30
  2637  00F928  6E03               	movwf	UARTWriteStrLn@string+1,c
  2638  00F92A  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  2639                           
  2640                           ;SX1272.c: 77:             break;
  2641  00F92E  0012               	return	
  2642  00F930                     
  2643                           ;SX1272.c: 79:             UARTWriteStrLn("frequency synthesis RX");
  2644  00F930  0EF5               	movlw	low STR_31
  2645  00F932  6E02               	movwf	UARTWriteStrLn@string,c
  2646  00F934  0EFD               	movlw	high STR_31
  2647  00F936  6E03               	movwf	UARTWriteStrLn@string+1,c
  2648  00F938  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  2649                           
  2650                           ;SX1272.c: 80:             break;
  2651  00F93C  0012               	return	
  2652  00F93E                     
  2653                           ;SX1272.c: 82:             UARTWriteStrLn("continuous receive mode");
  2654  00F93E  0EAD               	movlw	low STR_32
  2655  00F940  6E02               	movwf	UARTWriteStrLn@string,c
  2656  00F942  0EFD               	movlw	high STR_32
  2657  00F944  6E03               	movwf	UARTWriteStrLn@string+1,c
  2658  00F946  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  2659                           
  2660                           ;SX1272.c: 83:             break;
  2661  00F94A  0012               	return	
  2662  00F94C                     
  2663                           ;SX1272.c: 85:             UARTWriteStrLn("single receive mode");
  2664  00F94C  0E93               	movlw	low STR_33
  2665  00F94E  6E02               	movwf	UARTWriteStrLn@string,c
  2666  00F950  0EFE               	movlw	high STR_33
  2667  00F952  6E03               	movwf	UARTWriteStrLn@string+1,c
  2668  00F954  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  2669                           
  2670                           ;SX1272.c: 86:             break;
  2671  00F958  0012               	return	
  2672  00F95A                     
  2673                           ;SX1272.c: 88:             UARTWriteStrLn("Channel Activity Detection");
  2674  00F95A  0EC0               	movlw	low STR_34
  2675  00F95C  6E02               	movwf	UARTWriteStrLn@string,c
  2676  00F95E  0EFC               	movlw	high STR_34
  2677  00F960  6E03               	movwf	UARTWriteStrLn@string+1,c
  2678  00F962  ECB8  F07A         	call	_UARTWriteStrLn	;wreg free
  2679                           
  2680                           ;SX1272.c: 90:         }
  2681                           
  2682                           ;SX1272.c: 89:             break;
  2683  00F966  0012               	return	
  2684  00F968                     l73:
  2685  00F968  5017               	movf	GetMode@masked_reg,w,c
  2686  00F96A  6E15               	movwf	??_GetMode& (0+255),c
  2687  00F96C  6A16               	clrf	(??_GetMode+1)& (0+255),c
  2688                           
  2689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2690                           ; Switch size 1, requested type "space"
  2691                           ; Number of cases is 1, Range of values is 0 to 0
  2692                           ; switch strategies available:
  2693                           ; Name         Instructions Cycles
  2694                           ; simple_byte            4     3 (average)
  2695                           ;	Chosen strategy is simple_byte
  2696  00F96E  5016               	movf	??_GetMode+1,w,c
  2697  00F970  0A00               	xorlw	0	; case 0
  2698  00F972  A4D8               	btfss	status,2,c
  2699  00F974  0012               	return	
  2700                           
  2701                           ; Switch size 1, requested type "space"
  2702                           ; Number of cases is 8, Range of values is 0 to 7
  2703                           ; switch strategies available:
  2704                           ; Name         Instructions Cycles
  2705                           ; simple_byte           25    13 (average)
  2706                           ;	Chosen strategy is simple_byte
  2707  00F976  5015               	movf	??_GetMode,w,c
  2708  00F978  0A00               	xorlw	0	; case 0
  2709  00F97A  B4D8               	btfsc	status,2,c
  2710  00F97C  D7BD               	goto	l74
  2711  00F97E  0A01               	xorlw	1	; case 1
  2712  00F980  B4D8               	btfsc	status,2,c
  2713  00F982  D7C1               	goto	l76
  2714  00F984  0A03               	xorlw	3	; case 2
  2715  00F986  B4D8               	btfsc	status,2,c
  2716  00F988  D7C5               	goto	l77
  2717  00F98A  0A01               	xorlw	1	; case 3
  2718  00F98C  B4D8               	btfsc	status,2,c
  2719  00F98E  D7C9               	goto	l78
  2720  00F990  0A07               	xorlw	7	; case 4
  2721  00F992  B4D8               	btfsc	status,2,c
  2722  00F994  D7CD               	goto	l79
  2723  00F996  0A01               	xorlw	1	; case 5
  2724  00F998  B4D8               	btfsc	status,2,c
  2725  00F99A  D7D1               	goto	l80
  2726  00F99C  0A03               	xorlw	3	; case 6
  2727  00F99E  B4D8               	btfsc	status,2,c
  2728  00F9A0  D7D5               	goto	l81
  2729  00F9A2  0A01               	xorlw	1	; case 7
  2730  00F9A4  A4D8               	btfss	status,2,c
  2731  00F9A6  0012               	return	
  2732  00F9A8  D7D8               	goto	l82
  2733  00F9AA                     __end_of_GetMode:
  2734                           	opt stack 0
  2735                           tblptru	equ	0xFF8
  2736                           intcon	equ	0xFF2
  2737                           wreg	equ	0xFE8
  2738                           status	equ	0xFD8
  2739                           
  2740 ;; *************** function _UARTWriteStrLn *****************
  2741 ;; Defined at:
  2742 ;;		line 72 in file "uart.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  string          2    1[COMRAM] PTR unsigned char 
  2745 ;;		 -> STR_36(33), STR_35(2), STR_34(27), STR_33(20), 
  2746 ;;		 -> STR_32(24), STR_31(23), STR_30(8), STR_29(23), 
  2747 ;;		 -> STR_28(13), STR_27(11), STR_26(11), STR_25(38), 
  2748 ;;		 -> STR_24(12), STR_22(24), STR_21(12), STR_20(2), 
  2749 ;;		 -> STR_16(2), STR_15(2), STR_14(15), STR_13(2), 
  2750 ;;		 -> STR_12(18), STR_11(2), STR_9(26), STR_8(2), 
  2751 ;;		 -> STR_6(22), STR_5(2), STR_4(31), STR_3(2), 
  2752 ;;		 -> STR_2(19), STR_1(25), 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  i               1    5[COMRAM] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;Total ram usage:        5 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    1
  2771 ;; This function calls:
  2772 ;;		_UARTWriteByte
  2773 ;; This function is called by:
  2774 ;;		_main
  2775 ;;		_GetMode
  2776 ;;		_CheckConfiguration
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text10
  2781  00F570                     __ptext10:
  2782                           	opt stack 0
  2783  00F570                     _UARTWriteStrLn:
  2784                           	opt stack 29
  2785                           
  2786                           ;uart.c: 72: void UARTWriteStrLn(char *string);uart.c: 73: {;uart.c: 74:   UINT8_T i = 0
      +                          ;
  2787                           
  2788                           ;incstack = 0
  2789  00F570  0E00               	movlw	0
  2790  00F572  6E06               	movwf	UARTWriteStrLn@i,c
  2791                           
  2792                           ;uart.c: 76:   while (string[i])
  2793  00F574  D013               	goto	l172
  2794  00F576                     
  2795                           ;uart.c: 77:     UARTWriteByte(string[i++]);
  2796  00F576  5006               	movf	UARTWriteStrLn@i,w,c
  2797  00F578  0D01               	mullw	1
  2798  00F57A  C002  F004         	movff	UARTWriteStrLn@string,??_UARTWriteStrLn
  2799  00F57E  C003  F005         	movff	UARTWriteStrLn@string+1,??_UARTWriteStrLn+1
  2800  00F582  50F3               	movf	prodl,w,c
  2801  00F584  2604               	addwf	??_UARTWriteStrLn,f,c
  2802  00F586  50F4               	movf	prodh,w,c
  2803  00F588  2205               	addwfc	??_UARTWriteStrLn+1,f,c
  2804  00F58A  C004  FFF6         	movff	??_UARTWriteStrLn,tblptrl
  2805  00F58E  C005  FFF7         	movff	??_UARTWriteStrLn+1,tblptrh
  2806  00F592                     	if	0	;tblptru may be non-zero
  2807  00F592                     	endif
  2808  00F592                     	if	0	;tblptru may be non-zero
  2809  00F592                     	endif
  2810  00F592  0008               	tblrd		*
  2811  00F594  50F5               	movf	tablat,w,c
  2812  00F596  EC06  F07A         	call	_UARTWriteByte
  2813  00F59A  2A06               	incf	UARTWriteStrLn@i,f,c
  2814  00F59C                     l172:
  2815                           
  2816                           ;uart.c: 76:   while (string[i])
  2817  00F59C  5006               	movf	UARTWriteStrLn@i,w,c
  2818  00F59E  0D01               	mullw	1
  2819  00F5A0  C002  F004         	movff	UARTWriteStrLn@string,??_UARTWriteStrLn
  2820  00F5A4  C003  F005         	movff	UARTWriteStrLn@string+1,??_UARTWriteStrLn+1
  2821  00F5A8  50F3               	movf	prodl,w,c
  2822  00F5AA  2604               	addwf	??_UARTWriteStrLn,f,c
  2823  00F5AC  50F4               	movf	prodh,w,c
  2824  00F5AE  2205               	addwfc	??_UARTWriteStrLn+1,f,c
  2825  00F5B0  C004  FFF6         	movff	??_UARTWriteStrLn,tblptrl
  2826  00F5B4  C005  FFF7         	movff	??_UARTWriteStrLn+1,tblptrh
  2827  00F5B8                     	if	0	;tblptru may be non-zero
  2828  00F5B8                     	endif
  2829  00F5B8                     	if	0	;tblptru may be non-zero
  2830  00F5B8                     	endif
  2831  00F5B8  0008               	tblrd		*
  2832  00F5BA  50F5               	movf	tablat,w,c
  2833  00F5BC  0900               	iorlw	0
  2834  00F5BE  A4D8               	btfss	status,2,c
  2835  00F5C0  D7DA               	goto	l173
  2836                           
  2837                           ;uart.c: 79:   UARTWriteByte(0x0D);
  2838  00F5C2  0E0D               	movlw	13
  2839  00F5C4  EC06  F07A         	call	_UARTWriteByte
  2840                           
  2841                           ;uart.c: 80:   UARTWriteByte(0x0A);
  2842  00F5C8  0E0A               	movlw	10
  2843  00F5CA  EC06  F07A         	call	_UARTWriteByte
  2844  00F5CE  0012               	return		;funcret
  2845  00F5D0                     __end_of_UARTWriteStrLn:
  2846                           	opt stack 0
  2847                           tblptru	equ	0xFF8
  2848                           tblptrh	equ	0xFF7
  2849                           tblptrl	equ	0xFF6
  2850                           tablat	equ	0xFF5
  2851                           prodh	equ	0xFF4
  2852                           prodl	equ	0xFF3
  2853                           intcon	equ	0xFF2
  2854                           wreg	equ	0xFE8
  2855                           status	equ	0xFD8
  2856                           
  2857 ;; *************** function _UARTWriteStr *****************
  2858 ;; Defined at:
  2859 ;;		line 64 in file "uart.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  string          2    1[COMRAM] PTR unsigned char 
  2862 ;;		 -> STR_59(19), STR_58(29), STR_57(19), STR_56(25), 
  2863 ;;		 -> STR_55(20), STR_54(28), STR_53(27), STR_52(27), 
  2864 ;;		 -> STR_51(26), STR_50(23), STR_49(23), STR_48(19), 
  2865 ;;		 -> STR_47(24), STR_46(27), STR_45(27), STR_44(23), 
  2866 ;;		 -> STR_43(13), STR_42(13), STR_41(17), STR_40(19), 
  2867 ;;		 -> STR_39(17), STR_38(17), STR_37(17), STR_23(17), 
  2868 ;;		 -> STR_19(32), STR_18(21), STR_17(30), STR_10(19), 
  2869 ;;		 -> STR_7(19), 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  i               1    5[COMRAM] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;Total ram usage:        5 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    1
  2888 ;; This function calls:
  2889 ;;		_UARTWriteByte
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;;		_GetMode
  2893 ;;		_CheckConfiguration
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text11
  2898  00F51C                     __ptext11:
  2899                           	opt stack 0
  2900  00F51C                     _UARTWriteStr:
  2901                           	opt stack 29
  2902                           
  2903                           ;uart.c: 64: void UARTWriteStr(char *string);uart.c: 65: {;uart.c: 66:   UINT8_T i = 0;
  2904                           
  2905                           ;incstack = 0
  2906  00F51C  0E00               	movlw	0
  2907  00F51E  6E06               	movwf	UARTWriteStr@i,c
  2908                           
  2909                           ;uart.c: 68:   while (string[i])
  2910  00F520  D013               	goto	l166
  2911  00F522                     
  2912                           ;uart.c: 69:     UARTWriteByte(string[i++]);
  2913  00F522  5006               	movf	UARTWriteStr@i,w,c
  2914  00F524  0D01               	mullw	1
  2915  00F526  C002  F004         	movff	UARTWriteStr@string,??_UARTWriteStr
  2916  00F52A  C003  F005         	movff	UARTWriteStr@string+1,??_UARTWriteStr+1
  2917  00F52E  50F3               	movf	prodl,w,c
  2918  00F530  2604               	addwf	??_UARTWriteStr,f,c
  2919  00F532  50F4               	movf	prodh,w,c
  2920  00F534  2205               	addwfc	??_UARTWriteStr+1,f,c
  2921  00F536  C004  FFF6         	movff	??_UARTWriteStr,tblptrl
  2922  00F53A  C005  FFF7         	movff	??_UARTWriteStr+1,tblptrh
  2923  00F53E                     	if	0	;tblptru may be non-zero
  2924  00F53E                     	endif
  2925  00F53E                     	if	0	;tblptru may be non-zero
  2926  00F53E                     	endif
  2927  00F53E  0008               	tblrd		*
  2928  00F540  50F5               	movf	tablat,w,c
  2929  00F542  EC06  F07A         	call	_UARTWriteByte
  2930  00F546  2A06               	incf	UARTWriteStr@i,f,c
  2931  00F548                     l166:
  2932                           
  2933                           ;uart.c: 68:   while (string[i])
  2934  00F548  5006               	movf	UARTWriteStr@i,w,c
  2935  00F54A  0D01               	mullw	1
  2936  00F54C  C002  F004         	movff	UARTWriteStr@string,??_UARTWriteStr
  2937  00F550  C003  F005         	movff	UARTWriteStr@string+1,??_UARTWriteStr+1
  2938  00F554  50F3               	movf	prodl,w,c
  2939  00F556  2604               	addwf	??_UARTWriteStr,f,c
  2940  00F558  50F4               	movf	prodh,w,c
  2941  00F55A  2205               	addwfc	??_UARTWriteStr+1,f,c
  2942  00F55C  C004  FFF6         	movff	??_UARTWriteStr,tblptrl
  2943  00F560  C005  FFF7         	movff	??_UARTWriteStr+1,tblptrh
  2944  00F564                     	if	0	;tblptru may be non-zero
  2945  00F564                     	endif
  2946  00F564                     	if	0	;tblptru may be non-zero
  2947  00F564                     	endif
  2948  00F564  0008               	tblrd		*
  2949  00F566  50F5               	movf	tablat,w,c
  2950  00F568  0900               	iorlw	0
  2951  00F56A  B4D8               	btfsc	status,2,c
  2952  00F56C  0012               	return	
  2953  00F56E  D7D9               	goto	l167
  2954  00F570                     __end_of_UARTWriteStr:
  2955                           	opt stack 0
  2956                           tblptru	equ	0xFF8
  2957                           tblptrh	equ	0xFF7
  2958                           tblptrl	equ	0xFF6
  2959                           tablat	equ	0xFF5
  2960                           prodh	equ	0xFF4
  2961                           prodl	equ	0xFF3
  2962                           intcon	equ	0xFF2
  2963                           wreg	equ	0xFE8
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function _UARTWriteByteHex *****************
  2967 ;; Defined at:
  2968 ;;		line 83 in file "uart.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  data            1    wreg     unsigned char 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  data            1   19[COMRAM] unsigned char 
  2973 ;;  hexa            2   17[COMRAM] PTR unsigned char 
  2974 ;;		 -> STR_60(17), 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;Total ram usage:        6 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    1
  2991 ;; This function calls:
  2992 ;;		_UARTWriteByte
  2993 ;;		___awdiv
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;;		_GetMode
  2997 ;;		_PrintSXRegContent
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text12
  3002  00F5D0                     __ptext12:
  3003                           	opt stack 0
  3004  00F5D0                     _UARTWriteByteHex:
  3005                           	opt stack 29
  3006                           
  3007                           ;incstack = 0
  3008                           ;UARTWriteByteHex@data stored from wreg
  3009  00F5D0  6E14               	movwf	UARTWriteByteHex@data,c
  3010                           
  3011                           ;uart.c: 83: void UARTWriteByteHex(UINT8_T data);uart.c: 84: {;uart.c: 85:     char *hex
      +                          a = "0123456789ABCDEF";
  3012  00F5D2  0E2C               	movlw	low STR_60
  3013  00F5D4  6E12               	movwf	UARTWriteByteHex@hexa,c
  3014  00F5D6  0EFF               	movlw	high STR_60
  3015  00F5D8  6E13               	movwf	UARTWriteByteHex@hexa+1,c
  3016                           
  3017                           ;uart.c: 87:     UARTWriteByte(hexa[data / 16]);
  3018  00F5DA  C014  F007         	movff	UARTWriteByteHex@data,___awdiv@dividend
  3019  00F5DE  6A08               	clrf	___awdiv@dividend+1,c
  3020  00F5E0  0E00               	movlw	0
  3021  00F5E2  6E0A               	movwf	___awdiv@divisor+1,c
  3022  00F5E4  0E10               	movlw	16
  3023  00F5E6  6E09               	movwf	___awdiv@divisor,c
  3024  00F5E8  EC90  F07B         	call	___awdiv	;wreg free
  3025  00F5EC  C012  F00F         	movff	UARTWriteByteHex@hexa,??_UARTWriteByteHex
  3026  00F5F0  C013  F010         	movff	UARTWriteByteHex@hexa+1,??_UARTWriteByteHex+1
  3027  00F5F4  5007               	movf	?___awdiv,w,c
  3028  00F5F6  260F               	addwf	??_UARTWriteByteHex,f,c
  3029  00F5F8  5008               	movf	?___awdiv+1,w,c
  3030  00F5FA  2210               	addwfc	??_UARTWriteByteHex+1,f,c
  3031  00F5FC  C00F  FFF6         	movff	??_UARTWriteByteHex,tblptrl
  3032  00F600  C010  FFF7         	movff	??_UARTWriteByteHex+1,tblptrh
  3033  00F604                     	if	0	;tblptru may be non-zero
  3034  00F604                     	endif
  3035  00F604                     	if	0	;tblptru may be non-zero
  3036  00F604                     	endif
  3037  00F604  0008               	tblrd		*
  3038  00F606  50F5               	movf	tablat,w,c
  3039  00F608  EC06  F07A         	call	_UARTWriteByte
  3040                           
  3041                           ;uart.c: 88:     UARTWriteByte(hexa[data % 16]);
  3042  00F60C  C014  F00F         	movff	UARTWriteByteHex@data,??_UARTWriteByteHex
  3043  00F610  0E0F               	movlw	15
  3044  00F612  160F               	andwf	??_UARTWriteByteHex,f,c
  3045  00F614  500F               	movf	??_UARTWriteByteHex,w,c
  3046  00F616  2412               	addwf	UARTWriteByteHex@hexa,w,c
  3047  00F618  6E10               	movwf	(??_UARTWriteByteHex+1)& (0+255),c
  3048  00F61A  0E00               	movlw	0
  3049  00F61C  2013               	addwfc	UARTWriteByteHex@hexa+1,w,c
  3050  00F61E  6E11               	movwf	(??_UARTWriteByteHex+2)& (0+255),c
  3051  00F620  C010  FFF6         	movff	??_UARTWriteByteHex+1,tblptrl
  3052  00F624  C011  FFF7         	movff	??_UARTWriteByteHex+2,tblptrh
  3053  00F628                     	if	0	;tblptru may be non-zero
  3054  00F628                     	endif
  3055  00F628                     	if	0	;tblptru may be non-zero
  3056  00F628                     	endif
  3057  00F628  0008               	tblrd		*
  3058  00F62A  50F5               	movf	tablat,w,c
  3059  00F62C  EC06  F07A         	call	_UARTWriteByte
  3060                           
  3061                           ;uart.c: 89:     UARTWriteByte(0x0D);
  3062  00F630  0E0D               	movlw	13
  3063  00F632  EC06  F07A         	call	_UARTWriteByte
  3064                           
  3065                           ;uart.c: 90:     UARTWriteByte(0x0A);
  3066  00F636  0E0A               	movlw	10
  3067  00F638  EC06  F07A         	call	_UARTWriteByte
  3068  00F63C  0012               	return		;funcret
  3069  00F63E                     __end_of_UARTWriteByteHex:
  3070                           	opt stack 0
  3071                           tblptru	equ	0xFF8
  3072                           tblptrh	equ	0xFF7
  3073                           tblptrl	equ	0xFF6
  3074                           tablat	equ	0xFF5
  3075                           prodh	equ	0xFF4
  3076                           prodl	equ	0xFF3
  3077                           intcon	equ	0xFF2
  3078                           wreg	equ	0xFE8
  3079                           status	equ	0xFD8
  3080                           
  3081 ;; *************** function ___awdiv *****************
  3082 ;; Defined at:
  3083 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/awdiv.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  dividend        2    6[COMRAM] int 
  3086 ;;  divisor         2    8[COMRAM] int 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  quotient        2   12[COMRAM] int 
  3089 ;;  sign            1   11[COMRAM] unsigned char 
  3090 ;;  counter         1   10[COMRAM] unsigned char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  2    6[COMRAM] int 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;Total ram usage:        8 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_UARTWriteByteHex
  3110 ;;		_UARTWriteByteDec
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text13
  3115  00F720                     __ptext13:
  3116                           	opt stack 0
  3117  00F720                     ___awdiv:
  3118                           	opt stack 29
  3119                           
  3120                           ;incstack = 0
  3121  00F720  0E00               	movlw	0
  3122  00F722  6E0C               	movwf	___awdiv@sign,c
  3123  00F724  AE0A               	btfss	___awdiv@divisor+1,7,c
  3124  00F726  D006               	goto	l425
  3125  00F728  6C09               	negf	___awdiv@divisor,c
  3126  00F72A  1E0A               	comf	___awdiv@divisor+1,f,c
  3127  00F72C  B0D8               	btfsc	status,0,c
  3128  00F72E  2A0A               	incf	___awdiv@divisor+1,f,c
  3129  00F730  0E01               	movlw	1
  3130  00F732  6E0C               	movwf	___awdiv@sign,c
  3131  00F734                     l425:
  3132  00F734  AE08               	btfss	___awdiv@dividend+1,7,c
  3133  00F736  D006               	goto	l426
  3134  00F738  6C07               	negf	___awdiv@dividend,c
  3135  00F73A  1E08               	comf	___awdiv@dividend+1,f,c
  3136  00F73C  B0D8               	btfsc	status,0,c
  3137  00F73E  2A08               	incf	___awdiv@dividend+1,f,c
  3138  00F740  0E01               	movlw	1
  3139  00F742  1A0C               	xorwf	___awdiv@sign,f,c
  3140  00F744                     l426:
  3141  00F744  0E00               	movlw	0
  3142  00F746  6E0E               	movwf	___awdiv@quotient+1,c
  3143  00F748  0E00               	movlw	0
  3144  00F74A  6E0D               	movwf	___awdiv@quotient,c
  3145  00F74C  5009               	movf	___awdiv@divisor,w,c
  3146  00F74E  100A               	iorwf	___awdiv@divisor+1,w,c
  3147  00F750  B4D8               	btfsc	status,2,c
  3148  00F752  D01C               	goto	l433
  3149  00F754  0E01               	movlw	1
  3150  00F756  6E0B               	movwf	___awdiv@counter,c
  3151  00F758  D004               	goto	l428
  3152  00F75A  90D8               	bcf	status,0,c
  3153  00F75C  3609               	rlcf	___awdiv@divisor,f,c
  3154  00F75E  360A               	rlcf	___awdiv@divisor+1,f,c
  3155  00F760  2A0B               	incf	___awdiv@counter,f,c
  3156  00F762                     l428:
  3157  00F762  AE0A               	btfss	___awdiv@divisor+1,7,c
  3158  00F764  D7FA               	goto	l429
  3159  00F766                     u270:
  3160  00F766  90D8               	bcf	status,0,c
  3161  00F768  360D               	rlcf	___awdiv@quotient,f,c
  3162  00F76A  360E               	rlcf	___awdiv@quotient+1,f,c
  3163  00F76C  5009               	movf	___awdiv@divisor,w,c
  3164  00F76E  5C07               	subwf	___awdiv@dividend,w,c
  3165  00F770  500A               	movf	___awdiv@divisor+1,w,c
  3166  00F772  5808               	subwfb	___awdiv@dividend+1,w,c
  3167  00F774  A0D8               	btfss	status,0,c
  3168  00F776  D005               	goto	l432
  3169  00F778  5009               	movf	___awdiv@divisor,w,c
  3170  00F77A  5E07               	subwf	___awdiv@dividend,f,c
  3171  00F77C  500A               	movf	___awdiv@divisor+1,w,c
  3172  00F77E  5A08               	subwfb	___awdiv@dividend+1,f,c
  3173  00F780  800D               	bsf	___awdiv@quotient,0,c
  3174  00F782                     l432:
  3175  00F782  90D8               	bcf	status,0,c
  3176  00F784  320A               	rrcf	___awdiv@divisor+1,f,c
  3177  00F786  3209               	rrcf	___awdiv@divisor,f,c
  3178  00F788  2E0B               	decfsz	___awdiv@counter,f,c
  3179  00F78A  D7ED               	goto	u270
  3180  00F78C                     l433:
  3181  00F78C  500C               	movf	___awdiv@sign,w,c
  3182  00F78E  B4D8               	btfsc	status,2,c
  3183  00F790  D004               	goto	l434
  3184  00F792  6C0D               	negf	___awdiv@quotient,c
  3185  00F794  1E0E               	comf	___awdiv@quotient+1,f,c
  3186  00F796  B0D8               	btfsc	status,0,c
  3187  00F798  2A0E               	incf	___awdiv@quotient+1,f,c
  3188  00F79A                     l434:
  3189  00F79A  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3190  00F79E  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3191  00F7A2  0012               	return	
  3192  00F7A4                     __end_of___awdiv:
  3193                           	opt stack 0
  3194                           tblptru	equ	0xFF8
  3195                           tblptrh	equ	0xFF7
  3196                           tblptrl	equ	0xFF6
  3197                           tablat	equ	0xFF5
  3198                           prodh	equ	0xFF4
  3199                           prodl	equ	0xFF3
  3200                           intcon	equ	0xFF2
  3201                           wreg	equ	0xFE8
  3202                           status	equ	0xFD8
  3203                           
  3204 ;; *************** function _UARTWriteByte *****************
  3205 ;; Defined at:
  3206 ;;		line 52 in file "uart.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  data            1    wreg     unsigned char 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  data            1    0[COMRAM] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;Total ram usage:        1 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;;		_UARTWriteStr
  3231 ;;		_UARTWriteStrLn
  3232 ;;		_UARTWriteByteHex
  3233 ;;		_UARTWriteByteDec
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text14
  3238  00F40C                     __ptext14:
  3239                           	opt stack 0
  3240  00F40C                     _UARTWriteByte:
  3241                           	opt stack 29
  3242                           
  3243                           ;incstack = 0
  3244                           ;UARTWriteByte@data stored from wreg
  3245  00F40C  6E01               	movwf	UARTWriteByte@data,c
  3246  00F40E                     
  3247                           ;uart.c: 54:     while (TXSTA1bits.TRMT == 0);
  3248  00F40E  A2AC               	btfss	4012,1,c	;volatile
  3249  00F410  D7FE               	goto	l877
  3250                           
  3251                           ;uart.c: 56:     TXREG1 = data;
  3252  00F412  C001  FFAD         	movff	UARTWriteByte@data,4013	;volatile
  3253  00F416  0012               	return		;funcret
  3254  00F418                     __end_of_UARTWriteByte:
  3255                           	opt stack 0
  3256                           tblptru	equ	0xFF8
  3257                           tblptrh	equ	0xFF7
  3258                           tblptrl	equ	0xFF6
  3259                           tablat	equ	0xFF5
  3260                           prodh	equ	0xFF4
  3261                           prodl	equ	0xFF3
  3262                           intcon	equ	0xFF2
  3263                           wreg	equ	0xFE8
  3264                           status	equ	0xFD8
  3265                           
  3266 ;; *************** function _ReadSXRegister *****************
  3267 ;; Defined at:
  3268 ;;		line 29 in file "SX1272.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  address         1    wreg     unsigned char 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  address         1    4[COMRAM] unsigned char 
  3273 ;;  RegValue        1    3[COMRAM] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      unsigned char 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;Total ram usage:        2 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    1
  3290 ;; This function calls:
  3291 ;;		_SPIReceive
  3292 ;;		_SPITransfer
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;;		_GetMode
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text15
  3300  00F482                     __ptext15:
  3301                           	opt stack 0
  3302  00F482                     _ReadSXRegister:
  3303                           	opt stack 29
  3304                           
  3305                           ;incstack = 0
  3306                           ;ReadSXRegister@address stored from wreg
  3307  00F482  6E05               	movwf	ReadSXRegister@address,c
  3308                           
  3309                           ;SX1272.c: 30:     uint8_t RegValue;;SX1272.c: 31:     LATBbits.LATB4 = 0;
  3310  00F484  988A               	bcf	3978,4,c	;volatile
  3311                           
  3312                           ;SX1272.c: 32:     address = address & 0x7F;
  3313  00F486  5005               	movf	ReadSXRegister@address,w,c
  3314  00F488  0B7F               	andlw	127
  3315  00F48A  6E05               	movwf	ReadSXRegister@address,c
  3316                           
  3317                           ;SX1272.c: 34:     SPITransfer(address);
  3318  00F48C  5005               	movf	ReadSXRegister@address,w,c
  3319  00F48E  EC14  F07A         	call	_SPITransfer
  3320                           
  3321                           ;SX1272.c: 35:     RegValue = SPIReceive(0x00);
  3322  00F492  0E00               	movlw	0
  3323  00F494  EC28  F07A         	call	_SPIReceive
  3324  00F498  6E04               	movwf	ReadSXRegister@RegValue,c
  3325                           
  3326                           ;SX1272.c: 36:     LATBbits.LATB4 = 1;
  3327  00F49A  888A               	bsf	3978,4,c	;volatile
  3328                           
  3329                           ;SX1272.c: 37:     return RegValue;
  3330  00F49C  5004               	movf	ReadSXRegister@RegValue,w,c
  3331  00F49E  0012               	return	
  3332  00F4A0                     __end_of_ReadSXRegister:
  3333                           	opt stack 0
  3334                           tblptru	equ	0xFF8
  3335                           tblptrh	equ	0xFF7
  3336                           tblptrl	equ	0xFF6
  3337                           tablat	equ	0xFF5
  3338                           prodh	equ	0xFF4
  3339                           prodl	equ	0xFF3
  3340                           intcon	equ	0xFF2
  3341                           wreg	equ	0xFE8
  3342                           status	equ	0xFD8
  3343                           
  3344 ;; *************** function _SPITransfer *****************
  3345 ;; Defined at:
  3346 ;;		line 38 in file "spi.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  data_out        1    wreg     unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  data_out        1    1[COMRAM] unsigned char 
  3351 ;;  dummy_byte      1    0[COMRAM] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		wreg
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;Total ram usage:        2 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_WriteSXRegister
  3371 ;;		_ReadSXRegister
  3372 ;;		_PrintSXRegContent
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           	psect	text16
  3377  00F428                     __ptext16:
  3378                           	opt stack 0
  3379  00F428                     _SPITransfer:
  3380                           	opt stack 29
  3381                           
  3382                           ;incstack = 0
  3383                           ;SPITransfer@data_out stored from wreg
  3384  00F428  6E02               	movwf	SPITransfer@data_out,c
  3385                           
  3386                           ;spi.c: 40:     uint8_t dummy_byte;;spi.c: 41:     dummy_byte = SSP2BUF;
  3387  00F42A  CF6F F001          	movff	3951,SPITransfer@dummy_byte	;volatile
  3388                           
  3389                           ;spi.c: 42:     PIR3bits.SSP2IF = 0;
  3390  00F42E  9EA4               	bcf	4004,7,c	;volatile
  3391                           
  3392                           ;spi.c: 43:     SSP2BUF = data_out;
  3393  00F430  C002  FF6F         	movff	SPITransfer@data_out,3951	;volatile
  3394  00F434  BEA4               	btfsc	4004,7,c	;volatile
  3395  00F436  0012               	return	
  3396  00F438  D7FD               	goto	l113
  3397  00F43A                     __end_of_SPITransfer:
  3398                           	opt stack 0
  3399                           tblptru	equ	0xFF8
  3400                           tblptrh	equ	0xFF7
  3401                           tblptrl	equ	0xFF6
  3402                           tablat	equ	0xFF5
  3403                           prodh	equ	0xFF4
  3404                           prodl	equ	0xFF3
  3405                           intcon	equ	0xFF2
  3406                           wreg	equ	0xFE8
  3407                           status	equ	0xFD8
  3408                           
  3409 ;; *************** function _SPIReceive *****************
  3410 ;; Defined at:
  3411 ;;		line 47 in file "spi.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  data_out        1    wreg     unsigned char 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  data_out        1    1[COMRAM] unsigned char 
  3416 ;;  data_in         1    2[COMRAM] unsigned char 
  3417 ;;  dummy_byte      1    0[COMRAM] unsigned char 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      unsigned char 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;Total ram usage:        3 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_ReadSXRegister
  3437 ;;		_PrintSXRegContent
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text17
  3442  00F450                     __ptext17:
  3443                           	opt stack 0
  3444  00F450                     _SPIReceive:
  3445                           	opt stack 29
  3446                           
  3447                           ;incstack = 0
  3448                           ;SPIReceive@data_out stored from wreg
  3449  00F450  6E02               	movwf	SPIReceive@data_out,c
  3450                           
  3451                           ;spi.c: 49:     uint8_t data_in, dummy_byte;;spi.c: 50:     dummy_byte = SSP2BUF;
  3452  00F452  CF6F F001          	movff	3951,SPIReceive@dummy_byte	;volatile
  3453                           
  3454                           ;spi.c: 51:     PIR3bits.SSP2IF = 0;
  3455  00F456  9EA4               	bcf	4004,7,c	;volatile
  3456                           
  3457                           ;spi.c: 52:     SSP2BUF = data_out;
  3458  00F458  C002  FF6F         	movff	SPIReceive@data_out,3951	;volatile
  3459  00F45C  AEA4               	btfss	4004,7,c	;volatile
  3460  00F45E  D7FE               	goto	l119
  3461                           
  3462                           ;spi.c: 54:     data_in = SSP2BUF;
  3463  00F460  CF6F F003          	movff	3951,SPIReceive@data_in	;volatile
  3464                           
  3465                           ;spi.c: 55:     return(data_in);
  3466  00F464  5003               	movf	SPIReceive@data_in,w,c
  3467  00F466  0012               	return		;funcret
  3468  00F468                     __end_of_SPIReceive:
  3469                           	opt stack 0
  3470                           tblptru	equ	0xFF8
  3471                           tblptrh	equ	0xFF7
  3472                           tblptrl	equ	0xFF6
  3473                           tablat	equ	0xFF5
  3474                           prodh	equ	0xFF4
  3475                           prodl	equ	0xFF3
  3476                           intcon	equ	0xFF2
  3477                           wreg	equ	0xFE8
  3478                           status	equ	0xFD8
  3479                           
  3480 ;; *************** function _AntennaRX *****************
  3481 ;; Defined at:
  3482 ;;		line 42 in file "RF_LoRa_868_SO.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;Total ram usage:        1 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_main
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text18
  3510  00F43A                     __ptext18:
  3511                           	opt stack 0
  3512  00F43A                     _AntennaRX:
  3513                           	opt stack 30
  3514                           
  3515                           ;RF_LoRa_868_SO.c: 43:     LATCbits.LATC1 = 0;
  3516                           
  3517                           ;incstack = 0
  3518  00F43A  928B               	bcf	3979,1,c	;volatile
  3519                           
  3520                           ;RF_LoRa_868_SO.c: 44:     LATCbits.LATC2 = 0;
  3521  00F43C  948B               	bcf	3979,2,c	;volatile
  3522                           
  3523                           ;RF_LoRa_868_SO.c: 45:     _delay((unsigned long)((10)*(1000000UL/4000.0)));
  3524  00F43E  0E04               	movlw	4
  3525  00F440  6E01               	movwf	??_AntennaRX& (0+255),c
  3526  00F442  0E3E               	movlw	62
  3527  00F444                     u487:
  3528  00F444  2EE8               	decfsz	wreg,f,c
  3529  00F446  D7FE               	bra	u487
  3530  00F448  2E01               	decfsz	??_AntennaRX& (0+255),f,c
  3531  00F44A  D7FC               	bra	u487
  3532                           
  3533                           ;RF_LoRa_868_SO.c: 46:     LATCbits.LATC1 = 1;
  3534  00F44C  828B               	bsf	3979,1,c	;volatile
  3535  00F44E  0012               	return		;funcret
  3536  00F450                     __end_of_AntennaRX:
  3537                           	opt stack 0
  3538                           tblptru	equ	0xFF8
  3539                           tblptrh	equ	0xFF7
  3540                           tblptrl	equ	0xFF6
  3541                           tablat	equ	0xFF5
  3542                           prodh	equ	0xFF4
  3543                           prodl	equ	0xFF3
  3544                           intcon	equ	0xFF2
  3545                           wreg	equ	0xFE8
  3546                           status	equ	0xFD8
  3547                           tblptru	equ	0xFF8
  3548                           tblptrh	equ	0xFF7
  3549                           tblptrl	equ	0xFF6
  3550                           tablat	equ	0xFF5
  3551                           prodh	equ	0xFF4
  3552                           prodl	equ	0xFF3
  3553                           intcon	equ	0xFF2
  3554                           wreg	equ	0xFE8
  3555                           status	equ	0xFD8
  3556                           
  3557                           	psect	rparam
  3558  0000                     tblptru	equ	0xFF8
  3559                           tblptrh	equ	0xFF7
  3560                           tblptrl	equ	0xFF6
  3561                           tablat	equ	0xFF5
  3562                           prodh	equ	0xFF4
  3563                           prodl	equ	0xFF3
  3564                           intcon	equ	0xFF2
  3565                           wreg	equ	0xFE8
  3566                           status	equ	0xFD8


Data Sizes:
    Strings     1051
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    UARTWriteByteHex@hexa	PTR unsigned char  size(2) Largest target is 17
		 -> STR_60(CODE[17]), 

    UARTWriteStrLn@string	PTR unsigned char  size(2) Largest target is 38
		 -> STR_36(CODE[33]), STR_35(CODE[2]), STR_34(CODE[27]), STR_33(CODE[20]), 
		 -> STR_32(CODE[24]), STR_31(CODE[23]), STR_30(CODE[8]), STR_29(CODE[23]), 
		 -> STR_28(CODE[13]), STR_27(CODE[11]), STR_26(CODE[11]), STR_25(CODE[38]), 
		 -> STR_24(CODE[12]), STR_22(CODE[24]), STR_21(CODE[12]), STR_20(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[15]), STR_13(CODE[2]), 
		 -> STR_12(CODE[18]), STR_11(CODE[2]), STR_9(CODE[26]), STR_8(CODE[2]), 
		 -> STR_6(CODE[22]), STR_5(CODE[2]), STR_4(CODE[31]), STR_3(CODE[2]), 
		 -> STR_2(CODE[19]), STR_1(CODE[25]), 

    UARTWriteStr@string	PTR unsigned char  size(2) Largest target is 32
		 -> STR_59(CODE[19]), STR_58(CODE[29]), STR_57(CODE[19]), STR_56(CODE[25]), 
		 -> STR_55(CODE[20]), STR_54(CODE[28]), STR_53(CODE[27]), STR_52(CODE[27]), 
		 -> STR_51(CODE[26]), STR_50(CODE[23]), STR_49(CODE[23]), STR_48(CODE[19]), 
		 -> STR_47(CODE[24]), STR_46(CODE[27]), STR_45(CODE[27]), STR_44(CODE[23]), 
		 -> STR_43(CODE[13]), STR_42(CODE[13]), STR_41(CODE[17]), STR_40(CODE[19]), 
		 -> STR_39(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), STR_23(CODE[17]), 
		 -> STR_19(CODE[32]), STR_18(CODE[21]), STR_17(CODE[30]), STR_10(CODE[19]), 
		 -> STR_7(CODE[19]), 


Critical Paths under _main in COMRAM

    _main->_GetMode
    _UARTWriteByteDec->___awdiv
    _InitModule->_WriteSXRegister
    _WriteSXRegister->_ReadSXRegister
    _GetMode->_UARTWriteByteHex
    _UARTWriteStrLn->_UARTWriteByte
    _UARTWriteStr->_UARTWriteByte
    _UARTWriteByteHex->___awdiv
    ___awdiv->___awmod
    _ReadSXRegister->_SPIReceive

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     4      5   18105
                                             24 COMRAM     9     4      5
                          _AntennaRX
                            _GetMode
                         _InitModule
                     _InitRFLoRaPins
                     _ReadSXRegister
                      _ResetRFModule
                            _SPIInit
                           _UARTInit
                      _UARTWriteByte
                   _UARTWriteByteDec
                   _UARTWriteByteHex
                       _UARTWriteStr
                     _UARTWriteStrLn
                    _WriteSXRegister
 ---------------------------------------------------------------------------------
 (1) _UARTWriteByteDec                                     1     1      0    1437
                                             14 COMRAM     1     1      0
                      _UARTWriteByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetRFModule                                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitRFLoRaPins                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitModule                                           0     0      0    2438
                    _WriteSXRegister
 ---------------------------------------------------------------------------------
 (1) _WriteSXRegister                                      2     1      1    2438
                                              5 COMRAM     2     1      1
                     _ReadSXRegister (ARG)
                        _SPITransfer
 ---------------------------------------------------------------------------------
 (1) _GetMode                                              4     4      0    5802
                                             20 COMRAM     4     4      0
                     _ReadSXRegister
                   _UARTWriteByteHex
                       _UARTWriteStr
                     _UARTWriteStrLn
 ---------------------------------------------------------------------------------
 (1) _UARTWriteStrLn                                       5     3      2    2385
                                              1 COMRAM     5     3      2
                      _UARTWriteByte
 ---------------------------------------------------------------------------------
 (1) _UARTWriteStr                                         5     3      2    2309
                                              1 COMRAM     5     3      2
                      _UARTWriteByte
 ---------------------------------------------------------------------------------
 (1) _UARTWriteByteHex                                     6     6      0     860
                                             14 COMRAM     6     6      0
                      _UARTWriteByte
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _UARTWriteByte                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadSXRegister                                       2     2      0      90
                                              3 COMRAM     2     2      0
                         _SPIReceive
                        _SPITransfer
 ---------------------------------------------------------------------------------
 (2) _SPITransfer                                          2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPIReceive                                           3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _AntennaRX                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AntennaRX
   _GetMode
     _ReadSXRegister
       _SPIReceive
       _SPITransfer
     _UARTWriteByteHex
       _UARTWriteByte
       ___awdiv
         ___awmod (ARG)
     _UARTWriteStr
       _UARTWriteByte
     _UARTWriteStrLn
       _UARTWriteByte
   _InitModule
     _WriteSXRegister
       _ReadSXRegister (ARG)
         _SPIReceive
         _SPITransfer
       _SPITransfer (ARG)
   _InitRFLoRaPins
   _ReadSXRegister
     _SPIReceive
     _SPITransfer
   _ResetRFModule
   _SPIInit
   _UARTInit
   _UARTWriteByte
   _UARTWriteByteDec
     _UARTWriteByte
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _UARTWriteByteHex
     _UARTWriteByte
     ___awdiv
       ___awmod (ARG)
   _UARTWriteStr
     _UARTWriteByte
   _UARTWriteStrLn
     _UARTWriteByte
   _WriteSXRegister
     _ReadSXRegister (ARG)
       _SPIReceive
       _SPITransfer
     _SPITransfer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     21      21       1       34.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BIGRAM             F37      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jun  5 12:34:37 2019

   __end_of_InitRFLoRaPins F428      __end_of_ResetRFModule F4E6                         l40 FAA6  
                       l42 FB00                         l43 FB44                         l35 FA58  
                       l44 FB34                         l37 FA60                         l70 F8D6  
                       l80 F93E                         l72 F8F0                         l73 F968  
                       l81 F94C                         l82 F95A                         l74 F8F8  
                       l76 F906                         l77 F914                         l69 F8E4  
                       l78 F922                         l79 F930               ___awdiv@sign 000C  
              _SPITransfer F428           _UARTWriteByteDec F6AE           _UARTWriteByteHex F5D0  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                        l113 F434                        l119 F45C  
                      l172 F59C                        l173 F576                        l166 F548  
                      l167 F522                        l432 F782                        l433 F78C  
                      l425 F734                        l441 F674                        l434 F79A  
                      l426 F744                        l442 F66C                        l428 F762  
                      l429 F75A                        l445 F68C                        l446 F696  
                      l438 F652                        l447 F6A4                        l439 F65E  
                      l877 F40E               __CFG_CPB$OFF 000000                        u270 F766  
                      u350 F678               __CFG_CPD$OFF 000000                        u447 F9F2  
                      u457 FA4A                        u467 F4C8                        u477 F4DA  
                      u487 F444               ___awmod@sign 0006                        wreg 000FE8  
               _TXSTA1bits 000FAC               __CFG_LVP$OFF 000000                       STR_1 FD94  
                     STR_2 FEF4                       STR_3 FC48                       STR_4 FC4A  
                     STR_5 FC48                       STR_6 FE68                       STR_7 FF07  
                     STR_8 FC48                       STR_9 FD61      SPITransfer@dummy_byte 0001  
                     _PEIE 007F96                       _RCIE 007CED                       _RCIF 007CF5  
        GetMode@masked_reg 0017                main@reg_val 0021      ReadSXRegister@address 0005  
                     _main F9AA            __end_of_SPIInit F4BE              __CFG_BORV$190 000000  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
            __CFG_IESO$OFF 000000            __end_of_GetMode F9AA     ReadSXRegister@RegValue 0004  
             ___param_bank 000000            ?_InitRFLoRaPins 0001               _BAUDCON1bits 000FB8  
                    ?_main 0019            __end_of___awdiv F7A4                      STR_10 FF07  
                    STR_11 FC48                      STR_20 FC48                      STR_12 FF1A  
                    STR_13 FC48                      STR_21 FFD4                      STR_30 FFF6  
                    STR_14 FF92                      STR_22 FDDD                      STR_15 FC48  
                    STR_23 FF70                      STR_31 FDF5                      STR_16 FC48  
                    STR_24 FFC8                      STR_40 FECE                      STR_32 FDAD  
                    STR_41 FF81                      STR_33 FE93                      STR_17 FC69  
                    STR_25 FBE3                      STR_26 FFE0                      STR_42 FFBB  
                    STR_18 FE7E                      STR_50 FE3A                      STR_34 FCC0  
                    STR_27 FFEB                      STR_43 FFAE                      STR_51 FD47  
                    STR_19 FC2A                      STR_28 FFA1                      STR_60 FF2C  
                    STR_44 FE51                      STR_52 FCF6                      STR_36 FC09  
          __end_of___awmod F6AE                      STR_37 FF4E                      STR_29 FE0C  
                    STR_45 FD2C                      STR_53 FCDB                      STR_38 FF5F  
                    STR_46 FD11                      STR_54 FCA4                      STR_39 FF3D  
                    STR_55 FEA7                      STR_47 FDC5                      STR_56 FD7B  
                    STR_57 FEE1                      STR_49 FE23                      STR_58 FC87  
                    STR_59 FEBB            ___awdiv@divisor 0009            ___awdiv@counter 000B  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
         __end_of_UARTInit F51C              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000       UARTWriteByteDec@data 000F  
       __CFG_MCLRE$EXTMCLR 000000                      main@i 0020            UARTWriteStrLn@i 0006  
                    tablat 000FF5             _ReadSXRegister F482                      status 000FD8  
           __CFG_HFOFST$ON 000000       UARTWriteByteHex@data 0014       UARTWriteByteHex@hexa 0012  
              ?_SPIReceive 0001            __initialization F402                 _InitModule F7A4  
             __end_of_main FBE2                     ??_main 001E              __activetblptr 000002  
       __size_of_AntennaRX 0016                  ??_SPIInit 0001           ___awdiv@dividend 0007  
   __end_of_ReadSXRegister F4A0             __CFG_WDTEN$OFF 000000                     _RCREG1 000FAE  
                   _RCSTA1 000FAB                  ??_GetMode 0015                     _SPBRG1 000FAF  
                   _TXREG1 000FAD                     _TXSTA1 000FAC             __CFG_XINST$OFF 000000  
                ??___awdiv 000B             __CFG_STVREN$ON 000000                  ??___awmod 0005  
         ___awdiv@quotient 000D            ___awmod@divisor 0003            ___awmod@counter 0005  
       SPIReceive@data_out 0002               __mediumconst FBE2                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8        __size_of_SPIReceive 0018  
          ?_ReadSXRegister 0001                 __accesstop 0060    __end_of__initialization F402  
 __end_of_UARTWriteByteDec F720   __end_of_UARTWriteByteHex F63E            __CFG_PBADEN$OFF 000000  
            ___rparam_used 000001          __end_of_AntennaRX F450                ?_InitModule 0001  
           __pcstackCOMRAM 0001                  ?_UARTInit 0001   __size_of_WriteSXRegister 001A  
             ?_SPITransfer 0001        main@RXNumberOfBytes 001F      __end_of_UARTWriteByte F418  
  __size_of_UARTWriteStrLn 0060            __CFG_PLLCFG$OFF 000000           ??_InitRFLoRaPins 0001  
       __CFG_CCP2MX$PORTC1 000000                 ??_UARTInit 0003         __CFG_CCP3MX$PORTB5 000000  
                  _SPBRGH1 000FB0                    _SSP2BUF 000F6F        __size_of_InitModule 00F2  
                  _SPIInit F4A0     __size_of_ResetRFModule 0028                    _GetMode F896  
        UARTWriteByte@data 0001            __CFG_PWRTEN$OFF 000000               ??_SPIReceive 0001  
                  __Hparam 0000                    __Lparam 0000                    ___awdiv F720  
                  ___awmod F63E              ?_UARTWriteStr 0002                    __pcinit F402  
                  __ramtop 1000                    __ptext0 F9AA                    __ptext1 F6AE  
                  __ptext2 F63E                    __ptext3 F4E6                    __ptext4 F4A0  
                  __ptext5 F4BE                    __ptext6 F418                    __ptext7 F7A4  
                  __ptext8 F468                    __ptext9 F896           ___awmod@dividend 0001  
        ??_WriteSXRegister 0007         __end_of_SPIReceive F468       end_of_initialization F402  
            __Lmediumconst FBE2             ??_UARTWriteStr 0004              _ResetRFModule F4BE  
     __size_of_SPITransfer 0012           __CFG_FOSC$INTIO7 000000           ??_ReadSXRegister 0004  
                _TRISBbits 000F93                  _TRISCbits 000F94             _UARTWriteStrLn F570  
        ?_UARTWriteByteDec 0001          ?_UARTWriteByteHex 0001         ??_UARTWriteByteDec 000F  
       ??_UARTWriteByteHex 000F               ??_InitModule 0008             ?_ResetRFModule 0001  
                _AntennaRX F43A       UARTWriteStrLn@string 0002          __size_of_UARTInit 0036  
      start_initialization F402     __end_of_UARTWriteStrLn F5D0         __end_of_InitModule F896  
               ?_AntennaRX 0001          SPIReceive@data_in 0003            ?_UARTWriteStrLn 0002  
                 ?_SPIInit 0001       __end_of_UARTWriteStr F570                   ?_GetMode 0001  
   __size_of_UARTWriteByte 000C            ??_ResetRFModule 0001              __pmediumconst FBE2  
                 ?___awdiv 0007                   ?___awmod 0001            _WriteSXRegister F468  
         __CFG_PRICLKEN$ON 000000                   _LATBbits 000F8A                   _LATCbits 000F8B  
                 _PIE1bits 000F9D                   _PIR3bits 000FA4           __CFG_WDTPS$32768 000000  
      SPITransfer@data_out 0002                   _SSP2CON1 000F6C                   _UARTInit F4E6  
              ??_AntennaRX 0001    __size_of_InitRFLoRaPins 0010              _UARTWriteByte F40C  
            UARTWriteStr@i 0006           __size_of_SPIInit 001E           __size_of_GetMode 0114  
  __end_of_WriteSXRegister F482                   __Hrparam 0000                   __Lrparam 0000  
       __CFG_BOREN$SBORDIS 000000          __CFG_P2BMX$PORTB5 000000           __size_of___awdiv 0084  
         __size_of___awmod 0070              ??_SPITransfer 0001             ?_UARTWriteByte 0001  
__size_of_UARTWriteByteDec 0072  __size_of_UARTWriteByteHex 006E                 _ANSELBbits 000F39  
               _ANSELCbits 000F3A      __size_of_UARTWriteStr 0054                   __ptext10 F570  
                 __ptext11 F51C                   __ptext12 F5D0                   __ptext13 F720  
                 __ptext14 F40C                   __ptext15 F482                   __ptext16 F428  
                 __ptext17 F450                   __ptext18 F43A              __size_of_main 0238  
      WriteSXRegister@data 0006               _UARTWriteStr F51C                   main@argc 0019  
                 main@argv 001B               _SSP2STATbits 000F6D           ??_UARTWriteStrLn 0004  
       UARTWriteStr@string 0002        __end_of_SPITransfer F43A    __size_of_ReadSXRegister 001E  
               _RCSTA1bits 000FAB           ?_WriteSXRegister 0006                 GetMode@reg 0018  
   WriteSXRegister@address 0007            ??_UARTWriteByte 0001             _InitRFLoRaPins F418  
        __CFG_T3CMX$PORTC0 000000       SPIReceive@dummy_byte 0001                 _SPIReceive F450  
         UARTInit@baudRate 0001  
